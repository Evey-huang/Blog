{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"7f70786f20763e089df6a0b5256b0dd0472b8c3a","modified":1534820187243},{"_id":"themes/next/.git","hash":"042ff34da0707513a5681580b37513c890c671ef","modified":1534728698141},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1534728698150},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1534728698152},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1534728698150},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1534728698150},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1534728698153},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1534728698153},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1534728698152},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1534728698153},{"_id":"themes/next/README.md","hash":"44b28d995681a7c48bfe3d0577d6203812d07e59","modified":1534728698154},{"_id":"themes/next/README.cn.md","hash":"5d8af3d8de8d3926126a738519e97c8442b0effe","modified":1534728698154},{"_id":"themes/next/_config.yml","hash":"f683d3125d80ce742b7441bc6da4f67f70892ac9","modified":1535540466642},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1534728698153},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1534728698155},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1534728698153},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1534728698155},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1534728698172},{"_id":"source/about/index.md","hash":"85c7084887467cf5623440945862f9e5470f192a","modified":1535531497744},{"_id":"source/_posts/Fibonacci.md","hash":"3ee7be5927162e8eb3d9d1f8fb6114d313f747d0","modified":1534817698989},{"_id":"source/_posts/Echarts几种常见图标和自适应.md","hash":"be437aac72a88bc0114f095a024be15ac3398ad5","modified":1534491336755},{"_id":"source/categories/index.md","hash":"9a8b563dba4fd9b95d0a7ad77f0a6d9dcccd6866","modified":1534491336767},{"_id":"source/_posts/.DS_Store","hash":"052948bb6bc515339fcb1c4df8fd20f5dcc51f93","modified":1534817517993},{"_id":"source/_posts/JS数组之排列组合.md","hash":"27d92a56371fe9c19b166a332f9bf2042720d714","modified":1534491336756},{"_id":"source/_posts/Ng-Tung-Shan.md","hash":"08f927b6991978a5d0070077ed239caac1db0571","modified":1534491336756},{"_id":"source/_posts/Palindrome.md","hash":"b190a0126b9bd242b4f03af8375576fd190717db","modified":1534817840028},{"_id":"source/_posts/Typora.md","hash":"4e3f366b0d6a8ef3692ace574f896610baa96046","modified":1534491336756},{"_id":"source/_posts/VSCode插件配置.md","hash":"fd81603379cda99fa6695dc8af369d34dbeee25a","modified":1534491336756},{"_id":"source/_posts/array-sum.md","hash":"c60be67b5be6ba34ee1bc0294eb12cfaa4a0e30e","modified":1534491336756},{"_id":"source/_posts/cailan.md","hash":"a517bd17a3ec1f910414d794d2bbb92f8ec3a9c5","modified":1534491336757},{"_id":"source/_posts/center.md","hash":"b6b6a6498cc1e16f285a2ea01f5acb4b8aa6e1f6","modified":1534491336757},{"_id":"source/_posts/e2e端到端测试使用ES6遇到的问题及解决方案.md","hash":"c24f7d06931a399f15d64f79253bf34e27746fac","modified":1534491336757},{"_id":"source/_posts/eleValidatePackage.md","hash":"809b66d77513cf5adf84cde16ac1fe6e4e632b78","modified":1534491336758},{"_id":"source/_posts/es6.md","hash":"4f54c7da47924ea7bb7ef7973b379ccf678c5e88","modified":1534491336758},{"_id":"source/_posts/danlian.md","hash":"989f91bfbf182aa9d5f1cf4a5676f0d75548f614","modified":1534491336757},{"_id":"source/_posts/elemeValidate.md","hash":"d57df549b1e125f8e77c6ff560aa56958a27322a","modified":1534491336758},{"_id":"source/_posts/eyi.md","hash":"7d0355ed0f20e0b0c4465f0a51c09f3db85fad7d","modified":1534491336759},{"_id":"source/_posts/font-animation.md","hash":"d572fe2eaa25802eee71c6f0da149fe3259d882c","modified":1534491336759},{"_id":"source/_posts/github1.md","hash":"48367308dffc7229bfbdef6166b80bd000af3b9f","modified":1534491336759},{"_id":"source/_posts/greatestCommonDivisor.md","hash":"3968610c0cb227463bec55cd53c284e391012cd6","modified":1534818033271},{"_id":"source/_posts/hexo-next.md","hash":"86bb1227fc752f31a477dccc49b79d5e5da83124","modified":1535539394960},{"_id":"source/_posts/hexo-canvas.md","hash":"d13100cb4cd2a820e62931921d193cc91c8be591","modified":1535540326754},{"_id":"source/_posts/hexo1.md","hash":"15648654d829163aa16fa67885e50a236a9e3077","modified":1535532198810},{"_id":"source/_posts/kanjian.md","hash":"3ca016e4e4d215e9187d561d885c73b3a68a2325","modified":1534491336760},{"_id":"source/_posts/maokong.md","hash":"8b7efc622c948b9368e70e04f649dc620d978983","modified":1534491336760},{"_id":"source/_posts/jenkins.md","hash":"f252d44bb4548702e703f260b7cca0f8898dddde","modified":1534491336760},{"_id":"source/_posts/newyears.md","hash":"c58a7aabafc7dcd9d372a58cdfb9a03626fc317a","modified":1534491336761},{"_id":"source/_posts/object.md","hash":"1d7b04e650fab4408a8c4e6cd04520c94303267c","modified":1534491336761},{"_id":"source/_posts/nuxt-element.md","hash":"243832850cd2443079c797559a7e31b3f7b9d8c4","modified":1534491336761},{"_id":"source/_posts/npm安全审核.md","hash":"86f0abb2343c3f83678b69086a90f6c872a30698","modified":1534817262536},{"_id":"source/_posts/pic-slide.md","hash":"b920ebb2c2c0c8a8dd707c6e04883c780ad1bbfa","modified":1534491336761},{"_id":"source/_posts/regexp1.md","hash":"96418bbf10d00cdd233ca53c06519c03027e0e8e","modified":1534491336762},{"_id":"source/_posts/regexp.md","hash":"84d39a08e34ceb4159484500df936d53942c819c","modified":1534491336762},{"_id":"source/_posts/submodules.md","hash":"95a58b19f6fccf7f826482e5455ed4ef79393054","modified":1534491336762},{"_id":"source/_posts/reverse.md","hash":"821194f49543376a7b956891b59bb58fa9c91cb6","modified":1534818479718},{"_id":"source/_posts/type-of-date.md","hash":"6d23ce8c4ee5b4fc97949e223fab57b04faf2cba","modified":1534818701360},{"_id":"source/_posts/ubuntu1.md","hash":"f739efe7685091c9dd216a1f8884fc4becc8f18f","modified":1534491336763},{"_id":"source/_posts/ubuntu下使用和配置shadowsocks.md","hash":"df2a8aa8efb037dfdebfaf3deb0fa6b212a077b4","modified":1534491336763},{"_id":"source/_posts/ubuntu安装WPS.md","hash":"21dca7139dbd0e2974e01842f2baf097a27051dd","modified":1534491336763},{"_id":"source/_posts/ubuntu安装Mongodb.md","hash":"866720d1ee83e7d20d72fe2d1f12ba92f76104bd","modified":1534496576288},{"_id":"source/_posts/ubuntu安装软件.md","hash":"d9cfab0c87f7b7c347dd996c8ce57271799413d0","modified":1534491336764},{"_id":"source/_posts/unit-test.md","hash":"ebdb8b06fe2cd822e43c597cbef670892f01e0c5","modified":1534491336764},{"_id":"source/_posts/unit.md","hash":"c4971c55ca1f86e446830ce99db68be65a902a7b","modified":1534491336764},{"_id":"source/_posts/vue-start.md","hash":"0d81485cccda4f65d21060066b1266080405fe0a","modified":1534491336764},{"_id":"source/_posts/vuelidate.md","hash":"ac0b04621e246e613004d94265e4eb9e7eca6447","modified":1534491336764},{"_id":"source/_posts/vue-npm.md","hash":"529d51b703f298e4fbf5080d7ab60357dc6392ea","modified":1534818294470},{"_id":"source/_posts/web.md","hash":"ce8f092f179955f0cd54806eae78deca01f616e1","modified":1534491336764},{"_id":"source/_posts/website-address.md","hash":"17af6d569187adfb67ba23a05070d3ea641213cb","modified":1534491336765},{"_id":"source/_posts/xmind.md","hash":"4cbc4273626e18852dad8cbe96d2c7a0513bc649","modified":1534491336766},{"_id":"source/_posts/webpack.md","hash":"f557b5ee26c114edb4964b8bd37930f9f9e0e68c","modified":1534817407875},{"_id":"source/_posts/使用NAP安装包失败解决办法.md","hash":"8802b29079036f9495f81cb36c63edaf3f0fd6d8","modified":1534817323426},{"_id":"source/_posts/六种方法实现JavaScript数组去重.md","hash":"6f4b229a7a3195036e253cbba3e8e672fa0daae1","modified":1534491336766},{"_id":"source/_posts/前端开发工程师面试问题.md","hash":"83318234adb5bc7c8b236e527a66bd96ab443f3b","modified":1534491336766},{"_id":"source/_posts/前端开发工程师笔试题.md","hash":"8192af0192580f609ecea8e05bce426f9bb6152f","modified":1534820054725},{"_id":"source/tags/index.md","hash":"fd3c088cda02c2e6ce6a97aceb497f717fdda828","modified":1534491336767},{"_id":"source/_posts/在ubuntu中使用ls和xargs命令转换png和jpg.md","hash":"78e54b5d85fa3cac05323d45dd99d8842e2f2161","modified":1534491336766},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1534728698151},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1534728698152},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1534728698152},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1534728698152},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1534728698155},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1534728698156},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1534728698156},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1534728698156},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1534728698156},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1534728698156},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1534728698156},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1534728698157},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1534728698156},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1534728698157},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1534728698157},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1534728698157},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1534728698158},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1534728698157},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1534728698158},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1534728698158},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1534728698159},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1534728698170},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1534728698171},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1534728698171},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1534728698171},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1534728698172},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1534728698172},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1534728698172},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1534728698172},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1534728698172},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1534728698241},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1534728698241},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1534728698241},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534728698194},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1534728698158},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1534728698158},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1534728698159},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1534728698159},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1534728698159},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1534728698159},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1534728698160},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1534728698160},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1534728698160},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1534728698161},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1534728698161},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1534728698162},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1534728698162},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1534728698162},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1534728698162},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1534728698164},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1534728698164},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1534728698165},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1534728698168},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1534728698168},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1534728698168},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1534728698168},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1534728698169},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1534728698169},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1534728698169},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1534728698173},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1534728698173},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1534728698173},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1534728698173},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1534728698173},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1534728698173},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1534728698173},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1534728698174},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1534728698174},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1534728698194},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1534728698195},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1534728698196},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1534728698196},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1534728698195},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1534728698197},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1534728698197},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1534728698198},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1534728698198},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1534728698199},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1534728698198},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1534728698198},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534728698199},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534728698199},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1534728698199},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1534728698198},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1534728698200},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1534728698200},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1534728698199},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534728698164},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534728698165},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534728698188},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534728698188},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534728698188},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534728698192},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534728698194},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1534728698161},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1534728698162},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1534728698163},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1534728698163},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1534728698163},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1534728698163},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1534728698163},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1534728698163},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1534728698164},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1534728698164},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1534728698164},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1534728698165},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1534728698165},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1534728698165},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1534728698166},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1534728698165},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1534728698166},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1534728698166},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1534728698166},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1534728698166},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1534728698166},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1534728698166},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1534728698166},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1534728698167},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1534728698167},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1534728698167},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1534728698167},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1534728698167},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1534728698167},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1534728698167},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1534728698168},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1534728698168},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1534728698168},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1534728698168},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1534728698169},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1534728698169},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1534728698170},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1534728698170},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1534728698187},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1534728698188},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1534728698188},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1534728698188},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1534728698192},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1534728698192},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1534728698193},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1534728698193},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1534728698201},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1534728698201},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1534728698200},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1534728698201},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1534728698201},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1534728698201},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1534728698202},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1534728698202},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1534728698202},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1534728698203},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1534728698202},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1534728698209},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1534728698206},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1534728698209},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1534728698209},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1534728698213},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1534728698209},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1534728698213},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1534728698214},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1534728698214},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1534728698215},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1534728698215},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1534728698215},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1534728698215},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1534728698216},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1534728698225},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1534728698225},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1534728698225},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1534728698226},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1534728698226},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1534728698226},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1534728698226},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1534728698227},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1534728698227},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1534728698228},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1534728698228},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1534728698227},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1534728698227},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1534728698228},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1534728698227},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1534728698228},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1534728698228},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1534728698229},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1534728698229},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1534728698230},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1534728698230},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1534728698231},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1534728698230},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1534728698231},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1534728698232},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1534728698232},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1534728698238},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1534728698238},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1534728698240},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1534728698233},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1534728698240},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1534728698240},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1534728698225},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1534728698169},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1534728698169},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1534728698174},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1534728698174},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1534728698174},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1534728698174},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1534728698174},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1534728698177},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1534728698181},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1534728698186},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1534728698186},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1534728698186},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1534728698187},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1534728698187},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1534728698187},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1534728698186},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1534728698189},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1534728698189},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1534728698189},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1534728698189},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1534728698189},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1534728698190},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1534728698188},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1534728698190},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1534728698190},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1534728698191},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1534728698190},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1534728698191},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1534728698191},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1534728698191},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1534728698191},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1534728698192},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1534728698192},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1534728698192},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1534728698192},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1534728698202},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1534728698205},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1534728698206},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1534728698206},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1534728698210},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1534728698210},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1534728698210},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1534728698212},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1534728698210},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1534728698210},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1534728698210},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1534728698213},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1534728698213},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1534728698214},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1534728698214},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1534728698217},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1534728698216},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1534728698216},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1534728698237},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1534728698238},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1534728698205},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1534728698224},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1534728698224},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1534728698239},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1534728698175},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1534728698175},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1534728698175},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1534728698175},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1534728698175},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1534728698175},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1534728698175},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1534728698176},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1534728698176},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1534728698176},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1534728698176},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1534728698176},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1534728698176},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1534728698176},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1534728698177},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1534728698177},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1534728698177},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1534728698178},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1534728698178},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1534728698178},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1534728698178},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1534728698177},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1534728698178},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1534728698179},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1534728698179},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1534728698179},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1534728698179},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1534728698180},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1534728698180},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1534728698180},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1534728698178},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1534728698180},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1534728698179},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1534728698180},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1534728698180},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1534728698180},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1534728698180},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1534728698181},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1534728698181},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1534728698182},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1534728698182},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1534728698182},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1534728698183},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1534728698182},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1534728698183},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1534728698184},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1534728698184},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1534728698184},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1534728698184},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1534728698184},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1534728698183},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1534728698184},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1534728698185},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1534728698185},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1534728698185},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1534728698186},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1534728698185},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1534728698186},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1534728698190},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1534728698190},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1534728698191},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1534728698203},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1534728698203},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1534728698204},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1534728698204},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1534728698204},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1534728698211},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1534728698211},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1534728698211},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1534728698212},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1534728698212},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1534728698211},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1534728698218},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1534728698220},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1534728698223},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1534728698208},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1534728698236},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1534728698222},{"_id":"public/content.json","hash":"53ea856b15738ef1dddd6a29bfb97c25391f80e5","modified":1535540620949},{"_id":"public/search.xml","hash":"a1480dac481cad3ef3c6263a10210db78c32372d","modified":1535540620995},{"_id":"public/about/index.html","hash":"b7152a44160c634d318a79316039dbb7b9dd3041","modified":1535540621102},{"_id":"public/categories/index.html","hash":"6145206339a2790d32f37f5ca4b9fc331b9ebfae","modified":1535540621103},{"_id":"public/tags/index.html","hash":"bd2bceda6f6aa46caa58eede0d381ca9faa930bd","modified":1535540621103},{"_id":"public/2018/08/29/hexo-next/index.html","hash":"e28208c2946f128392e1575fd176b6a62cd62098","modified":1535540621103},{"_id":"public/2018/08/29/hexo1/index.html","hash":"b239a5e3c4d12f41d4f4f91d8b34c94505af32ce","modified":1535540621103},{"_id":"public/2018/08/21/前端开发工程师笔试题/index.html","hash":"5093266c376705cb898a0abec5273572b733afe6","modified":1535540621103},{"_id":"public/2018/08/21/type-of-date/index.html","hash":"36dd1c35fd93c31a79a867f4add0842bed7ca56b","modified":1535540621103},{"_id":"public/2018/08/21/reverse/index.html","hash":"0d0660bacf1a6fc336be528a36afb1df3bcf5644","modified":1535540621103},{"_id":"public/2018/08/21/vue-npm/index.html","hash":"30e146905e08da3842a6a8955e9d255950aa637b","modified":1535540621103},{"_id":"public/2018/08/21/greatestCommonDivisor/index.html","hash":"7b627c69e29dc1a8cf18fca4c37a3f9b09d48b82","modified":1535540621103},{"_id":"public/2018/08/21/Palindrome/index.html","hash":"ab6d9e5e1c5f43042d974adb7703144c5a8cf4d3","modified":1535540621103},{"_id":"public/2018/08/21/Fibonacci/index.html","hash":"cbd54fe958960a7f19784b38096bfddb445ffe32","modified":1535540621103},{"_id":"public/2018/08/21/npm安全审核/index.html","hash":"a5dbc0d9a73caf724f1824a27f95bd3802dcbf15","modified":1535540621103},{"_id":"public/2018/06/28/JS数组之排列组合/index.html","hash":"ca77db02dbb8d3b74ed4b0b04ad77fe188b049ee","modified":1535540621103},{"_id":"public/2018/06/28/e2e端到端测试使用ES6遇到的问题及解决方案/index.html","hash":"504304ce1c3781779cb5b9b8422b7f1d1ca308c3","modified":1535540621103},{"_id":"public/2018/06/28/Echarts几种常见图标和自适应/index.html","hash":"61cda566b727f66c152716b24f38835a8713a87a","modified":1535540621103},{"_id":"public/2018/06/28/VSCode插件配置/index.html","hash":"21dbf418616e3029213985c0c05f55345e49bda4","modified":1535540621103},{"_id":"public/2018/06/28/前端开发工程师面试问题/index.html","hash":"00f99a49fd8ca2f5635ed6fcb9b08f345b08c2f9","modified":1535540621104},{"_id":"public/2018/06/28/object/index.html","hash":"3c2d86f8c110fa28fae0ae5c3b7d987fd730102a","modified":1535540621104},{"_id":"public/2018/06/28/使用NAP安装包失败解决办法/index.html","hash":"3684bfa7ab064ab2d587cd0a54f969239b898918","modified":1535540621104},{"_id":"public/2018/06/28/六种方法实现JavaScript数组去重/index.html","hash":"43410ccb2fc00830462b6860d80f00832e1d4e69","modified":1535540621104},{"_id":"public/2018/06/28/ubuntu下使用和配置shadowsocks/index.html","hash":"5c8d5fda32e5eba6357cce78b4ba4f0dcae7d8f7","modified":1535540621104},{"_id":"public/2018/06/28/在ubuntu中使用ls和xargs命令转换png和jpg/index.html","hash":"5ad47bb80d17814c691708af0966a7de572d2e57","modified":1535540621104},{"_id":"public/2018/06/28/ubuntu安装软件/index.html","hash":"413aa70dcd837bd5baf1947637310aea4fccb73a","modified":1535540621104},{"_id":"public/2018/06/28/ubuntu安装WPS/index.html","hash":"cf8b486bfba5b5d813590b5bc4bc8d29805d2397","modified":1535540621104},{"_id":"public/2018/06/28/ubuntu安装Mongodb/index.html","hash":"c8febd670efa7596ce5bcadae4dd54265382ed74","modified":1535540621104},{"_id":"public/2018/06/28/ubuntu1/index.html","hash":"00318c0e1731e578eba05050c9dc1e050dc0ea51","modified":1535540621104},{"_id":"public/2018/04/27/pic-slide/index.html","hash":"a51d904eb94b18a56ecc724c8860b82776c368fa","modified":1535540621104},{"_id":"public/2018/04/25/center/index.html","hash":"fb8c3610aab1c355d838c1d80145d875d3a7467b","modified":1535540621104},{"_id":"public/2018/04/25/font-animation/index.html","hash":"743ee8f15e70fcb859ef7ba3da6eb82d6169156b","modified":1535540621104},{"_id":"public/2018/04/24/website-address/index.html","hash":"9768d482e4a4b107155fda8df87570349805b9d6","modified":1535540621104},{"_id":"public/2018/04/04/nuxt-element/index.html","hash":"5684687c993afc2b7ad4dac5401b58eb3ad8abb3","modified":1535540621104},{"_id":"public/2018/04/04/array-sum/index.html","hash":"992f021d3c0eed51316a077bc895ad586381c23c","modified":1535540621104},{"_id":"public/2018/01/24/eleValidatePackage/index.html","hash":"219914afde00ff47e91fdb52f87ed9754f7d7e28","modified":1535540621105},{"_id":"public/2018/01/24/submodules/index.html","hash":"5c07abed21516bcfbbedacaf968f2d29f884bcad","modified":1535540621105},{"_id":"public/2018/01/20/elemeValidate/index.html","hash":"3fa44e1f32fcacabe7813dfde158968e8f9a6d0e","modified":1535540621105},{"_id":"public/2018/01/20/es6/index.html","hash":"395a8291aabfeac13da7c0a12fc987f91c09e407","modified":1535540621105},{"_id":"public/2018/01/12/danlian/index.html","hash":"442a7262ec7bc2b00ec5554c5f37697430f61f04","modified":1535540621105},{"_id":"public/2018/01/04/maokong/index.html","hash":"4a656bb2e43c84753f502a252577f4486f945bc7","modified":1535540621105},{"_id":"public/2018/01/04/kanjian/index.html","hash":"6ea8a780774e1e0e36a06d8d1d242941a58e140a","modified":1535540621105},{"_id":"public/2017/12/29/webpack/index.html","hash":"ceed6aea3716299689339834f2c7f2f2c56cacd4","modified":1535540621105},{"_id":"public/2017/12/25/eyi/index.html","hash":"28bf0290897bb342c2549383431f8a986d0fc243","modified":1535540621105},{"_id":"public/2017/12/20/jenkins/index.html","hash":"b8f6ff9d692f4eef04782cd6aedc15ce93040948","modified":1535540621105},{"_id":"public/2017/12/14/newyears/index.html","hash":"0eb98bc5f0f54591fc6c3589a255997954f39168","modified":1535540621105},{"_id":"public/2017/12/14/cailan/index.html","hash":"f0fb86d02a57aa32a256f42c0b8f3a23fe8208cd","modified":1535540621105},{"_id":"public/2017/12/12/vuelidate/index.html","hash":"d7da5576e9d030c947f955bd4824b2866f0c6954","modified":1535540621105},{"_id":"public/2017/12/12/regexp1/index.html","hash":"abe1bb0cbe86938507744c3bddf478dfcf7fba76","modified":1535540621105},{"_id":"public/2017/12/12/regexp/index.html","hash":"3cb6f0817057c8b92ae06d199df04f8de605ef5b","modified":1535540621105},{"_id":"public/2017/12/12/xmind/index.html","hash":"3fadfed0b7e7ef5e3cea3de35df55580b3b3e6d6","modified":1535540621105},{"_id":"public/2017/12/12/web/index.html","hash":"9f3721682c281b9ef9f94dd1ad05cf3e617e9bc2","modified":1535540621105},{"_id":"public/2017/12/10/github1/index.html","hash":"edea519ceeacac1febafbe5b7c927d932088f653","modified":1535540621106},{"_id":"public/2017/12/08/unit/index.html","hash":"f83ab243dfedd02af9e73ea6bdde6da5f621f9a5","modified":1535540621106},{"_id":"public/2017/12/06/unit-test/index.html","hash":"f2aedf922ce5d4f93ce4b3d8f5a75ddcc67d053a","modified":1535540621106},{"_id":"public/2017/12/04/Ng-Tung-Shan/index.html","hash":"ebcc02e4bb274f40ee2c99024373ef3a9cd62995","modified":1535540621106},{"_id":"public/2017/12/04/vue-start/index.html","hash":"4a00fa6c9fcbc077b9023ec4c08ce9c3f67acced","modified":1535540621106},{"_id":"public/2017/11/30/Typora/index.html","hash":"4c5fbeaa806ae2731f4f1839b8b622ed3d1a2844","modified":1535540621106},{"_id":"public/categories/JS/index.html","hash":"c95f89ce97179296ffc18cdc4ec800a23b0b8feb","modified":1535540621106},{"_id":"public/categories/JS/page/2/index.html","hash":"5e1c16325178cd1e39801c4ccb78d28cffca4e6e","modified":1535540621106},{"_id":"public/categories/其他/index.html","hash":"612d3b34dfd79b114a32da5ff0459ac922bf72e9","modified":1535540621106},{"_id":"public/categories/玩/index.html","hash":"7b1227c6e8bf6bd04bc4e817191f0bab99ac4fa2","modified":1535540621106},{"_id":"public/categories/git/index.html","hash":"b7bfe6c37ff0786d678dd9388e5d85e60e83ab74","modified":1535540621106},{"_id":"public/categories/Ubuntu/index.html","hash":"ca89333ec9c7fe2e9f59ef71c2992fdc88d3c782","modified":1535540621106},{"_id":"public/categories/读书/index.html","hash":"c14cea28095d4504660da4299fe0cb8c48368ad3","modified":1535540621106},{"_id":"public/categories/css/index.html","hash":"e113577e9001e7b6a4f96a55ccc73418400980f5","modified":1535540621106},{"_id":"public/categories/测试/index.html","hash":"a02cdfe8862a2e773f7f74f547ddaf76df410614","modified":1535540621106},{"_id":"public/categories/validate/index.html","hash":"0d2569f04a4f95a2cfc6d23eba282454202e68c2","modified":1535540621106},{"_id":"public/categories/Hexo/index.html","hash":"b062335a5391e0bfc883123f4f4c60854a9136ee","modified":1535540621107},{"_id":"public/categories/护肤/index.html","hash":"e7af96c5543d9ae6d718c4096b840505aa4d6261","modified":1535540621107},{"_id":"public/categories/总结/index.html","hash":"8fd39a386af41689b2abdbffe3c842db31ff2013","modified":1535540621107},{"_id":"public/categories/教程/index.html","hash":"e695b165d055ba0d519cb9dce11a9ba1c3f54296","modified":1535540621107},{"_id":"public/categories/NPM/index.html","hash":"5d54de4d72fc06ecb9e2e685bfbdbcc8e506b44e","modified":1535540621107},{"_id":"public/categories/vue/index.html","hash":"c86435ade107b58bf0ce0a5bde5120257fdb78b7","modified":1535540621107},{"_id":"public/categories/面试题/index.html","hash":"fca095e9a3a97ee802de7826b62cfc5078336610","modified":1535540621107},{"_id":"public/archives/index.html","hash":"fb01df65092c5391670a723478156fd94f342479","modified":1535540621107},{"_id":"public/archives/page/2/index.html","hash":"1c1e2c6588ab2a64153dde65800e81c4e8447d88","modified":1535540621107},{"_id":"public/archives/page/3/index.html","hash":"29a774277e0242ba5ad1d94be6d0245c4083cf47","modified":1535540621107},{"_id":"public/archives/page/4/index.html","hash":"64e02aac56e2b92343044df25a9483fb4acaae0d","modified":1535540621107},{"_id":"public/archives/page/5/index.html","hash":"176096e91edcfc088d91705f6a1b139a77e4c603","modified":1535540621107},{"_id":"public/archives/page/6/index.html","hash":"f455c68350f8b22e305b07830c9ab449652e89a3","modified":1535540621107},{"_id":"public/archives/2017/index.html","hash":"c9b2559a23017503e2a8d31e7601def2d419c9ec","modified":1535540621107},{"_id":"public/archives/2017/page/2/index.html","hash":"c4ec9328d039bae8e4f1d37578d6789ed6ad08b7","modified":1535540621107},{"_id":"public/archives/2017/11/index.html","hash":"d2570ac71af561ee5b15b241675ae5e48b790fe2","modified":1535540621107},{"_id":"public/archives/2017/12/index.html","hash":"27bb0e8404fbec088f06b83f19bdf37efed83ccc","modified":1535540621107},{"_id":"public/archives/2017/12/page/2/index.html","hash":"f2c2e6b5672ba4b6a5f8f80b478d32bacfa31d21","modified":1535540621107},{"_id":"public/archives/2018/index.html","hash":"bb06da16326ad2f37ce4d72e5b8d20f7ad37f240","modified":1535540621107},{"_id":"public/archives/2018/page/2/index.html","hash":"2864c7808b7770d858e987b22b0f20e671946da0","modified":1535540621108},{"_id":"public/archives/2018/page/3/index.html","hash":"989b050198cac7ad99be71f8690fe5635bd0e14a","modified":1535540621108},{"_id":"public/archives/2018/page/4/index.html","hash":"f6187b5f43d5f45d367272abf8b8aea2106e126e","modified":1535540621108},{"_id":"public/archives/2018/01/index.html","hash":"5a55f77b2098244dacd3886c320d4daee231bc1e","modified":1535540621108},{"_id":"public/archives/2018/04/index.html","hash":"22517051c2e1f0b41e1b8deb5298d25deeeb9851","modified":1535540621108},{"_id":"public/archives/2018/06/index.html","hash":"f854f094f6b63820239125b7e9b9aef892b145e1","modified":1535540621108},{"_id":"public/archives/2018/06/page/2/index.html","hash":"e4c3461f4b70ad2b6cc151a7b4ed14d14248da46","modified":1535540621108},{"_id":"public/archives/2018/08/index.html","hash":"107e3a8cdc183d8af8c2707c653262d1264f8904","modified":1535540621108},{"_id":"public/index.html","hash":"ef7aad6cdf39a2c96e13cf1b94020ac475206bb8","modified":1535540621108},{"_id":"public/page/2/index.html","hash":"f60393ea7cc89ed17a5ea51dc39ea0de5d221b25","modified":1535540621108},{"_id":"public/page/3/index.html","hash":"d73200fb9396a2991814e233e54f4e9c7ba74a0a","modified":1535540621108},{"_id":"public/page/4/index.html","hash":"6b2135492bcde4eb51392bcb845e5e9c098bbea9","modified":1535540621108},{"_id":"public/page/5/index.html","hash":"8de724cc157527a78e695adbba96d0ace8b6decc","modified":1535540621108},{"_id":"public/page/6/index.html","hash":"34beecaf3d06606ebb8b86acf455a339d7816d75","modified":1535540621108},{"_id":"public/tags/Fibonacci/index.html","hash":"bae926a2ed13c1aead12188b094e88c7885988cf","modified":1535540621108},{"_id":"public/tags/斐波那契/index.html","hash":"f45fe71df3f1a6e81665473fa7ed8f241c753378","modified":1535540621108},{"_id":"public/tags/echarts/index.html","hash":"459e67389d563cfbde66775c4ad3cd3333522555","modified":1535540621108},{"_id":"public/tags/自适应/index.html","hash":"9c22dc78e5812873dfd1346b400ef920861c9655","modified":1535540621108},{"_id":"public/tags/JS/index.html","hash":"3ca72c5593e8b741ab7ad62ca87a78a6f2b98f9f","modified":1535540621108},{"_id":"public/tags/排列组合/index.html","hash":"ca3ba4e1453b9183a7ed31735041e6d9238a7ecd","modified":1535540621108},{"_id":"public/tags/登山/index.html","hash":"e20e229f18ddbfccac66ebd2d0716d2e92515722","modified":1535540621108},{"_id":"public/tags/梧桐山/index.html","hash":"7865101092d93e332028667b9171bca017e506cd","modified":1535540621109},{"_id":"public/tags/深圳最高山/index.html","hash":"4e8f74d5529f181d1dc571bb9a7677a42796aa8c","modified":1535540621109},{"_id":"public/tags/Palindrome/index.html","hash":"22edfe3b5135894f2bb173d3edc259da969bb6fc","modified":1535540621109},{"_id":"public/tags/回文/index.html","hash":"31984726a0de9b9c30fb45fb28fd8c6cd1511e2c","modified":1535540621109},{"_id":"public/tags/VSCode/index.html","hash":"049d917eb19fef3f49ed6a2ea68387a88652bd75","modified":1535540621109},{"_id":"public/tags/Gist/index.html","hash":"fed1f5ead5eba983c6f57163c05e9f5c3142b58d","modified":1535540621109},{"_id":"public/tags/Typora/index.html","hash":"62e7b9977993a7de6d90196c402c6411c115b998","modified":1535540621109},{"_id":"public/tags/ubuntu/index.html","hash":"5527c28233550135ffe556b0e3cd4ea36a3cc3d6","modified":1535540621109},{"_id":"public/tags/数组求和/index.html","hash":"b377fe6fb2c0c0e6b01f858288093311968e2f4a","modified":1535540621109},{"_id":"public/tags/蔡澜/index.html","hash":"a157b2058c87cf67b37a54fff6612bee81dafa32","modified":1535540621109},{"_id":"public/tags/读后感/index.html","hash":"5a49aaca031773488f8b27669f54739c2053db50","modified":1535540621109},{"_id":"public/tags/css/index.html","hash":"917cb993f23161ff841a4cb09aead023b24317d4","modified":1535540621109},{"_id":"public/tags/居中/index.html","hash":"fa2489e63bc90daf9af487b5d496746f846ee0c2","modified":1535540621109},{"_id":"public/tags/e2e/index.html","hash":"39f9320fa505c145c8844e0962b708619c2ebcd7","modified":1535540621109},{"_id":"public/tags/es6/index.html","hash":"c39d5e48fd48c12afec0a9943ed242d943699f59","modified":1535540621109},{"_id":"public/tags/element-ui/index.html","hash":"2e01808e79be93b4e86ba1c50b4564f617b4b470","modified":1535540621109},{"_id":"public/tags/封装/index.html","hash":"611ac1434d5e113ceb55b26c9f1387c48d8f7373","modified":1535540621109},{"_id":"public/tags/表单校验/index.html","hash":"d665945faa7d833ce7d7c268239b5c0c07b6f2e0","modified":1535540621109},{"_id":"public/tags/ES6/index.html","hash":"ef0797f84f0666213c593749f0611578d7d884fc","modified":1535540621110},{"_id":"public/tags/单元测试/index.html","hash":"c91f31e7f7a9a6e4bb225dc70b49f42ca8ef66dc","modified":1535540621110},{"_id":"public/tags/单恋/index.html","hash":"4753de4169570096c8a209bb30020fc8300f08ac","modified":1535540621110},{"_id":"public/tags/东野圭吾/index.html","hash":"c81013e584c6c0944d344b6422df07b91ab0830b","modified":1535540621110},{"_id":"public/tags/element/index.html","hash":"fece3ad8f0f0a066749d5332b4c434a7765c62c7","modified":1535540621110},{"_id":"public/tags/表单验证/index.html","hash":"3fce01bcfb6b10518ca05b55b4bd6e0b27366887","modified":1535540621110},{"_id":"public/tags/恶意/index.html","hash":"c985bc02c2b1e00dd7f708ef263021a18b3f2df1","modified":1535540621110},{"_id":"public/tags/animation/index.html","hash":"4668761cfd819e1a3e8a3b80a159567c58738115","modified":1535540621110},{"_id":"public/tags/动画/index.html","hash":"75475ed702b2f9d78c71ab8b1ffe73b4a2f49d98","modified":1535540621110},{"_id":"public/tags/github/index.html","hash":"0828d91a5fde2a4b7c5d05e2c104ff72f2f42b59","modified":1535540621110},{"_id":"public/tags/greatestCommonDivisor/index.html","hash":"39efc8600b5ce1d4fd3ca4db1e6809a748fb6fb7","modified":1535540621110},{"_id":"public/tags/最大公约数/index.html","hash":"58d8c033d73901466be212c704dda91963bbda73","modified":1535540621110},{"_id":"public/tags/Hexo/index.html","hash":"6c250c4a5d3ca53e22c47b1156a38317fdd9af00","modified":1535540621110},{"_id":"public/tags/Next/index.html","hash":"bbba8700c85ba665efed4dbc757289abe2c06c19","modified":1535540621110},{"_id":"public/tags/搜索/index.html","hash":"b4e4ff25650c90a654395129a34369c1ab0717b7","modified":1535540621110},{"_id":"public/tags/hexo/index.html","hash":"a2c23fb0a98ae98ce0791d35982cf27b1a95b581","modified":1535540621110},{"_id":"public/tags/读书/index.html","hash":"c71a64f94ec5cee493028ac1784cb2d3fa4cb2a4","modified":1535540621110},{"_id":"public/tags/柴静/index.html","hash":"e2c7aafaab851dce59f220a594a90a43ccbe7a31","modified":1535540621110},{"_id":"public/tags/毛孔/index.html","hash":"f86acb3c2a16d03474430188b15d4e429f96a7f5","modified":1535540621110},{"_id":"public/tags/护肤/index.html","hash":"0c4a56c820f190eae4682ecddc7e56c229130d63","modified":1535540621110},{"_id":"public/tags/jenkins/index.html","hash":"389c8888ff6b036847f9dea8e005b7ed7c181c13","modified":1535540621110},{"_id":"public/tags/持续集成/index.html","hash":"50bfb56f162784094e8a8a627cdbb00f94953df2","modified":1535540621111},{"_id":"public/tags/自动化测试/index.html","hash":"c34211b1d3191c01e64b768b70d5e7c3a63a525b","modified":1535540621111},{"_id":"public/tags/2017/index.html","hash":"a3d84b28ae3d37ea05d34a5fac7423cddcc8354a","modified":1535540621111},{"_id":"public/tags/Object-is/index.html","hash":"ca46cf175c77c7cdc85e094d53b197a2a2762893","modified":1535540621111},{"_id":"public/tags/Nuxt-js/index.html","hash":"58ecbcc8e842256c073ab800ed4058ab49d77b6b","modified":1535540621111},{"_id":"public/tags/ElementUI/index.html","hash":"76ac30e15bfcd467d298f3c9047b0e6ae77bd923","modified":1535540621111},{"_id":"public/tags/NPM/index.html","hash":"af43a40135c7fcd25254b8b1de90a5c61d1c102f","modified":1535540621111},{"_id":"public/tags/正则基本使用/index.html","hash":"5df9f45d0cd399076aba267ea9a29299cadc1763","modified":1535540621111},{"_id":"public/tags/正则表达式/index.html","hash":"8579c2f5093d6ffd3b3db20f67afbd9a5866e988","modified":1535540621111},{"_id":"public/tags/git/index.html","hash":"b742d28b1519202d7cff2a31a2e29f2ab02596fe","modified":1535540621111},{"_id":"public/tags/submodule/index.html","hash":"b52c550e96a59d33ac51efb891a0781dd819d79b","modified":1535540621111},{"_id":"public/tags/reverse/index.html","hash":"bf7b2ad72effa9e6dc4e9b23f4e2bbf7ce54c872","modified":1535540621111},{"_id":"public/tags/字符串反转/index.html","hash":"b8c8ee98b5cdcf77c317b363ac9228986e54197f","modified":1535540621111},{"_id":"public/tags/undefine/index.html","hash":"3739a4d27663f9e68f354694012e6d53a3917b67","modified":1535540621111},{"_id":"public/tags/boolean/index.html","hash":"1885d75500c697cbd4fe8cce3bb45e9b877f0f94","modified":1535540621111},{"_id":"public/tags/number/index.html","hash":"0aad6775dd16f569a3d137991a137d6a57105b15","modified":1535540621111},{"_id":"public/tags/string/index.html","hash":"1261ab337f4cd72f24878553d5e02536257bb755","modified":1535540621111},{"_id":"public/tags/object/index.html","hash":"b2de2d1c60007437c094fcba271ada8ecc4ef713","modified":1535540621111},{"_id":"public/tags/array/index.html","hash":"3982cefb0f72dac7e988ecfce0441d6209238a18","modified":1535540621111},{"_id":"public/tags/function/index.html","hash":"ef955f19a2d2fd52f879ca60d40a34fa1e43a7c7","modified":1535540621112},{"_id":"public/tags/shadowsocks/index.html","hash":"d7faa3f7ede0e2ca6755bf6a2daac23f53565e60","modified":1535540621112},{"_id":"public/tags/ubuntu18-04/index.html","hash":"c5fcd9fc9e50b9dfb8ddf2dfe925e1cf2b1008ee","modified":1535540621112},{"_id":"public/tags/wps/index.html","hash":"21c8e41768174a3c4f088aaf0005f968da085d2e","modified":1535540621112},{"_id":"public/tags/ubuntu16-04/index.html","hash":"c2afa061189ea42762014d62725b7ca96eb80770","modified":1535540621112},{"_id":"public/tags/MacOSX/index.html","hash":"7851ab207aed50820f533b76206e1009c9a8f658","modified":1535540621112},{"_id":"public/tags/mongodb/index.html","hash":"00a6794f4234d87d2025713886d6addd305d4ee6","modified":1535540621112},{"_id":"public/tags/TeamViewer/index.html","hash":"0ec45ce987f52fcfea96e2f733b4180c1da4fd79","modified":1535540621112},{"_id":"public/tags/微信/index.html","hash":"0e6fc00354cc428995240f51c8021c469befb553","modified":1535540621112},{"_id":"public/tags/jdk-8/index.html","hash":"dee917992c9d4b6bbc4cedaf8b9d15c03a01d8a8","modified":1535540621112},{"_id":"public/tags/unit-test/index.html","hash":"f40337f3add1d6c8c6cc5d1979f767402b76e6ad","modified":1535540621112},{"_id":"public/tags/vue-教程/index.html","hash":"260d2a435d271a4e0cf9ca2e9c5c4fcf091f04d9","modified":1535540621112},{"_id":"public/tags/validate-表单验证插件/index.html","hash":"6686b01c3cf7e6798fab7730b31b0f47fca5dc94","modified":1535540621112},{"_id":"public/tags/vue/index.html","hash":"b90e4eaad40059e5f979216db9e70ae583abad45","modified":1535540621112},{"_id":"public/tags/npm/index.html","hash":"0bc790ffd2b4b24eadb0a5b2cd47f27b13f75955","modified":1535540621112},{"_id":"public/tags/web前端/index.html","hash":"ef6e590d6f54df7fdd489ebbbd91caa39fa629fc","modified":1535540621112},{"_id":"public/tags/网址/index.html","hash":"94f0ea57c96e22add19bca3d32d28bbe97d9c207","modified":1535540621112},{"_id":"public/tags/xmind/index.html","hash":"e6209d5fec1710a21adb2456f5843c6a7ca03e5f","modified":1535540621112},{"_id":"public/tags/NAP/index.html","hash":"aa5ceb0652dbe584b4ec0a2eff3db230f0e50398","modified":1535540621112},{"_id":"public/tags/js/index.html","hash":"bcb0483de9e8aded302f5741492bd2ba0d131b01","modified":1535540621113},{"_id":"public/tags/数组/index.html","hash":"c05e0aa956f57d719d75914f5f695d28c227a82f","modified":1535540621113},{"_id":"public/tags/html/index.html","hash":"c2722e569bfa24a7503490ee481dcc8a434a378c","modified":1535540621113},{"_id":"public/tags/面试/index.html","hash":"1a097f6a7156d536cf52556ce6da3ca793ba782d","modified":1535540621113},{"_id":"public/tags/jpg/index.html","hash":"029a3319e667cbcb158974547da67b4f62d2bc23","modified":1535540621113},{"_id":"public/tags/png/index.html","hash":"117f72bf1b705b3fb20a7531b93035bba03a17ea","modified":1535540621113},{"_id":"public/tags/karma/index.html","hash":"51fb393b19e511469ad92c220676c59e45544703","modified":1535540621113},{"_id":"public/tags/mocha/index.html","hash":"2382e36ee824e72e88462780396d517f4e3c7513","modified":1535540621113},{"_id":"public/tags/chai/index.html","hash":"279b52f7597914338c996e271f52cca5abcdb6de","modified":1535540621113},{"_id":"public/tags/webpack/index.html","hash":"e5ee966b14435d35fa3ab69587ac70572b83d5f9","modified":1535540621113},{"_id":"public/2018/08/29/hexo-canvas/index.html","hash":"6141c00faaaf1467d1c002274be77ba98833674f","modified":1535540621122},{"_id":"public/archives/2018/08/page/2/index.html","hash":"e6791797c63fc2d9c25ce5ec12eee7ea95c9e026","modified":1535540621122},{"_id":"public/tags/动态背景/index.html","hash":"bc60436e2925c567bc8ea7b2e45e3facf1d747ee","modified":1535540621122},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1535540621127},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1535540621127},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1535540621127},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1535540621127},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1535540621127},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1535540621127},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1535540621127},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1535540621127},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1535540621127},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1535540621127},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535540621127},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1535540621128},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535540621128},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1535540621128},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1535540621128},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1535540621128},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1535540621128},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1535540621128},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1535540621128},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1535540621128},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1535540621128},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1535540621128},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1535540621128},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1535540621128},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1535540621128},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1535540621128},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1535540621128},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1535540621128},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1535540621128},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1535540621128},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1535540621129},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1535540621129},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1535540621129},{"_id":"public/css/main.css","hash":"48ab1bf906aeaa48b72e1051104e86c8307fe27c","modified":1535540621556},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1535540621557},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1535540621559},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1535540621594},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1535540621595},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1535540621595},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1535540621595},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1535540621596},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1535540621596},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1535540621596},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1535540621596},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1535540621596},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1535540621596},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1535540621596},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1535540621596},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1535540621596},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1535540621596},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1535540621596},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1535540621596},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1535540621596},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1535540621598},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1535540621598},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1535540621598},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1535540621598},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1535540621598},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1535540621599},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1535540621599},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1535540621599},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1535540621599},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1535540621599},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1535540621599},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1535540621599},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1535540621599},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1535540621599},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1535540621600},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1535540621600},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1535540621600},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1535540621600},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1535540621600},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1535540621600},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1535540621600},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1535540621600},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1535540621600},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1535540621600},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1535540621600},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1535540621600},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1535540621600},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1535540621603},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1535540621603},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1535540621603},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1535540621603},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1535540621603},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1535540621603},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1535540621604},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1535540621604},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1535540621611},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1535540621612},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1535540621615},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1535540621615},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1535540621619},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1535540621619},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1535540621621},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1535540621621},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1535540621621},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1535540621621},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1535540621621},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1535540621621},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1535540621625},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1535540621625},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1535540621626},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1535540621627},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1535540621630},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1535540621630},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1535540621633},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1535540621641},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1535540621644}],"Category":[{"name":"JS","_id":"cjlf18gui0005oaqo28s44wij"},{"name":"其他","_id":"cjlf18gum000aoaqosssy1mla"},{"name":"玩","_id":"cjlf18gut000moaqo87d4rcty"},{"name":"git","_id":"cjlf18guw000soaqowbc9lqwp"},{"name":"Ubuntu","_id":"cjlf18guy0010oaqokkq13vwg"},{"name":"读书","_id":"cjlf18gv00016oaqoq9nnksci"},{"name":"css","_id":"cjlf18gv2001doaqogzmk1qaw"},{"name":"测试","_id":"cjlf18gv5001ioaqojw6cml9c"},{"name":"validate","_id":"cjlf18gv8001ooaqof5ju3tb6"},{"name":"Hexo","_id":"cjlf18gvm002voaqoq03kd9kb"},{"name":"护肤","_id":"cjlf18gvt003foaqok5r3zach"},{"name":"总结","_id":"cjlf18gvv003noaqoh1oi3x85"},{"name":"教程","_id":"cjlf18gvx003toaqo2iia2c9v"},{"name":"NPM","_id":"cjlf18gw10043oaqol684q3og"},{"name":"vue","_id":"cjlf18gw40049oaqovzefmbrb"},{"name":"面试题","_id":"cjlf18gw8004qoaqo4mh64mzv"}],"Data":[],"Page":[{"title":"关于这个可爱的女孩子","date":"2017-12-04T06:32:39.000Z","_content":"\n#### 关于她\n\n`泪点低`\n\n1. 听国歌会`哭`！\n2. 看电视会`哭`！！\n3. 看书会`哭`！！！\n4. 自己天马行空乱想会`哭`！！！！\n5. …..\n6. 但我还是很`坚强`\n\n`喜欢吃`\n\n酸甜苦辣最不喜欢吃苦还有肥肉，虽然吃吃吃但我还是很`瘦`\n\n`Eason小迷妹`\n\n有演唱会记得叫上我好吗\n\n#### 目前她\n\n- 在一家小厂做前端开发\n- 在折腾博客\n- 在与前端做斗争，从入门到放弃这条路已经走得熟门熟路\n\n#### 联系她\n\n- WeChat: TU17_seven \n- Github：https://github.com/Evey-huang\n\n#### 她的梦想\n\n`Peace and Love`","source":"about/index.md","raw":"---\ntitle: 关于这个可爱的女孩子\ndate: 2017-12-04 14:32:39\n---\n\n#### 关于她\n\n`泪点低`\n\n1. 听国歌会`哭`！\n2. 看电视会`哭`！！\n3. 看书会`哭`！！！\n4. 自己天马行空乱想会`哭`！！！！\n5. …..\n6. 但我还是很`坚强`\n\n`喜欢吃`\n\n酸甜苦辣最不喜欢吃苦还有肥肉，虽然吃吃吃但我还是很`瘦`\n\n`Eason小迷妹`\n\n有演唱会记得叫上我好吗\n\n#### 目前她\n\n- 在一家小厂做前端开发\n- 在折腾博客\n- 在与前端做斗争，从入门到放弃这条路已经走得熟门熟路\n\n#### 联系她\n\n- WeChat: TU17_seven \n- Github：https://github.com/Evey-huang\n\n#### 她的梦想\n\n`Peace and Love`","updated":"2018-08-29T08:31:37.744Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjlf18gq40000oaqo3a867b4x","content":"<h4 id=\"关于她\"><a href=\"#关于她\" class=\"headerlink\" title=\"关于她\"></a>关于她</h4><p><code>泪点低</code></p>\n<ol>\n<li>听国歌会<code>哭</code>！</li>\n<li>看电视会<code>哭</code>！！</li>\n<li>看书会<code>哭</code>！！！</li>\n<li>自己天马行空乱想会<code>哭</code>！！！！</li>\n<li>…..</li>\n<li>但我还是很<code>坚强</code></li>\n</ol>\n<p><code>喜欢吃</code></p>\n<p>酸甜苦辣最不喜欢吃苦还有肥肉，虽然吃吃吃但我还是很<code>瘦</code></p>\n<p><code>Eason小迷妹</code></p>\n<p>有演唱会记得叫上我好吗</p>\n<h4 id=\"目前她\"><a href=\"#目前她\" class=\"headerlink\" title=\"目前她\"></a>目前她</h4><ul>\n<li>在一家小厂做前端开发</li>\n<li>在折腾博客</li>\n<li>在与前端做斗争，从入门到放弃这条路已经走得熟门熟路</li>\n</ul>\n<h4 id=\"联系她\"><a href=\"#联系她\" class=\"headerlink\" title=\"联系她\"></a>联系她</h4><ul>\n<li>WeChat: TU17_seven </li>\n<li>Github：<a href=\"https://github.com/Evey-huang\" target=\"_blank\" rel=\"noopener\">https://github.com/Evey-huang</a></li>\n</ul>\n<h4 id=\"她的梦想\"><a href=\"#她的梦想\" class=\"headerlink\" title=\"她的梦想\"></a>她的梦想</h4><p><code>Peace and Love</code></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"关于她\"><a href=\"#关于她\" class=\"headerlink\" title=\"关于她\"></a>关于她</h4><p><code>泪点低</code></p>\n<ol>\n<li>听国歌会<code>哭</code>！</li>\n<li>看电视会<code>哭</code>！！</li>\n<li>看书会<code>哭</code>！！！</li>\n<li>自己天马行空乱想会<code>哭</code>！！！！</li>\n<li>…..</li>\n<li>但我还是很<code>坚强</code></li>\n</ol>\n<p><code>喜欢吃</code></p>\n<p>酸甜苦辣最不喜欢吃苦还有肥肉，虽然吃吃吃但我还是很<code>瘦</code></p>\n<p><code>Eason小迷妹</code></p>\n<p>有演唱会记得叫上我好吗</p>\n<h4 id=\"目前她\"><a href=\"#目前她\" class=\"headerlink\" title=\"目前她\"></a>目前她</h4><ul>\n<li>在一家小厂做前端开发</li>\n<li>在折腾博客</li>\n<li>在与前端做斗争，从入门到放弃这条路已经走得熟门熟路</li>\n</ul>\n<h4 id=\"联系她\"><a href=\"#联系她\" class=\"headerlink\" title=\"联系她\"></a>联系她</h4><ul>\n<li>WeChat: TU17_seven </li>\n<li>Github：<a href=\"https://github.com/Evey-huang\" target=\"_blank\" rel=\"noopener\">https://github.com/Evey-huang</a></li>\n</ul>\n<h4 id=\"她的梦想\"><a href=\"#她的梦想\" class=\"headerlink\" title=\"她的梦想\"></a>她的梦想</h4><p><code>Peace and Love</code></p>\n"},{"title":"分类","date":"2017-12-09T03:37:07.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-12-09 11:37:07\ntype: \"categories\"\n---\n","updated":"2018-08-17T07:35:36.767Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjlf18gue0002oaqojavtq969","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2017-12-09T03:36:25.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-12-09 11:36:25\ntype: \"tags\"\n---\n","updated":"2018-08-17T07:35:36.767Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjlf18gug0004oaqo2x1x6hba","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"如何获得第N个斐波那契数","date":"2018-08-21T02:12:40.000Z","_content":"\n## 背景\n\n斐波那契数列（意大利语: Successione di Fibonacci）又译费波拿契数列、黄金分割数列。\n\n在数学上，斐波那契数列是以递归的方法来定义：\n\n- F0=0\n- F1=1\n- F2=1\n- F3=2\n- Fn=F(n-1)+F(n-2) (n>=2)\n\n用文字来说，就二十斐波那契数列由0和1开始，之后的斐波那契数列由之前的两数相加而得出。首几个斐波那契系数是：`0,1,1,2,3,5,8,13,21,34,55,89,144,233....`\n\n\n\n## 解答\n\n### 方法一\n\n```js\nfunction fibonacci(n){\n  var fibo = [0, 1];\n  \n  if (n <= 2) return 1;\n\n  for (var i = 2; i <=n; i++ ){\n   fibo[i] = fibo[i-1]+fibo[i-2];\n  }\n\n return fibo[n];\n} \n// console.log(fibonacci(12)) => 144\n```\n\n运行时复杂度为O(n)\n\n\n\n### 方法二\n\n```js\nfunction fibonacci(n){\n  if(n<=1)\n    return n;\n  else\n    return fibonacci(n-1) + fibonacci (n-2);  \n}\n// console.log(fibonacci(12)) => 144\n```\n\n运行时复杂度O(2^n)","source":"_posts/Fibonacci.md","raw":"---\ntitle: 如何获得第N个斐波那契数\ndate: 2018-08-21 10:12:40\ntags: [Fibonacci, 斐波那契]\ncategories: JS\n---\n\n## 背景\n\n斐波那契数列（意大利语: Successione di Fibonacci）又译费波拿契数列、黄金分割数列。\n\n在数学上，斐波那契数列是以递归的方法来定义：\n\n- F0=0\n- F1=1\n- F2=1\n- F3=2\n- Fn=F(n-1)+F(n-2) (n>=2)\n\n用文字来说，就二十斐波那契数列由0和1开始，之后的斐波那契数列由之前的两数相加而得出。首几个斐波那契系数是：`0,1,1,2,3,5,8,13,21,34,55,89,144,233....`\n\n\n\n## 解答\n\n### 方法一\n\n```js\nfunction fibonacci(n){\n  var fibo = [0, 1];\n  \n  if (n <= 2) return 1;\n\n  for (var i = 2; i <=n; i++ ){\n   fibo[i] = fibo[i-1]+fibo[i-2];\n  }\n\n return fibo[n];\n} \n// console.log(fibonacci(12)) => 144\n```\n\n运行时复杂度为O(n)\n\n\n\n### 方法二\n\n```js\nfunction fibonacci(n){\n  if(n<=1)\n    return n;\n  else\n    return fibonacci(n-1) + fibonacci (n-2);  \n}\n// console.log(fibonacci(12)) => 144\n```\n\n运行时复杂度O(2^n)","slug":"Fibonacci","published":1,"updated":"2018-08-21T02:14:58.989Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18guc0001oaqoauthju1j","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>斐波那契数列（意大利语: Successione di Fibonacci）又译费波拿契数列、黄金分割数列。</p>\n<p>在数学上，斐波那契数列是以递归的方法来定义：</p>\n<ul>\n<li>F0=0</li>\n<li>F1=1</li>\n<li>F2=1</li>\n<li>F3=2</li>\n<li>Fn=F(n-1)+F(n-2) (n&gt;=2)</li>\n</ul>\n<p>用文字来说，就二十斐波那契数列由0和1开始，之后的斐波那契数列由之前的两数相加而得出。首几个斐波那契系数是：<code>0,1,1,2,3,5,8,13,21,34,55,89,144,233....</code></p>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fibonacci</span>(<span class=\"params\">n</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> fibo = [<span class=\"number\">0</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">2</span>; i &lt;=n; i++ )&#123;</span><br><span class=\"line\">   fibo[i] = fibo[i<span class=\"number\">-1</span>]+fibo[i<span class=\"number\">-2</span>];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">return</span> fibo[n];</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"comment\">// console.log(fibonacci(12)) =&gt; 144</span></span><br></pre></td></tr></table></figure>\n<p>运行时复杂度为O(n)</p>\n<h3 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fibonacci</span>(<span class=\"params\">n</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(n&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fibonacci(n<span class=\"number\">-1</span>) + fibonacci (n<span class=\"number\">-2</span>);  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// console.log(fibonacci(12)) =&gt; 144</span></span><br></pre></td></tr></table></figure>\n<p>运行时复杂度O(2^n)</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>斐波那契数列（意大利语: Successione di Fibonacci）又译费波拿契数列、黄金分割数列。</p>\n<p>在数学上，斐波那契数列是以递归的方法来定义：</p>\n<ul>\n<li>F0=0</li>\n<li>F1=1</li>\n<li>F2=1</li>\n<li>F3=2</li>\n<li>Fn=F(n-1)+F(n-2) (n&gt;=2)</li>\n</ul>\n<p>用文字来说，就二十斐波那契数列由0和1开始，之后的斐波那契数列由之前的两数相加而得出。首几个斐波那契系数是：<code>0,1,1,2,3,5,8,13,21,34,55,89,144,233....</code></p>\n<h2 id=\"解答\"><a href=\"#解答\" class=\"headerlink\" title=\"解答\"></a>解答</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fibonacci</span>(<span class=\"params\">n</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> fibo = [<span class=\"number\">0</span>, <span class=\"number\">1</span>];</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">2</span>; i &lt;=n; i++ )&#123;</span><br><span class=\"line\">   fibo[i] = fibo[i<span class=\"number\">-1</span>]+fibo[i<span class=\"number\">-2</span>];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">return</span> fibo[n];</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"comment\">// console.log(fibonacci(12)) =&gt; 144</span></span><br></pre></td></tr></table></figure>\n<p>运行时复杂度为O(n)</p>\n<h3 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fibonacci</span>(<span class=\"params\">n</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(n&lt;=<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fibonacci(n<span class=\"number\">-1</span>) + fibonacci (n<span class=\"number\">-2</span>);  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// console.log(fibonacci(12)) =&gt; 144</span></span><br></pre></td></tr></table></figure>\n<p>运行时复杂度O(2^n)</p>\n"},{"title":"Echarts几种常见图标和自适应","date":"2018-06-28T10:58:30.000Z","_content":"\n#### 按需引入Echarts组件\n\n封装组件\n\nindex.vue\n\n```js\n<template>\n  <div ref=\"chart\" class=\"echarts-container\"></div>\n</template>\n\n<script>\nconst echarts = require('echarts/lib/echarts')\n// 引入环形图\nrequire(\"echarts/lib/chart/pie\")\n// 引入柱状图\nrequire(\"echarts/lib/chart/bar\")\n// 引入提示框和标题组件\nrequire('echarts/lib/component/tooltip')\nrequire('echarts/lib/component/legend')\nrequire('echarts/lib/component/title')\n// 极坐标系，用于散点图和折线图，每个极坐标系拥有一个角度轴和一个半径轴\nrequire(\"echarts/lib/component/polar\")\n// 直角坐标系内绘图网格\nrequire(\"echarts/lib/component/grid\")\n\nexport default {\n  props: ['options'],\n  name: 'echarts',\n  data() {\n    return {\n      chart: null\n    }\n  },\n  watch: {\n    options: {\n      handler: function() {\n        this.initChart()\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.initChart()\n  },\n  methods: {\n    initChart() {\n      this.$nextTick(() => {\n        setTimeout(() => {\n          this.chart = echarts.init(this.$refs.chart)\n          this.chart.setOption(this.options)\n        }, 66)\n      })\n    },\n    handlerResize() {\n      window.addEventListener('resize', () => {\n        this.chart.resize()\n      }, false);\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n  .echarts-container {\n    width: 100%;\n    min-height: 200px;\n  }\n</style>\n\n```\n\n#### 使用Echarts实现饼状图、环形图、柱形图\n\nchart.vue\n\n```js\n<template>\n  <main class=\"status-container\">\n    <echarts ref=\"chart1\" class=\"echarts\" :options=\"options1\"></echarts>\n    <echarts ref=\"chart2\" class=\"echarts\" :options=\"options2\"></echarts>\n    <echarts ref=\"chart3\" class=\"echarts\" :options=\"options3\"></echarts>\n    <echarts ref=\"chart4\" class=\"echarts\" :options=\"options4\"></echarts>\n    <echarts ref=\"chart5\" class=\"echarts\" :options=\"options5\"></echarts>\n    <loading ref=\"loading\" />\n  </main>\n</template>\n\n<script>\nimport Echarts from \"@/components/Echarts\"\n\nexport default {\n  name: 'status',\n  computed: {\n    options1() {\n      return {\n          title: {\n              text: '饼状图1',\n              x: 'center'\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: \"{b} : {c}\"\n          },\n          series: [\n            {\n              type: 'pie',\n              radius: '25%',\n              center: ['50%', '60%'],\n              data: [\n                {value: 335, name: 'A'},\n                {value: 1548, name: 'B'},\n                {value: 135, name: 'C'}\n              ],\n              itemStyle: {\n                emphasis: {\n                  shadowBlur: 100,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              }\n            }\n          ]\n      };\n    },\n    options2() {\n      return {\n          title: {\n              text: '饼状图2',\n              x: 'center'\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: \"{b} : {c}\"\n          },\n          series: [\n            {\n              type: 'pie',\n              radius: '55%',\n              center: ['50%', '60%'],\n              selectedMode: 'single',\n              data: [\n                {value: 335, name: 'A'},\n                {value: 1548, name: 'B'},\n                {value: 135, name: 'C'}\n              ],\n              itemStyle: {\n                emphasis: {\n                  shadowBlur: 100,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              }\n            }\n          ]\n      };\n    },\n    options3() {\n      return {\n          title: {\n              text: '环形图',\n              x: 'center'\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: \"{b} : {c}\"\n          },\n          series: [\n            {\n              type: 'pie',\n              radius: ['20%', '30%'],\n              center: ['50%', '60%'],\n              label: {\n                    normal: {\n                        show: false,\n                        position: 'center'\n                    },\n                    emphasis: {\n                        show: true,\n                        textStyle: {\n                            fontSize: '24',\n                            fontWeight: 'bold'\n                        }\n                    }\n                },\n              data: [\n                {value: 335, name: 'A'},\n                {value: 1548, name: 'B'},\n                {value: 135, name: 'C'}\n              ]\n            }\n          ]\n      };\n    },\n    options4() {\n      return {\n        title: {\n            text: '堆叠柱状图',\n            x: 'center'\n        },\n        angleAxis: {\n          show: false,\n        },\n        radiusAxis: {\n            type: 'category',\n            data: ['周一', '周二', '周三', '周四'],\n            min: -4\n        },\n        polar: {\n\n        },\n        series: [{\n            type: 'bar',\n            data: [1, 2, 3],\n            coordinateSystem: 'polar',\n            name: 'A',\n            stack: 'a'\n        }, {\n            type: 'bar',\n            data: [1, 2, 3, 4],\n            coordinateSystem: 'polar',\n            name: 'B',\n            stack: 'a'\n        }, {\n            type: 'bar',\n            data: [1, 2, 3, 4],\n            coordinateSystem: 'polar',\n            name: 'C',\n            stack: 'a'\n        }, {\n            type: 'bar',\n            data: [1, 2, 3, 4],\n            coordinateSystem: 'polar',\n            name: 'D',\n            stack: 'a'\n        }]\n      };\n    },\n    options5() {\n      return {\n          title: {\n              text: '柱状图',\n              x: 'center'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          calculable: true, // 是否显示拖拽用的手柄\n          xAxis: [\n            {\n              type: 'category',\n              show: false,\n              data: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L']\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value',\n              show: false\n            }\n          ],\n          series: [\n            {\n              name: 'A',\n              type: 'bar',\n              data: [10, 76.7, 135.6, 162.2, 32.6, 20.0]\n            },\n            {\n              name: 'B',\n              type: 'bar',\n              data: [28.7, 70.7, 175.6, 182.2, 48.7, 18.8]\n            }\n          ]\n      };\n    },\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.$refs.chart1.handlerResize()\n      this.$refs.chart2.handlerResize()\n      this.$refs.chart3.handlerResize()\n      this.$refs.chart4.handlerResize()\n      this.$refs.chart5.handlerResize()\n    })\n  },\n  components: {\n    Echarts\n  }\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.status-container {\n  height: 100%;\n  width: 100%;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  .echarts {\n    float: left;\n    width: 50%;\n    height: 50%;\n  }\n}\n</style>\n```\n\n","source":"_posts/Echarts几种常见图标和自适应.md","raw":"---\ntitle: Echarts几种常见图标和自适应\ndate: 2018-06-28 18:58:30\ntags: [echarts, 自适应]\ncategories: 其他\n---\n\n#### 按需引入Echarts组件\n\n封装组件\n\nindex.vue\n\n```js\n<template>\n  <div ref=\"chart\" class=\"echarts-container\"></div>\n</template>\n\n<script>\nconst echarts = require('echarts/lib/echarts')\n// 引入环形图\nrequire(\"echarts/lib/chart/pie\")\n// 引入柱状图\nrequire(\"echarts/lib/chart/bar\")\n// 引入提示框和标题组件\nrequire('echarts/lib/component/tooltip')\nrequire('echarts/lib/component/legend')\nrequire('echarts/lib/component/title')\n// 极坐标系，用于散点图和折线图，每个极坐标系拥有一个角度轴和一个半径轴\nrequire(\"echarts/lib/component/polar\")\n// 直角坐标系内绘图网格\nrequire(\"echarts/lib/component/grid\")\n\nexport default {\n  props: ['options'],\n  name: 'echarts',\n  data() {\n    return {\n      chart: null\n    }\n  },\n  watch: {\n    options: {\n      handler: function() {\n        this.initChart()\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.initChart()\n  },\n  methods: {\n    initChart() {\n      this.$nextTick(() => {\n        setTimeout(() => {\n          this.chart = echarts.init(this.$refs.chart)\n          this.chart.setOption(this.options)\n        }, 66)\n      })\n    },\n    handlerResize() {\n      window.addEventListener('resize', () => {\n        this.chart.resize()\n      }, false);\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n  .echarts-container {\n    width: 100%;\n    min-height: 200px;\n  }\n</style>\n\n```\n\n#### 使用Echarts实现饼状图、环形图、柱形图\n\nchart.vue\n\n```js\n<template>\n  <main class=\"status-container\">\n    <echarts ref=\"chart1\" class=\"echarts\" :options=\"options1\"></echarts>\n    <echarts ref=\"chart2\" class=\"echarts\" :options=\"options2\"></echarts>\n    <echarts ref=\"chart3\" class=\"echarts\" :options=\"options3\"></echarts>\n    <echarts ref=\"chart4\" class=\"echarts\" :options=\"options4\"></echarts>\n    <echarts ref=\"chart5\" class=\"echarts\" :options=\"options5\"></echarts>\n    <loading ref=\"loading\" />\n  </main>\n</template>\n\n<script>\nimport Echarts from \"@/components/Echarts\"\n\nexport default {\n  name: 'status',\n  computed: {\n    options1() {\n      return {\n          title: {\n              text: '饼状图1',\n              x: 'center'\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: \"{b} : {c}\"\n          },\n          series: [\n            {\n              type: 'pie',\n              radius: '25%',\n              center: ['50%', '60%'],\n              data: [\n                {value: 335, name: 'A'},\n                {value: 1548, name: 'B'},\n                {value: 135, name: 'C'}\n              ],\n              itemStyle: {\n                emphasis: {\n                  shadowBlur: 100,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              }\n            }\n          ]\n      };\n    },\n    options2() {\n      return {\n          title: {\n              text: '饼状图2',\n              x: 'center'\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: \"{b} : {c}\"\n          },\n          series: [\n            {\n              type: 'pie',\n              radius: '55%',\n              center: ['50%', '60%'],\n              selectedMode: 'single',\n              data: [\n                {value: 335, name: 'A'},\n                {value: 1548, name: 'B'},\n                {value: 135, name: 'C'}\n              ],\n              itemStyle: {\n                emphasis: {\n                  shadowBlur: 100,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              }\n            }\n          ]\n      };\n    },\n    options3() {\n      return {\n          title: {\n              text: '环形图',\n              x: 'center'\n          },\n          tooltip: {\n            trigger: 'item',\n            formatter: \"{b} : {c}\"\n          },\n          series: [\n            {\n              type: 'pie',\n              radius: ['20%', '30%'],\n              center: ['50%', '60%'],\n              label: {\n                    normal: {\n                        show: false,\n                        position: 'center'\n                    },\n                    emphasis: {\n                        show: true,\n                        textStyle: {\n                            fontSize: '24',\n                            fontWeight: 'bold'\n                        }\n                    }\n                },\n              data: [\n                {value: 335, name: 'A'},\n                {value: 1548, name: 'B'},\n                {value: 135, name: 'C'}\n              ]\n            }\n          ]\n      };\n    },\n    options4() {\n      return {\n        title: {\n            text: '堆叠柱状图',\n            x: 'center'\n        },\n        angleAxis: {\n          show: false,\n        },\n        radiusAxis: {\n            type: 'category',\n            data: ['周一', '周二', '周三', '周四'],\n            min: -4\n        },\n        polar: {\n\n        },\n        series: [{\n            type: 'bar',\n            data: [1, 2, 3],\n            coordinateSystem: 'polar',\n            name: 'A',\n            stack: 'a'\n        }, {\n            type: 'bar',\n            data: [1, 2, 3, 4],\n            coordinateSystem: 'polar',\n            name: 'B',\n            stack: 'a'\n        }, {\n            type: 'bar',\n            data: [1, 2, 3, 4],\n            coordinateSystem: 'polar',\n            name: 'C',\n            stack: 'a'\n        }, {\n            type: 'bar',\n            data: [1, 2, 3, 4],\n            coordinateSystem: 'polar',\n            name: 'D',\n            stack: 'a'\n        }]\n      };\n    },\n    options5() {\n      return {\n          title: {\n              text: '柱状图',\n              x: 'center'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          calculable: true, // 是否显示拖拽用的手柄\n          xAxis: [\n            {\n              type: 'category',\n              show: false,\n              data: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L']\n            }\n          ],\n          yAxis: [\n            {\n              type: 'value',\n              show: false\n            }\n          ],\n          series: [\n            {\n              name: 'A',\n              type: 'bar',\n              data: [10, 76.7, 135.6, 162.2, 32.6, 20.0]\n            },\n            {\n              name: 'B',\n              type: 'bar',\n              data: [28.7, 70.7, 175.6, 182.2, 48.7, 18.8]\n            }\n          ]\n      };\n    },\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.$refs.chart1.handlerResize()\n      this.$refs.chart2.handlerResize()\n      this.$refs.chart3.handlerResize()\n      this.$refs.chart4.handlerResize()\n      this.$refs.chart5.handlerResize()\n    })\n  },\n  components: {\n    Echarts\n  }\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.status-container {\n  height: 100%;\n  width: 100%;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  .echarts {\n    float: left;\n    width: 50%;\n    height: 50%;\n  }\n}\n</style>\n```\n\n","slug":"Echarts几种常见图标和自适应","published":1,"updated":"2018-08-17T07:35:36.755Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18guf0003oaqokdd1u2cf","content":"<h4 id=\"按需引入Echarts组件\"><a href=\"#按需引入Echarts组件\" class=\"headerlink\" title=\"按需引入Echarts组件\"></a>按需引入Echarts组件</h4><p>封装组件</p>\n<p>index.vue</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div ref=<span class=\"string\">\"chart\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts-container\"</span>&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">const echarts = require('echarts/</span>lib/echarts<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">// 引入环形图</span></span><br><span class=\"line\"><span class=\"string\">require(\"echarts/lib/chart/pie\")</span></span><br><span class=\"line\"><span class=\"string\">// 引入柱状图</span></span><br><span class=\"line\"><span class=\"string\">require(\"echarts/lib/chart/bar\")</span></span><br><span class=\"line\"><span class=\"string\">// 引入提示框和标题组件</span></span><br><span class=\"line\"><span class=\"string\">require('</span>echarts/lib/component/tooltip<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">require('</span>echarts/lib/component/legend<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">require('</span>echarts/lib/component/title<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">// 极坐标系，用于散点图和折线图，每个极坐标系拥有一个角度轴和一个半径轴</span></span><br><span class=\"line\"><span class=\"string\">require(\"echarts/lib/component/polar\")</span></span><br><span class=\"line\"><span class=\"string\">// 直角坐标系内绘图网格</span></span><br><span class=\"line\"><span class=\"string\">require(\"echarts/lib/component/grid\")</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">export default &#123;</span></span><br><span class=\"line\"><span class=\"string\">  props: ['</span>options<span class=\"string\">'],</span></span><br><span class=\"line\"><span class=\"string\">  name: '</span>echarts<span class=\"string\">',</span></span><br><span class=\"line\"><span class=\"string\">  data() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">      chart: null</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  watch: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    options: &#123;</span></span><br><span class=\"line\"><span class=\"string\">      handler: function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        this.initChart()</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,</span></span><br><span class=\"line\"><span class=\"string\">      deep: true</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  mounted() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    this.initChart()</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    initChart() &#123;</span></span><br><span class=\"line\"><span class=\"string\">      this.$nextTick(() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">        setTimeout(() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">          this.chart = echarts.init(this.$refs.chart)</span></span><br><span class=\"line\"><span class=\"string\">          this.chart.setOption(this.options)</span></span><br><span class=\"line\"><span class=\"string\">        &#125;, 66)</span></span><br><span class=\"line\"><span class=\"string\">      &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    &#125;,</span></span><br><span class=\"line\"><span class=\"string\">    handlerResize() &#123;</span></span><br><span class=\"line\"><span class=\"string\">      window.addEventListener('</span>resize<span class=\"string\">', () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">        this.chart.resize()</span></span><br><span class=\"line\"><span class=\"string\">      &#125;, false);</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;style lang=\"scss\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">  .echarts-container &#123;</span></span><br><span class=\"line\"><span class=\"string\">    width: 100%;</span></span><br><span class=\"line\"><span class=\"string\">    min-height: 200px;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用Echarts实现饼状图、环形图、柱形图\"><a href=\"#使用Echarts实现饼状图、环形图、柱形图\" class=\"headerlink\" title=\"使用Echarts实现饼状图、环形图、柱形图\"></a>使用Echarts实现饼状图、环形图、柱形图</h4><p>chart.vue</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;main <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"status-container\"</span>&gt;</span><br><span class=\"line\">    &lt;echarts ref=<span class=\"string\">\"chart1\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts\"</span> :options=<span class=\"string\">\"options1\"</span>&gt;&lt;/echarts&gt;</span><br><span class=\"line\">    &lt;echarts ref=<span class=\"string\">\"chart2\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts\"</span> :options=<span class=\"string\">\"options2\"</span>&gt;&lt;/echarts&gt;</span><br><span class=\"line\">    &lt;echarts ref=<span class=\"string\">\"chart3\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts\"</span> :options=<span class=\"string\">\"options3\"</span>&gt;&lt;/echarts&gt;</span><br><span class=\"line\">    &lt;echarts ref=<span class=\"string\">\"chart4\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts\"</span> :options=<span class=\"string\">\"options4\"</span>&gt;&lt;/echarts&gt;</span><br><span class=\"line\">    &lt;echarts ref=<span class=\"string\">\"chart5\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts\"</span> :options=<span class=\"string\">\"options5\"</span>&gt;&lt;/echarts&gt;</span><br><span class=\"line\">    &lt;loading ref=<span class=\"string\">\"loading\"</span> /&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/main&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Echarts <span class=\"keyword\">from</span> <span class=\"string\">\"@/components/Echarts\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'status'</span>,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    options1() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">              text: <span class=\"string\">'饼状图1'</span>,</span><br><span class=\"line\">              x: <span class=\"string\">'center'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          tooltip: &#123;</span><br><span class=\"line\">            trigger: <span class=\"string\">'item'</span>,</span><br><span class=\"line\">            formatter: <span class=\"string\">\"&#123;b&#125; : &#123;c&#125;\"</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          series: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              type: <span class=\"string\">'pie'</span>,</span><br><span class=\"line\">              radius: <span class=\"string\">'25%'</span>,</span><br><span class=\"line\">              center: [<span class=\"string\">'50%'</span>, <span class=\"string\">'60%'</span>],</span><br><span class=\"line\">              data: [</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">335</span>, <span class=\"attr\">name</span>: <span class=\"string\">'A'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">1548</span>, <span class=\"attr\">name</span>: <span class=\"string\">'B'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">135</span>, <span class=\"attr\">name</span>: <span class=\"string\">'C'</span>&#125;</span><br><span class=\"line\">              ],</span><br><span class=\"line\">              itemStyle: &#123;</span><br><span class=\"line\">                emphasis: &#123;</span><br><span class=\"line\">                  shadowBlur: <span class=\"number\">100</span>,</span><br><span class=\"line\">                  shadowOffsetX: <span class=\"number\">0</span>,</span><br><span class=\"line\">                  shadowColor: <span class=\"string\">'rgba(0, 0, 0, 0.5)'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    options2() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">              text: <span class=\"string\">'饼状图2'</span>,</span><br><span class=\"line\">              x: <span class=\"string\">'center'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          tooltip: &#123;</span><br><span class=\"line\">            trigger: <span class=\"string\">'item'</span>,</span><br><span class=\"line\">            formatter: <span class=\"string\">\"&#123;b&#125; : &#123;c&#125;\"</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          series: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              type: <span class=\"string\">'pie'</span>,</span><br><span class=\"line\">              radius: <span class=\"string\">'55%'</span>,</span><br><span class=\"line\">              center: [<span class=\"string\">'50%'</span>, <span class=\"string\">'60%'</span>],</span><br><span class=\"line\">              selectedMode: <span class=\"string\">'single'</span>,</span><br><span class=\"line\">              data: [</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">335</span>, <span class=\"attr\">name</span>: <span class=\"string\">'A'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">1548</span>, <span class=\"attr\">name</span>: <span class=\"string\">'B'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">135</span>, <span class=\"attr\">name</span>: <span class=\"string\">'C'</span>&#125;</span><br><span class=\"line\">              ],</span><br><span class=\"line\">              itemStyle: &#123;</span><br><span class=\"line\">                emphasis: &#123;</span><br><span class=\"line\">                  shadowBlur: <span class=\"number\">100</span>,</span><br><span class=\"line\">                  shadowOffsetX: <span class=\"number\">0</span>,</span><br><span class=\"line\">                  shadowColor: <span class=\"string\">'rgba(0, 0, 0, 0.5)'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    options3() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">              text: <span class=\"string\">'环形图'</span>,</span><br><span class=\"line\">              x: <span class=\"string\">'center'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          tooltip: &#123;</span><br><span class=\"line\">            trigger: <span class=\"string\">'item'</span>,</span><br><span class=\"line\">            formatter: <span class=\"string\">\"&#123;b&#125; : &#123;c&#125;\"</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          series: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              type: <span class=\"string\">'pie'</span>,</span><br><span class=\"line\">              radius: [<span class=\"string\">'20%'</span>, <span class=\"string\">'30%'</span>],</span><br><span class=\"line\">              center: [<span class=\"string\">'50%'</span>, <span class=\"string\">'60%'</span>],</span><br><span class=\"line\">              label: &#123;</span><br><span class=\"line\">                    normal: &#123;</span><br><span class=\"line\">                        show: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                        position: <span class=\"string\">'center'</span></span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    emphasis: &#123;</span><br><span class=\"line\">                        show: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                        textStyle: &#123;</span><br><span class=\"line\">                            fontSize: <span class=\"string\">'24'</span>,</span><br><span class=\"line\">                            fontWeight: <span class=\"string\">'bold'</span></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              data: [</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">335</span>, <span class=\"attr\">name</span>: <span class=\"string\">'A'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">1548</span>, <span class=\"attr\">name</span>: <span class=\"string\">'B'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">135</span>, <span class=\"attr\">name</span>: <span class=\"string\">'C'</span>&#125;</span><br><span class=\"line\">              ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    options4() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        title: &#123;</span><br><span class=\"line\">            text: <span class=\"string\">'堆叠柱状图'</span>,</span><br><span class=\"line\">            x: <span class=\"string\">'center'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        angleAxis: &#123;</span><br><span class=\"line\">          show: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        radiusAxis: &#123;</span><br><span class=\"line\">            type: <span class=\"string\">'category'</span>,</span><br><span class=\"line\">            data: [<span class=\"string\">'周一'</span>, <span class=\"string\">'周二'</span>, <span class=\"string\">'周三'</span>, <span class=\"string\">'周四'</span>],</span><br><span class=\"line\">            min: <span class=\"number\">-4</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        polar: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        series: [&#123;</span><br><span class=\"line\">            type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">            data: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>],</span><br><span class=\"line\">            coordinateSystem: <span class=\"string\">'polar'</span>,</span><br><span class=\"line\">            name: <span class=\"string\">'A'</span>,</span><br><span class=\"line\">            stack: <span class=\"string\">'a'</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">            data: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">            coordinateSystem: <span class=\"string\">'polar'</span>,</span><br><span class=\"line\">            name: <span class=\"string\">'B'</span>,</span><br><span class=\"line\">            stack: <span class=\"string\">'a'</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">            data: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">            coordinateSystem: <span class=\"string\">'polar'</span>,</span><br><span class=\"line\">            name: <span class=\"string\">'C'</span>,</span><br><span class=\"line\">            stack: <span class=\"string\">'a'</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">            data: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">            coordinateSystem: <span class=\"string\">'polar'</span>,</span><br><span class=\"line\">            name: <span class=\"string\">'D'</span>,</span><br><span class=\"line\">            stack: <span class=\"string\">'a'</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    options5() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">              text: <span class=\"string\">'柱状图'</span>,</span><br><span class=\"line\">              x: <span class=\"string\">'center'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          tooltip: &#123;</span><br><span class=\"line\">            trigger: <span class=\"string\">'axis'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          calculable: <span class=\"literal\">true</span>, <span class=\"comment\">// 是否显示拖拽用的手柄</span></span><br><span class=\"line\">          xAxis: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              type: <span class=\"string\">'category'</span>,</span><br><span class=\"line\">              show: <span class=\"literal\">false</span>,</span><br><span class=\"line\">              data: [<span class=\"string\">'A'</span>, <span class=\"string\">'B'</span>, <span class=\"string\">'C'</span>, <span class=\"string\">'D'</span>, <span class=\"string\">'E'</span>, <span class=\"string\">'F'</span>, <span class=\"string\">'G'</span>, <span class=\"string\">'H'</span>, <span class=\"string\">'I'</span>, <span class=\"string\">'J'</span>, <span class=\"string\">'K'</span>, <span class=\"string\">'L'</span>]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          yAxis: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              type: <span class=\"string\">'value'</span>,</span><br><span class=\"line\">              show: <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          series: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              name: <span class=\"string\">'A'</span>,</span><br><span class=\"line\">              type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">              data: [<span class=\"number\">10</span>, <span class=\"number\">76.7</span>, <span class=\"number\">135.6</span>, <span class=\"number\">162.2</span>, <span class=\"number\">32.6</span>, <span class=\"number\">20.0</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              name: <span class=\"string\">'B'</span>,</span><br><span class=\"line\">              type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">              data: [<span class=\"number\">28.7</span>, <span class=\"number\">70.7</span>, <span class=\"number\">175.6</span>, <span class=\"number\">182.2</span>, <span class=\"number\">48.7</span>, <span class=\"number\">18.8</span>]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$refs.chart1.handlerResize()</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$refs.chart2.handlerResize()</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$refs.chart3.handlerResize()</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$refs.chart4.handlerResize()</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$refs.chart5.handlerResize()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    Echarts</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;style rel=\"stylesheet/</span>scss<span class=\"string\">\" lang=\"</span>scss<span class=\"string\">\" scoped&gt;</span></span><br><span class=\"line\"><span class=\"string\">.status-container &#123;</span></span><br><span class=\"line\"><span class=\"string\">  height: 100%;</span></span><br><span class=\"line\"><span class=\"string\">  width: 100%;</span></span><br><span class=\"line\"><span class=\"string\">  overflow-x: hidden;</span></span><br><span class=\"line\"><span class=\"string\">  overflow-y: scroll;</span></span><br><span class=\"line\"><span class=\"string\">  .echarts &#123;</span></span><br><span class=\"line\"><span class=\"string\">    float: left;</span></span><br><span class=\"line\"><span class=\"string\">    width: 50%;</span></span><br><span class=\"line\"><span class=\"string\">    height: 50%;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"按需引入Echarts组件\"><a href=\"#按需引入Echarts组件\" class=\"headerlink\" title=\"按需引入Echarts组件\"></a>按需引入Echarts组件</h4><p>封装组件</p>\n<p>index.vue</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div ref=<span class=\"string\">\"chart\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts-container\"</span>&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/template&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">const echarts = require('echarts/</span>lib/echarts<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">// 引入环形图</span></span><br><span class=\"line\"><span class=\"string\">require(\"echarts/lib/chart/pie\")</span></span><br><span class=\"line\"><span class=\"string\">// 引入柱状图</span></span><br><span class=\"line\"><span class=\"string\">require(\"echarts/lib/chart/bar\")</span></span><br><span class=\"line\"><span class=\"string\">// 引入提示框和标题组件</span></span><br><span class=\"line\"><span class=\"string\">require('</span>echarts/lib/component/tooltip<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">require('</span>echarts/lib/component/legend<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">require('</span>echarts/lib/component/title<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">// 极坐标系，用于散点图和折线图，每个极坐标系拥有一个角度轴和一个半径轴</span></span><br><span class=\"line\"><span class=\"string\">require(\"echarts/lib/component/polar\")</span></span><br><span class=\"line\"><span class=\"string\">// 直角坐标系内绘图网格</span></span><br><span class=\"line\"><span class=\"string\">require(\"echarts/lib/component/grid\")</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">export default &#123;</span></span><br><span class=\"line\"><span class=\"string\">  props: ['</span>options<span class=\"string\">'],</span></span><br><span class=\"line\"><span class=\"string\">  name: '</span>echarts<span class=\"string\">',</span></span><br><span class=\"line\"><span class=\"string\">  data() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    return &#123;</span></span><br><span class=\"line\"><span class=\"string\">      chart: null</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  watch: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    options: &#123;</span></span><br><span class=\"line\"><span class=\"string\">      handler: function() &#123;</span></span><br><span class=\"line\"><span class=\"string\">        this.initChart()</span></span><br><span class=\"line\"><span class=\"string\">      &#125;,</span></span><br><span class=\"line\"><span class=\"string\">      deep: true</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  mounted() &#123;</span></span><br><span class=\"line\"><span class=\"string\">    this.initChart()</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  methods: &#123;</span></span><br><span class=\"line\"><span class=\"string\">    initChart() &#123;</span></span><br><span class=\"line\"><span class=\"string\">      this.$nextTick(() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">        setTimeout(() =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">          this.chart = echarts.init(this.$refs.chart)</span></span><br><span class=\"line\"><span class=\"string\">          this.chart.setOption(this.options)</span></span><br><span class=\"line\"><span class=\"string\">        &#125;, 66)</span></span><br><span class=\"line\"><span class=\"string\">      &#125;)</span></span><br><span class=\"line\"><span class=\"string\">    &#125;,</span></span><br><span class=\"line\"><span class=\"string\">    handlerResize() &#123;</span></span><br><span class=\"line\"><span class=\"string\">      window.addEventListener('</span>resize<span class=\"string\">', () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"string\">        this.chart.resize()</span></span><br><span class=\"line\"><span class=\"string\">      &#125;, false);</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/script&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&lt;style lang=\"scss\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">  .echarts-container &#123;</span></span><br><span class=\"line\"><span class=\"string\">    width: 100%;</span></span><br><span class=\"line\"><span class=\"string\">    min-height: 200px;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用Echarts实现饼状图、环形图、柱形图\"><a href=\"#使用Echarts实现饼状图、环形图、柱形图\" class=\"headerlink\" title=\"使用Echarts实现饼状图、环形图、柱形图\"></a>使用Echarts实现饼状图、环形图、柱形图</h4><p>chart.vue</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;main <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"status-container\"</span>&gt;</span><br><span class=\"line\">    &lt;echarts ref=<span class=\"string\">\"chart1\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts\"</span> :options=<span class=\"string\">\"options1\"</span>&gt;&lt;/echarts&gt;</span><br><span class=\"line\">    &lt;echarts ref=<span class=\"string\">\"chart2\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts\"</span> :options=<span class=\"string\">\"options2\"</span>&gt;&lt;/echarts&gt;</span><br><span class=\"line\">    &lt;echarts ref=<span class=\"string\">\"chart3\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts\"</span> :options=<span class=\"string\">\"options3\"</span>&gt;&lt;/echarts&gt;</span><br><span class=\"line\">    &lt;echarts ref=<span class=\"string\">\"chart4\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts\"</span> :options=<span class=\"string\">\"options4\"</span>&gt;&lt;/echarts&gt;</span><br><span class=\"line\">    &lt;echarts ref=<span class=\"string\">\"chart5\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"echarts\"</span> :options=<span class=\"string\">\"options5\"</span>&gt;&lt;/echarts&gt;</span><br><span class=\"line\">    &lt;loading ref=<span class=\"string\">\"loading\"</span> /&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/main&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Echarts <span class=\"keyword\">from</span> <span class=\"string\">\"@/components/Echarts\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'status'</span>,</span><br><span class=\"line\">  computed: &#123;</span><br><span class=\"line\">    options1() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">              text: <span class=\"string\">'饼状图1'</span>,</span><br><span class=\"line\">              x: <span class=\"string\">'center'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          tooltip: &#123;</span><br><span class=\"line\">            trigger: <span class=\"string\">'item'</span>,</span><br><span class=\"line\">            formatter: <span class=\"string\">\"&#123;b&#125; : &#123;c&#125;\"</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          series: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              type: <span class=\"string\">'pie'</span>,</span><br><span class=\"line\">              radius: <span class=\"string\">'25%'</span>,</span><br><span class=\"line\">              center: [<span class=\"string\">'50%'</span>, <span class=\"string\">'60%'</span>],</span><br><span class=\"line\">              data: [</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">335</span>, <span class=\"attr\">name</span>: <span class=\"string\">'A'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">1548</span>, <span class=\"attr\">name</span>: <span class=\"string\">'B'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">135</span>, <span class=\"attr\">name</span>: <span class=\"string\">'C'</span>&#125;</span><br><span class=\"line\">              ],</span><br><span class=\"line\">              itemStyle: &#123;</span><br><span class=\"line\">                emphasis: &#123;</span><br><span class=\"line\">                  shadowBlur: <span class=\"number\">100</span>,</span><br><span class=\"line\">                  shadowOffsetX: <span class=\"number\">0</span>,</span><br><span class=\"line\">                  shadowColor: <span class=\"string\">'rgba(0, 0, 0, 0.5)'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    options2() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">              text: <span class=\"string\">'饼状图2'</span>,</span><br><span class=\"line\">              x: <span class=\"string\">'center'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          tooltip: &#123;</span><br><span class=\"line\">            trigger: <span class=\"string\">'item'</span>,</span><br><span class=\"line\">            formatter: <span class=\"string\">\"&#123;b&#125; : &#123;c&#125;\"</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          series: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              type: <span class=\"string\">'pie'</span>,</span><br><span class=\"line\">              radius: <span class=\"string\">'55%'</span>,</span><br><span class=\"line\">              center: [<span class=\"string\">'50%'</span>, <span class=\"string\">'60%'</span>],</span><br><span class=\"line\">              selectedMode: <span class=\"string\">'single'</span>,</span><br><span class=\"line\">              data: [</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">335</span>, <span class=\"attr\">name</span>: <span class=\"string\">'A'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">1548</span>, <span class=\"attr\">name</span>: <span class=\"string\">'B'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">135</span>, <span class=\"attr\">name</span>: <span class=\"string\">'C'</span>&#125;</span><br><span class=\"line\">              ],</span><br><span class=\"line\">              itemStyle: &#123;</span><br><span class=\"line\">                emphasis: &#123;</span><br><span class=\"line\">                  shadowBlur: <span class=\"number\">100</span>,</span><br><span class=\"line\">                  shadowOffsetX: <span class=\"number\">0</span>,</span><br><span class=\"line\">                  shadowColor: <span class=\"string\">'rgba(0, 0, 0, 0.5)'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    options3() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">              text: <span class=\"string\">'环形图'</span>,</span><br><span class=\"line\">              x: <span class=\"string\">'center'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          tooltip: &#123;</span><br><span class=\"line\">            trigger: <span class=\"string\">'item'</span>,</span><br><span class=\"line\">            formatter: <span class=\"string\">\"&#123;b&#125; : &#123;c&#125;\"</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          series: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              type: <span class=\"string\">'pie'</span>,</span><br><span class=\"line\">              radius: [<span class=\"string\">'20%'</span>, <span class=\"string\">'30%'</span>],</span><br><span class=\"line\">              center: [<span class=\"string\">'50%'</span>, <span class=\"string\">'60%'</span>],</span><br><span class=\"line\">              label: &#123;</span><br><span class=\"line\">                    normal: &#123;</span><br><span class=\"line\">                        show: <span class=\"literal\">false</span>,</span><br><span class=\"line\">                        position: <span class=\"string\">'center'</span></span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    emphasis: &#123;</span><br><span class=\"line\">                        show: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                        textStyle: &#123;</span><br><span class=\"line\">                            fontSize: <span class=\"string\">'24'</span>,</span><br><span class=\"line\">                            fontWeight: <span class=\"string\">'bold'</span></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">              data: [</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">335</span>, <span class=\"attr\">name</span>: <span class=\"string\">'A'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">1548</span>, <span class=\"attr\">name</span>: <span class=\"string\">'B'</span>&#125;,</span><br><span class=\"line\">                &#123;<span class=\"attr\">value</span>: <span class=\"number\">135</span>, <span class=\"attr\">name</span>: <span class=\"string\">'C'</span>&#125;</span><br><span class=\"line\">              ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    options4() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        title: &#123;</span><br><span class=\"line\">            text: <span class=\"string\">'堆叠柱状图'</span>,</span><br><span class=\"line\">            x: <span class=\"string\">'center'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        angleAxis: &#123;</span><br><span class=\"line\">          show: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        radiusAxis: &#123;</span><br><span class=\"line\">            type: <span class=\"string\">'category'</span>,</span><br><span class=\"line\">            data: [<span class=\"string\">'周一'</span>, <span class=\"string\">'周二'</span>, <span class=\"string\">'周三'</span>, <span class=\"string\">'周四'</span>],</span><br><span class=\"line\">            min: <span class=\"number\">-4</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        polar: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        series: [&#123;</span><br><span class=\"line\">            type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">            data: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>],</span><br><span class=\"line\">            coordinateSystem: <span class=\"string\">'polar'</span>,</span><br><span class=\"line\">            name: <span class=\"string\">'A'</span>,</span><br><span class=\"line\">            stack: <span class=\"string\">'a'</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">            data: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">            coordinateSystem: <span class=\"string\">'polar'</span>,</span><br><span class=\"line\">            name: <span class=\"string\">'B'</span>,</span><br><span class=\"line\">            stack: <span class=\"string\">'a'</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">            data: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">            coordinateSystem: <span class=\"string\">'polar'</span>,</span><br><span class=\"line\">            name: <span class=\"string\">'C'</span>,</span><br><span class=\"line\">            stack: <span class=\"string\">'a'</span></span><br><span class=\"line\">        &#125;, &#123;</span><br><span class=\"line\">            type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">            data: [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>],</span><br><span class=\"line\">            coordinateSystem: <span class=\"string\">'polar'</span>,</span><br><span class=\"line\">            name: <span class=\"string\">'D'</span>,</span><br><span class=\"line\">            stack: <span class=\"string\">'a'</span></span><br><span class=\"line\">        &#125;]</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    options5() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">          title: &#123;</span><br><span class=\"line\">              text: <span class=\"string\">'柱状图'</span>,</span><br><span class=\"line\">              x: <span class=\"string\">'center'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          tooltip: &#123;</span><br><span class=\"line\">            trigger: <span class=\"string\">'axis'</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          calculable: <span class=\"literal\">true</span>, <span class=\"comment\">// 是否显示拖拽用的手柄</span></span><br><span class=\"line\">          xAxis: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              type: <span class=\"string\">'category'</span>,</span><br><span class=\"line\">              show: <span class=\"literal\">false</span>,</span><br><span class=\"line\">              data: [<span class=\"string\">'A'</span>, <span class=\"string\">'B'</span>, <span class=\"string\">'C'</span>, <span class=\"string\">'D'</span>, <span class=\"string\">'E'</span>, <span class=\"string\">'F'</span>, <span class=\"string\">'G'</span>, <span class=\"string\">'H'</span>, <span class=\"string\">'I'</span>, <span class=\"string\">'J'</span>, <span class=\"string\">'K'</span>, <span class=\"string\">'L'</span>]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          yAxis: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              type: <span class=\"string\">'value'</span>,</span><br><span class=\"line\">              show: <span class=\"literal\">false</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ],</span><br><span class=\"line\">          series: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              name: <span class=\"string\">'A'</span>,</span><br><span class=\"line\">              type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">              data: [<span class=\"number\">10</span>, <span class=\"number\">76.7</span>, <span class=\"number\">135.6</span>, <span class=\"number\">162.2</span>, <span class=\"number\">32.6</span>, <span class=\"number\">20.0</span>]</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              name: <span class=\"string\">'B'</span>,</span><br><span class=\"line\">              type: <span class=\"string\">'bar'</span>,</span><br><span class=\"line\">              data: [<span class=\"number\">28.7</span>, <span class=\"number\">70.7</span>, <span class=\"number\">175.6</span>, <span class=\"number\">182.2</span>, <span class=\"number\">48.7</span>, <span class=\"number\">18.8</span>]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.$nextTick(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$refs.chart1.handlerResize()</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$refs.chart2.handlerResize()</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$refs.chart3.handlerResize()</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$refs.chart4.handlerResize()</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.$refs.chart5.handlerResize()</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  components: &#123;</span><br><span class=\"line\">    Echarts</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">&lt;style rel=\"stylesheet/</span>scss<span class=\"string\">\" lang=\"</span>scss<span class=\"string\">\" scoped&gt;</span></span><br><span class=\"line\"><span class=\"string\">.status-container &#123;</span></span><br><span class=\"line\"><span class=\"string\">  height: 100%;</span></span><br><span class=\"line\"><span class=\"string\">  width: 100%;</span></span><br><span class=\"line\"><span class=\"string\">  overflow-x: hidden;</span></span><br><span class=\"line\"><span class=\"string\">  overflow-y: scroll;</span></span><br><span class=\"line\"><span class=\"string\">  .echarts &#123;</span></span><br><span class=\"line\"><span class=\"string\">    float: left;</span></span><br><span class=\"line\"><span class=\"string\">    width: 50%;</span></span><br><span class=\"line\"><span class=\"string\">    height: 50%;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure>\n"},{"title":"JS数组之排列组合","date":"2018-06-28T11:18:21.000Z","_content":"\n## 两个数组排列组合\n\n比如目前有两个数组：\n\na=[1,2,3]\n\nb=[3,4,5]\n\n那么数组排列的情况就有`3*3=9`种，代码：\n\n```js\nvar a=[1,2,3];\nvar b=[4,5,6];\nvar newArr=[];\nvar index=0; // 组合次数\nfor(var i=0;i<a.length;i++){\n\tfor(var j=0;j<b.length;j++){\n\t\tnewArr[index]=[a[i]].concat(b[j]);\n\t\tindex++;\n\t}\n}\nconsole.log (newArr);\nconsole.log(index)\n```\n\n输出结果：\n\n```\n[[1, 4], [1, 5], [1, 6], [2, 4], [2, 5], [2, 6], [3, 4], [3, 5], [3, 6]]\n\n9\n```\n\n\n\n## 多个数组排列组合\n\n### 方法一\n\n```js\nvar a=['a1', 'a2', null],\nvar b=['b1','b2', 'b3', 'b4', 'any', null],\nvar c=['c1', 'c2', 'c3', 'c4', 'any', null],\nvar d=['d1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', null];\n\nvar newArr=[];\nvar index=0;\nfor(var i=0;i<a.length;i++){\n    \n    // 两两组合ab\n\tfor(var j=0;j<b.length;j++){\n\t\tnewArr[index]=[a[i]].concat(b[j]);\n\t\tindex++;\n      // 三三组合abc\n        for(var k=0;k<c.length;k++){\n\t\t  newArr[index]=[a[i]].concat(b[j], c[k]);\n\t\t  index++;\n          // 四组合\n          for(var m=0;m<d.length;m++){\n            newArr[index]=[a[i]].concat(b[j],c[k],d[m]);\n            index++;\n          }\n\t    }\n      // 三三组合abd\n        for(var m=0;m<d.length;m++){\n\t\t  newArr[index]=[a[i]].concat(b[j], d[m]);\n\t\t  index++;\n\t    }\n\t}\n    for(var m=0;m<c.length;m++){\n      // 两两组合ac\n\t    newArr[index]=[a[i]].concat(c[m]);\n\t\tindex++;\n\t}\n    for(var n=0;n<d.length;n++){\n      // 两两组合ad\n\t    newArr[index]=[a[i]].concat(d[n]);\n\t\tindex++;\n      // 三三组合abd\n        for(var m=0;m<b.length;m++){\n\t\t  newArr[index]=[a[i]].concat(b[m], d[n]);\n\t\t  index++;\n\t    }\n\t}\n}\nfor(var x=0;x<b.length;x++) {\n  for(var y=0;y<c.length;y++) {\n    // 两两组合bc\n    newArr[index]=[b[x]].concat(c[y]);\n\tindex++;\n    // 三三组合bcd\n    for(var i=0;i<d.length;i++){\n      newArr[index]=[b[x]].concat(c[y], d[i]);\n      index++;\n    }\n  }\n  // 两两组合bd\n  for(var j=0;j<d.length;j++){\n    newArr[index]=[b[x]].concat(d[j]);\n    index++;\n  }\n}\nfor(var m=0;m<c.length;m++){\n  // 两两组合cd\n  for(var n=0;n<d.length;n++){\n    newArr[index]=[c[m]].concat(d[n]);\n    index++;\n  }\n}\nconsole.log (newArr);\nconsole.log(index);\n```\n\n\n\n### 方法二\n\n```js\nvar a=['a1', 'a2', null],\nvar b=['b1','b2', 'b3', 'b4', 'any', null],\nvar c=['c1', 'c2', 'c3', 'c4', 'any', null],\nvar d=['d1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', null];\n\nvar temp = [];\n\nvar addTemp = function(obj) {\n  var arr = [];\n  var i = 0;\n  Object.keys(obj).forEach(function(key, index) {\n     arr.push(obj[key]);\n     if(!obj[key]) {\n       i++;\n     }\n  });\n  if(arr.length !== i) {\n     temp.push(obj);\n  }\n};\n\nfor(var i = 0, len = a.length; i < len; i++) {\n  addTemp({a: a[i]});\n  for(var j = 0,len2 = b.length; j < len2; j++) {\n    addTemp({\n      a: a[i],\n      b: b[j]\n    });\n    for(var k = 0,len3 = c.length; k < len3; k++) {\n      addTemp({\n        a: a[i],\n        b: b[j],\n        c: c[k]\n      });\n      for(var f = 0,len4 = d.length; f < len4; f++) {\n        addTemp({\n          a: a[i],\n          b: b[j],\n          c: c[k],\n          d: d[f]\n        });\n      }\n    }\n  }\n}\nconsole.log(temp.length);\n```\n\n","source":"_posts/JS数组之排列组合.md","raw":"---\ntitle: JS数组之排列组合\ndate: 2018-06-28 19:18:21\ntags: [JS, 排列组合]\ncategories: JS\n---\n\n## 两个数组排列组合\n\n比如目前有两个数组：\n\na=[1,2,3]\n\nb=[3,4,5]\n\n那么数组排列的情况就有`3*3=9`种，代码：\n\n```js\nvar a=[1,2,3];\nvar b=[4,5,6];\nvar newArr=[];\nvar index=0; // 组合次数\nfor(var i=0;i<a.length;i++){\n\tfor(var j=0;j<b.length;j++){\n\t\tnewArr[index]=[a[i]].concat(b[j]);\n\t\tindex++;\n\t}\n}\nconsole.log (newArr);\nconsole.log(index)\n```\n\n输出结果：\n\n```\n[[1, 4], [1, 5], [1, 6], [2, 4], [2, 5], [2, 6], [3, 4], [3, 5], [3, 6]]\n\n9\n```\n\n\n\n## 多个数组排列组合\n\n### 方法一\n\n```js\nvar a=['a1', 'a2', null],\nvar b=['b1','b2', 'b3', 'b4', 'any', null],\nvar c=['c1', 'c2', 'c3', 'c4', 'any', null],\nvar d=['d1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', null];\n\nvar newArr=[];\nvar index=0;\nfor(var i=0;i<a.length;i++){\n    \n    // 两两组合ab\n\tfor(var j=0;j<b.length;j++){\n\t\tnewArr[index]=[a[i]].concat(b[j]);\n\t\tindex++;\n      // 三三组合abc\n        for(var k=0;k<c.length;k++){\n\t\t  newArr[index]=[a[i]].concat(b[j], c[k]);\n\t\t  index++;\n          // 四组合\n          for(var m=0;m<d.length;m++){\n            newArr[index]=[a[i]].concat(b[j],c[k],d[m]);\n            index++;\n          }\n\t    }\n      // 三三组合abd\n        for(var m=0;m<d.length;m++){\n\t\t  newArr[index]=[a[i]].concat(b[j], d[m]);\n\t\t  index++;\n\t    }\n\t}\n    for(var m=0;m<c.length;m++){\n      // 两两组合ac\n\t    newArr[index]=[a[i]].concat(c[m]);\n\t\tindex++;\n\t}\n    for(var n=0;n<d.length;n++){\n      // 两两组合ad\n\t    newArr[index]=[a[i]].concat(d[n]);\n\t\tindex++;\n      // 三三组合abd\n        for(var m=0;m<b.length;m++){\n\t\t  newArr[index]=[a[i]].concat(b[m], d[n]);\n\t\t  index++;\n\t    }\n\t}\n}\nfor(var x=0;x<b.length;x++) {\n  for(var y=0;y<c.length;y++) {\n    // 两两组合bc\n    newArr[index]=[b[x]].concat(c[y]);\n\tindex++;\n    // 三三组合bcd\n    for(var i=0;i<d.length;i++){\n      newArr[index]=[b[x]].concat(c[y], d[i]);\n      index++;\n    }\n  }\n  // 两两组合bd\n  for(var j=0;j<d.length;j++){\n    newArr[index]=[b[x]].concat(d[j]);\n    index++;\n  }\n}\nfor(var m=0;m<c.length;m++){\n  // 两两组合cd\n  for(var n=0;n<d.length;n++){\n    newArr[index]=[c[m]].concat(d[n]);\n    index++;\n  }\n}\nconsole.log (newArr);\nconsole.log(index);\n```\n\n\n\n### 方法二\n\n```js\nvar a=['a1', 'a2', null],\nvar b=['b1','b2', 'b3', 'b4', 'any', null],\nvar c=['c1', 'c2', 'c3', 'c4', 'any', null],\nvar d=['d1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', null];\n\nvar temp = [];\n\nvar addTemp = function(obj) {\n  var arr = [];\n  var i = 0;\n  Object.keys(obj).forEach(function(key, index) {\n     arr.push(obj[key]);\n     if(!obj[key]) {\n       i++;\n     }\n  });\n  if(arr.length !== i) {\n     temp.push(obj);\n  }\n};\n\nfor(var i = 0, len = a.length; i < len; i++) {\n  addTemp({a: a[i]});\n  for(var j = 0,len2 = b.length; j < len2; j++) {\n    addTemp({\n      a: a[i],\n      b: b[j]\n    });\n    for(var k = 0,len3 = c.length; k < len3; k++) {\n      addTemp({\n        a: a[i],\n        b: b[j],\n        c: c[k]\n      });\n      for(var f = 0,len4 = d.length; f < len4; f++) {\n        addTemp({\n          a: a[i],\n          b: b[j],\n          c: c[k],\n          d: d[f]\n        });\n      }\n    }\n  }\n}\nconsole.log(temp.length);\n```\n\n","slug":"JS数组之排列组合","published":1,"updated":"2018-08-17T07:35:36.756Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18guj0007oaqor8ukbunn","content":"<h2 id=\"两个数组排列组合\"><a href=\"#两个数组排列组合\" class=\"headerlink\" title=\"两个数组排列组合\"></a>两个数组排列组合</h2><p>比如目前有两个数组：</p>\n<p>a=[1,2,3]</p>\n<p>b=[3,4,5]</p>\n<p>那么数组排列的情况就有<code>3*3=9</code>种，代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> b=[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> newArr=[];</span><br><span class=\"line\"><span class=\"keyword\">var</span> index=<span class=\"number\">0</span>; <span class=\"comment\">// 组合次数</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;a.length;i++)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;b.length;j++)&#123;</span><br><span class=\"line\">\t\tnewArr[index]=[a[i]].concat(b[j]);</span><br><span class=\"line\">\t\tindex++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log (newArr);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(index)</span><br></pre></td></tr></table></figure>\n<p>输出结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[1, 4], [1, 5], [1, 6], [2, 4], [2, 5], [2, 6], [3, 4], [3, 5], [3, 6]]</span><br><span class=\"line\"></span><br><span class=\"line\">9</span><br></pre></td></tr></table></figure>\n<h2 id=\"多个数组排列组合\"><a href=\"#多个数组排列组合\" class=\"headerlink\" title=\"多个数组排列组合\"></a>多个数组排列组合</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=[<span class=\"string\">'a1'</span>, <span class=\"string\">'a2'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> b=[<span class=\"string\">'b1'</span>,<span class=\"string\">'b2'</span>, <span class=\"string\">'b3'</span>, <span class=\"string\">'b4'</span>, <span class=\"string\">'any'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> c=[<span class=\"string\">'c1'</span>, <span class=\"string\">'c2'</span>, <span class=\"string\">'c3'</span>, <span class=\"string\">'c4'</span>, <span class=\"string\">'any'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> d=[<span class=\"string\">'d1'</span>, <span class=\"string\">'d2'</span>, <span class=\"string\">'d3'</span>, <span class=\"string\">'d4'</span>, <span class=\"string\">'d5'</span>, <span class=\"string\">'d6'</span>, <span class=\"string\">'d7'</span>, <span class=\"literal\">null</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> newArr=[];</span><br><span class=\"line\"><span class=\"keyword\">var</span> index=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;a.length;i++)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 两两组合ab</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;b.length;j++)&#123;</span><br><span class=\"line\">\t\tnewArr[index]=[a[i]].concat(b[j]);</span><br><span class=\"line\">\t\tindex++;</span><br><span class=\"line\">      <span class=\"comment\">// 三三组合abc</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k=<span class=\"number\">0</span>;k&lt;c.length;k++)&#123;</span><br><span class=\"line\">\t\t  newArr[index]=[a[i]].concat(b[j], c[k]);</span><br><span class=\"line\">\t\t  index++;</span><br><span class=\"line\">          <span class=\"comment\">// 四组合</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;d.length;m++)&#123;</span><br><span class=\"line\">            newArr[index]=[a[i]].concat(b[j],c[k],d[m]);</span><br><span class=\"line\">            index++;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 三三组合abd</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;d.length;m++)&#123;</span><br><span class=\"line\">\t\t  newArr[index]=[a[i]].concat(b[j], d[m]);</span><br><span class=\"line\">\t\t  index++;</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;c.length;m++)&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 两两组合ac</span></span><br><span class=\"line\">\t    newArr[index]=[a[i]].concat(c[m]);</span><br><span class=\"line\">\t\tindex++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> n=<span class=\"number\">0</span>;n&lt;d.length;n++)&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 两两组合ad</span></span><br><span class=\"line\">\t    newArr[index]=[a[i]].concat(d[n]);</span><br><span class=\"line\">\t\tindex++;</span><br><span class=\"line\">      <span class=\"comment\">// 三三组合abd</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;b.length;m++)&#123;</span><br><span class=\"line\">\t\t  newArr[index]=[a[i]].concat(b[m], d[n]);</span><br><span class=\"line\">\t\t  index++;</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> x=<span class=\"number\">0</span>;x&lt;b.length;x++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> y=<span class=\"number\">0</span>;y&lt;c.length;y++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 两两组合bc</span></span><br><span class=\"line\">    newArr[index]=[b[x]].concat(c[y]);</span><br><span class=\"line\">\tindex++;</span><br><span class=\"line\">    <span class=\"comment\">// 三三组合bcd</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;d.length;i++)&#123;</span><br><span class=\"line\">      newArr[index]=[b[x]].concat(c[y], d[i]);</span><br><span class=\"line\">      index++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 两两组合bd</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;d.length;j++)&#123;</span><br><span class=\"line\">    newArr[index]=[b[x]].concat(d[j]);</span><br><span class=\"line\">    index++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;c.length;m++)&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 两两组合cd</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> n=<span class=\"number\">0</span>;n&lt;d.length;n++)&#123;</span><br><span class=\"line\">    newArr[index]=[c[m]].concat(d[n]);</span><br><span class=\"line\">    index++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log (newArr);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(index);</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=[<span class=\"string\">'a1'</span>, <span class=\"string\">'a2'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> b=[<span class=\"string\">'b1'</span>,<span class=\"string\">'b2'</span>, <span class=\"string\">'b3'</span>, <span class=\"string\">'b4'</span>, <span class=\"string\">'any'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> c=[<span class=\"string\">'c1'</span>, <span class=\"string\">'c2'</span>, <span class=\"string\">'c3'</span>, <span class=\"string\">'c4'</span>, <span class=\"string\">'any'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> d=[<span class=\"string\">'d1'</span>, <span class=\"string\">'d2'</span>, <span class=\"string\">'d3'</span>, <span class=\"string\">'d4'</span>, <span class=\"string\">'d5'</span>, <span class=\"string\">'d6'</span>, <span class=\"string\">'d7'</span>, <span class=\"literal\">null</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> temp = [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> addTemp = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.keys(obj).forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">key, index</span>) </span>&#123;</span><br><span class=\"line\">     arr.push(obj[key]);</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(!obj[key]) &#123;</span><br><span class=\"line\">       i++;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(arr.length !== i) &#123;</span><br><span class=\"line\">     temp.push(obj);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = a.length; i &lt; len; i++) &#123;</span><br><span class=\"line\">  addTemp(&#123;<span class=\"attr\">a</span>: a[i]&#125;);</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>,len2 = b.length; j &lt; len2; j++) &#123;</span><br><span class=\"line\">    addTemp(&#123;</span><br><span class=\"line\">      a: a[i],</span><br><span class=\"line\">      b: b[j]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k = <span class=\"number\">0</span>,len3 = c.length; k &lt; len3; k++) &#123;</span><br><span class=\"line\">      addTemp(&#123;</span><br><span class=\"line\">        a: a[i],</span><br><span class=\"line\">        b: b[j],</span><br><span class=\"line\">        c: c[k]</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> f = <span class=\"number\">0</span>,len4 = d.length; f &lt; len4; f++) &#123;</span><br><span class=\"line\">        addTemp(&#123;</span><br><span class=\"line\">          a: a[i],</span><br><span class=\"line\">          b: b[j],</span><br><span class=\"line\">          c: c[k],</span><br><span class=\"line\">          d: d[f]</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(temp.length);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"两个数组排列组合\"><a href=\"#两个数组排列组合\" class=\"headerlink\" title=\"两个数组排列组合\"></a>两个数组排列组合</h2><p>比如目前有两个数组：</p>\n<p>a=[1,2,3]</p>\n<p>b=[3,4,5]</p>\n<p>那么数组排列的情况就有<code>3*3=9</code>种，代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> b=[<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> newArr=[];</span><br><span class=\"line\"><span class=\"keyword\">var</span> index=<span class=\"number\">0</span>; <span class=\"comment\">// 组合次数</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;a.length;i++)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;b.length;j++)&#123;</span><br><span class=\"line\">\t\tnewArr[index]=[a[i]].concat(b[j]);</span><br><span class=\"line\">\t\tindex++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log (newArr);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(index)</span><br></pre></td></tr></table></figure>\n<p>输出结果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[1, 4], [1, 5], [1, 6], [2, 4], [2, 5], [2, 6], [3, 4], [3, 5], [3, 6]]</span><br><span class=\"line\"></span><br><span class=\"line\">9</span><br></pre></td></tr></table></figure>\n<h2 id=\"多个数组排列组合\"><a href=\"#多个数组排列组合\" class=\"headerlink\" title=\"多个数组排列组合\"></a>多个数组排列组合</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=[<span class=\"string\">'a1'</span>, <span class=\"string\">'a2'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> b=[<span class=\"string\">'b1'</span>,<span class=\"string\">'b2'</span>, <span class=\"string\">'b3'</span>, <span class=\"string\">'b4'</span>, <span class=\"string\">'any'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> c=[<span class=\"string\">'c1'</span>, <span class=\"string\">'c2'</span>, <span class=\"string\">'c3'</span>, <span class=\"string\">'c4'</span>, <span class=\"string\">'any'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> d=[<span class=\"string\">'d1'</span>, <span class=\"string\">'d2'</span>, <span class=\"string\">'d3'</span>, <span class=\"string\">'d4'</span>, <span class=\"string\">'d5'</span>, <span class=\"string\">'d6'</span>, <span class=\"string\">'d7'</span>, <span class=\"literal\">null</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> newArr=[];</span><br><span class=\"line\"><span class=\"keyword\">var</span> index=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;a.length;i++)&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 两两组合ab</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;b.length;j++)&#123;</span><br><span class=\"line\">\t\tnewArr[index]=[a[i]].concat(b[j]);</span><br><span class=\"line\">\t\tindex++;</span><br><span class=\"line\">      <span class=\"comment\">// 三三组合abc</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k=<span class=\"number\">0</span>;k&lt;c.length;k++)&#123;</span><br><span class=\"line\">\t\t  newArr[index]=[a[i]].concat(b[j], c[k]);</span><br><span class=\"line\">\t\t  index++;</span><br><span class=\"line\">          <span class=\"comment\">// 四组合</span></span><br><span class=\"line\">          <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;d.length;m++)&#123;</span><br><span class=\"line\">            newArr[index]=[a[i]].concat(b[j],c[k],d[m]);</span><br><span class=\"line\">            index++;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 三三组合abd</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;d.length;m++)&#123;</span><br><span class=\"line\">\t\t  newArr[index]=[a[i]].concat(b[j], d[m]);</span><br><span class=\"line\">\t\t  index++;</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;c.length;m++)&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 两两组合ac</span></span><br><span class=\"line\">\t    newArr[index]=[a[i]].concat(c[m]);</span><br><span class=\"line\">\t\tindex++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> n=<span class=\"number\">0</span>;n&lt;d.length;n++)&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 两两组合ad</span></span><br><span class=\"line\">\t    newArr[index]=[a[i]].concat(d[n]);</span><br><span class=\"line\">\t\tindex++;</span><br><span class=\"line\">      <span class=\"comment\">// 三三组合abd</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;b.length;m++)&#123;</span><br><span class=\"line\">\t\t  newArr[index]=[a[i]].concat(b[m], d[n]);</span><br><span class=\"line\">\t\t  index++;</span><br><span class=\"line\">\t    &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> x=<span class=\"number\">0</span>;x&lt;b.length;x++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> y=<span class=\"number\">0</span>;y&lt;c.length;y++) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 两两组合bc</span></span><br><span class=\"line\">    newArr[index]=[b[x]].concat(c[y]);</span><br><span class=\"line\">\tindex++;</span><br><span class=\"line\">    <span class=\"comment\">// 三三组合bcd</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;d.length;i++)&#123;</span><br><span class=\"line\">      newArr[index]=[b[x]].concat(c[y], d[i]);</span><br><span class=\"line\">      index++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 两两组合bd</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j=<span class=\"number\">0</span>;j&lt;d.length;j++)&#123;</span><br><span class=\"line\">    newArr[index]=[b[x]].concat(d[j]);</span><br><span class=\"line\">    index++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> m=<span class=\"number\">0</span>;m&lt;c.length;m++)&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 两两组合cd</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> n=<span class=\"number\">0</span>;n&lt;d.length;n++)&#123;</span><br><span class=\"line\">    newArr[index]=[c[m]].concat(d[n]);</span><br><span class=\"line\">    index++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log (newArr);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(index);</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a=[<span class=\"string\">'a1'</span>, <span class=\"string\">'a2'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> b=[<span class=\"string\">'b1'</span>,<span class=\"string\">'b2'</span>, <span class=\"string\">'b3'</span>, <span class=\"string\">'b4'</span>, <span class=\"string\">'any'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> c=[<span class=\"string\">'c1'</span>, <span class=\"string\">'c2'</span>, <span class=\"string\">'c3'</span>, <span class=\"string\">'c4'</span>, <span class=\"string\">'any'</span>, <span class=\"literal\">null</span>],</span><br><span class=\"line\"><span class=\"keyword\">var</span> d=[<span class=\"string\">'d1'</span>, <span class=\"string\">'d2'</span>, <span class=\"string\">'d3'</span>, <span class=\"string\">'d4'</span>, <span class=\"string\">'d5'</span>, <span class=\"string\">'d6'</span>, <span class=\"string\">'d7'</span>, <span class=\"literal\">null</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> temp = [];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> addTemp = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> arr = [];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.keys(obj).forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">key, index</span>) </span>&#123;</span><br><span class=\"line\">     arr.push(obj[key]);</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(!obj[key]) &#123;</span><br><span class=\"line\">       i++;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(arr.length !== i) &#123;</span><br><span class=\"line\">     temp.push(obj);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = a.length; i &lt; len; i++) &#123;</span><br><span class=\"line\">  addTemp(&#123;<span class=\"attr\">a</span>: a[i]&#125;);</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j = <span class=\"number\">0</span>,len2 = b.length; j &lt; len2; j++) &#123;</span><br><span class=\"line\">    addTemp(&#123;</span><br><span class=\"line\">      a: a[i],</span><br><span class=\"line\">      b: b[j]</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> k = <span class=\"number\">0</span>,len3 = c.length; k &lt; len3; k++) &#123;</span><br><span class=\"line\">      addTemp(&#123;</span><br><span class=\"line\">        a: a[i],</span><br><span class=\"line\">        b: b[j],</span><br><span class=\"line\">        c: c[k]</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> f = <span class=\"number\">0</span>,len4 = d.length; f &lt; len4; f++) &#123;</span><br><span class=\"line\">        addTemp(&#123;</span><br><span class=\"line\">          a: a[i],</span><br><span class=\"line\">          b: b[j],</span><br><span class=\"line\">          c: c[k],</span><br><span class=\"line\">          d: d[f]</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(temp.length);</span><br></pre></td></tr></table></figure>\n"},{"title":"征服梧桐山","date":"2017-12-04T08:29:11.000Z","_content":"\n![PNG](http://p1cjg886l.bkt.clouddn.com/wutong1.jpg)\n\n# 出发\n\n7点多起床8点出门然后在老街集合，一起去吃了早餐，吃完去找了很久的公交站在差点找到的时候决定打车去，老街过去也不算远，这次去的是正门，没拍照人太多所以就不PO照了。如果想去后门的话可以从黄贝岭站坐公交去，比较近。大概十一点左右大部队全部集合完毕准备上山。\n\n> 路线1：老街出发坐公交车（这次去没有坐公交，目测2-5块）/打车60左右--正门\n>\n> 路线2：黄贝岭出发坐公交/打车--后门\n\n\n\n# 上山\n\n从泰山涧走山路上的山，没有选择走大路，山路比较难走但是风景也比较好看，一路上都有小溪，走到最高处的时候如果水多还可以看到瀑布。从泰山涧一直爬，爬到山顶跟大路交汇的地方然后顺着大路走到好汉坡就可以看到上大梧桐的山路了。大梧桐海拔最高，有900多米，所以一致决定征服最高峰。在下午四点钟左右登顶，欣赏一下美景。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/wutong2.jpg)\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/wutong3.jpg)\n\n>- 尽量穿运动鞋，和舒适的衣服。这样没有这么累，看到一个小哥穿人字拖爬山我也是被惊到了。\n>- 能戴帽子最好，可以遮阳挡风。不然这么多护肤品白瞎了。\n>- 最好背双肩包，我背的挎包爬到抖的地方老是跑到前面来挡住视线，很影响发挥。\n>- 上山大概3-4个钟，走的快的话2个可能就OK了。\n\n\n\n# 下山\n\n四点钟左右登顶然后休息，四点多五点开始下山，七点左右才走到山脚下。真的肠子都悔青了好吗！！！快走到山脚才想起来走后门更近，简直想哭死在路上。下山真的很可怕好吗，天又黑又没指示牌，一直走一直走不知道什么时候才能到山脚，要不是我凭着一股意志力真的要瘫在路上回不来了。\n\n> - 登山棍还是很有必要的，特别是下山的时候！\n> - 零食适量就好，我们带了好多后面又是背回来了。\n> - 早点上山！早点上山！早点上山！重要的事情说三遍，我们快中午了才开始爬以至于下山的时候都7点天黑了，而且梧桐山没有路灯，死不死。\n> - 量力而行！量力而行！量力而行！重要的事情说三遍！就是死要登顶下山的时候腿痛得不行抖得不行，现在废了一样。\n> - 少喝水，梧桐山厕所巨少！巨少！巨少！\n\n\n\n# 总结\n\n近期不想做几件事：爬山、吃周黑鸭、吃烧烤（我有预感我要打脸，不过还是要立flag）","source":"_posts/Ng-Tung-Shan.md","raw":"---\ntitle: 征服梧桐山\ndate: 2017-12-04 16:29:11\ntags: [登山, 梧桐山, 深圳最高山]\ncategories: 玩\n---\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/wutong1.jpg)\n\n# 出发\n\n7点多起床8点出门然后在老街集合，一起去吃了早餐，吃完去找了很久的公交站在差点找到的时候决定打车去，老街过去也不算远，这次去的是正门，没拍照人太多所以就不PO照了。如果想去后门的话可以从黄贝岭站坐公交去，比较近。大概十一点左右大部队全部集合完毕准备上山。\n\n> 路线1：老街出发坐公交车（这次去没有坐公交，目测2-5块）/打车60左右--正门\n>\n> 路线2：黄贝岭出发坐公交/打车--后门\n\n\n\n# 上山\n\n从泰山涧走山路上的山，没有选择走大路，山路比较难走但是风景也比较好看，一路上都有小溪，走到最高处的时候如果水多还可以看到瀑布。从泰山涧一直爬，爬到山顶跟大路交汇的地方然后顺着大路走到好汉坡就可以看到上大梧桐的山路了。大梧桐海拔最高，有900多米，所以一致决定征服最高峰。在下午四点钟左右登顶，欣赏一下美景。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/wutong2.jpg)\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/wutong3.jpg)\n\n>- 尽量穿运动鞋，和舒适的衣服。这样没有这么累，看到一个小哥穿人字拖爬山我也是被惊到了。\n>- 能戴帽子最好，可以遮阳挡风。不然这么多护肤品白瞎了。\n>- 最好背双肩包，我背的挎包爬到抖的地方老是跑到前面来挡住视线，很影响发挥。\n>- 上山大概3-4个钟，走的快的话2个可能就OK了。\n\n\n\n# 下山\n\n四点钟左右登顶然后休息，四点多五点开始下山，七点左右才走到山脚下。真的肠子都悔青了好吗！！！快走到山脚才想起来走后门更近，简直想哭死在路上。下山真的很可怕好吗，天又黑又没指示牌，一直走一直走不知道什么时候才能到山脚，要不是我凭着一股意志力真的要瘫在路上回不来了。\n\n> - 登山棍还是很有必要的，特别是下山的时候！\n> - 零食适量就好，我们带了好多后面又是背回来了。\n> - 早点上山！早点上山！早点上山！重要的事情说三遍，我们快中午了才开始爬以至于下山的时候都7点天黑了，而且梧桐山没有路灯，死不死。\n> - 量力而行！量力而行！量力而行！重要的事情说三遍！就是死要登顶下山的时候腿痛得不行抖得不行，现在废了一样。\n> - 少喝水，梧桐山厕所巨少！巨少！巨少！\n\n\n\n# 总结\n\n近期不想做几件事：爬山、吃周黑鸭、吃烧烤（我有预感我要打脸，不过还是要立flag）","slug":"Ng-Tung-Shan","published":1,"updated":"2018-08-17T07:35:36.756Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gul0008oaqo14nam75l","content":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/wutong1.jpg\" alt=\"PNG\"></p>\n<h1 id=\"出发\"><a href=\"#出发\" class=\"headerlink\" title=\"出发\"></a>出发</h1><p>7点多起床8点出门然后在老街集合，一起去吃了早餐，吃完去找了很久的公交站在差点找到的时候决定打车去，老街过去也不算远，这次去的是正门，没拍照人太多所以就不PO照了。如果想去后门的话可以从黄贝岭站坐公交去，比较近。大概十一点左右大部队全部集合完毕准备上山。</p>\n<blockquote>\n<p>路线1：老街出发坐公交车（这次去没有坐公交，目测2-5块）/打车60左右–正门</p>\n<p>路线2：黄贝岭出发坐公交/打车–后门</p>\n</blockquote>\n<h1 id=\"上山\"><a href=\"#上山\" class=\"headerlink\" title=\"上山\"></a>上山</h1><p>从泰山涧走山路上的山，没有选择走大路，山路比较难走但是风景也比较好看，一路上都有小溪，走到最高处的时候如果水多还可以看到瀑布。从泰山涧一直爬，爬到山顶跟大路交汇的地方然后顺着大路走到好汉坡就可以看到上大梧桐的山路了。大梧桐海拔最高，有900多米，所以一致决定征服最高峰。在下午四点钟左右登顶，欣赏一下美景。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/wutong2.jpg\" alt=\"PNG\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/wutong3.jpg\" alt=\"PNG\"></p>\n<blockquote>\n<ul>\n<li>尽量穿运动鞋，和舒适的衣服。这样没有这么累，看到一个小哥穿人字拖爬山我也是被惊到了。</li>\n<li>能戴帽子最好，可以遮阳挡风。不然这么多护肤品白瞎了。</li>\n<li>最好背双肩包，我背的挎包爬到抖的地方老是跑到前面来挡住视线，很影响发挥。</li>\n<li>上山大概3-4个钟，走的快的话2个可能就OK了。</li>\n</ul>\n</blockquote>\n<h1 id=\"下山\"><a href=\"#下山\" class=\"headerlink\" title=\"下山\"></a>下山</h1><p>四点钟左右登顶然后休息，四点多五点开始下山，七点左右才走到山脚下。真的肠子都悔青了好吗！！！快走到山脚才想起来走后门更近，简直想哭死在路上。下山真的很可怕好吗，天又黑又没指示牌，一直走一直走不知道什么时候才能到山脚，要不是我凭着一股意志力真的要瘫在路上回不来了。</p>\n<blockquote>\n<ul>\n<li>登山棍还是很有必要的，特别是下山的时候！</li>\n<li>零食适量就好，我们带了好多后面又是背回来了。</li>\n<li>早点上山！早点上山！早点上山！重要的事情说三遍，我们快中午了才开始爬以至于下山的时候都7点天黑了，而且梧桐山没有路灯，死不死。</li>\n<li>量力而行！量力而行！量力而行！重要的事情说三遍！就是死要登顶下山的时候腿痛得不行抖得不行，现在废了一样。</li>\n<li>少喝水，梧桐山厕所巨少！巨少！巨少！</li>\n</ul>\n</blockquote>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>近期不想做几件事：爬山、吃周黑鸭、吃烧烤（我有预感我要打脸，不过还是要立flag）</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/wutong1.jpg\" alt=\"PNG\"></p>\n<h1 id=\"出发\"><a href=\"#出发\" class=\"headerlink\" title=\"出发\"></a>出发</h1><p>7点多起床8点出门然后在老街集合，一起去吃了早餐，吃完去找了很久的公交站在差点找到的时候决定打车去，老街过去也不算远，这次去的是正门，没拍照人太多所以就不PO照了。如果想去后门的话可以从黄贝岭站坐公交去，比较近。大概十一点左右大部队全部集合完毕准备上山。</p>\n<blockquote>\n<p>路线1：老街出发坐公交车（这次去没有坐公交，目测2-5块）/打车60左右–正门</p>\n<p>路线2：黄贝岭出发坐公交/打车–后门</p>\n</blockquote>\n<h1 id=\"上山\"><a href=\"#上山\" class=\"headerlink\" title=\"上山\"></a>上山</h1><p>从泰山涧走山路上的山，没有选择走大路，山路比较难走但是风景也比较好看，一路上都有小溪，走到最高处的时候如果水多还可以看到瀑布。从泰山涧一直爬，爬到山顶跟大路交汇的地方然后顺着大路走到好汉坡就可以看到上大梧桐的山路了。大梧桐海拔最高，有900多米，所以一致决定征服最高峰。在下午四点钟左右登顶，欣赏一下美景。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/wutong2.jpg\" alt=\"PNG\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/wutong3.jpg\" alt=\"PNG\"></p>\n<blockquote>\n<ul>\n<li>尽量穿运动鞋，和舒适的衣服。这样没有这么累，看到一个小哥穿人字拖爬山我也是被惊到了。</li>\n<li>能戴帽子最好，可以遮阳挡风。不然这么多护肤品白瞎了。</li>\n<li>最好背双肩包，我背的挎包爬到抖的地方老是跑到前面来挡住视线，很影响发挥。</li>\n<li>上山大概3-4个钟，走的快的话2个可能就OK了。</li>\n</ul>\n</blockquote>\n<h1 id=\"下山\"><a href=\"#下山\" class=\"headerlink\" title=\"下山\"></a>下山</h1><p>四点钟左右登顶然后休息，四点多五点开始下山，七点左右才走到山脚下。真的肠子都悔青了好吗！！！快走到山脚才想起来走后门更近，简直想哭死在路上。下山真的很可怕好吗，天又黑又没指示牌，一直走一直走不知道什么时候才能到山脚，要不是我凭着一股意志力真的要瘫在路上回不来了。</p>\n<blockquote>\n<ul>\n<li>登山棍还是很有必要的，特别是下山的时候！</li>\n<li>零食适量就好，我们带了好多后面又是背回来了。</li>\n<li>早点上山！早点上山！早点上山！重要的事情说三遍，我们快中午了才开始爬以至于下山的时候都7点天黑了，而且梧桐山没有路灯，死不死。</li>\n<li>量力而行！量力而行！量力而行！重要的事情说三遍！就是死要登顶下山的时候腿痛得不行抖得不行，现在废了一样。</li>\n<li>少喝水，梧桐山厕所巨少！巨少！巨少！</li>\n</ul>\n</blockquote>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>近期不想做几件事：爬山、吃周黑鸭、吃烧烤（我有预感我要打脸，不过还是要立flag）</p>\n"},{"title":"检查回文数","date":"2018-08-21T02:15:55.000Z","_content":"\n#### 什么是回文\n\n回文数是指一个对称的数，即：将这个数的数字按相反的顺序重新排列后，所得到的书和原来的数一样。\n\n\n\n```js\nfunction isPalindrome(str){\n  var i, len = str.length;\n  for(i =0; i<len/2; i++){\n    if (str[i]!== str[len -1 -i])\n       return false;\n  }\n  return true;\n}\nisPalindrome('madam') // => true\nisPalindrome('toyota') // => false\n```\n\n","source":"_posts/Palindrome.md","raw":"---\ntitle: 检查回文数\ndate: 2018-08-21 10:15:55\ntags: [Palindrome, 回文]\ncategories: JS\n---\n\n#### 什么是回文\n\n回文数是指一个对称的数，即：将这个数的数字按相反的顺序重新排列后，所得到的书和原来的数一样。\n\n\n\n```js\nfunction isPalindrome(str){\n  var i, len = str.length;\n  for(i =0; i<len/2; i++){\n    if (str[i]!== str[len -1 -i])\n       return false;\n  }\n  return true;\n}\nisPalindrome('madam') // => true\nisPalindrome('toyota') // => false\n```\n\n","slug":"Palindrome","published":1,"updated":"2018-08-21T02:17:20.028Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gul0009oaqou5xvrlp0","content":"<h4 id=\"什么是回文\"><a href=\"#什么是回文\" class=\"headerlink\" title=\"什么是回文\"></a>什么是回文</h4><p>回文数是指一个对称的数，即：将这个数的数字按相反的顺序重新排列后，所得到的书和原来的数一样。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPalindrome</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> i, len = str.length;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(i =<span class=\"number\">0</span>; i&lt;len/<span class=\"number\">2</span>; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str[i]!== str[len <span class=\"number\">-1</span> -i])</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">isPalindrome(<span class=\"string\">'madam'</span>) <span class=\"comment\">// =&gt; true</span></span><br><span class=\"line\">isPalindrome(<span class=\"string\">'toyota'</span>) <span class=\"comment\">// =&gt; false</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"什么是回文\"><a href=\"#什么是回文\" class=\"headerlink\" title=\"什么是回文\"></a>什么是回文</h4><p>回文数是指一个对称的数，即：将这个数的数字按相反的顺序重新排列后，所得到的书和原来的数一样。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPalindrome</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> i, len = str.length;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(i =<span class=\"number\">0</span>; i&lt;len/<span class=\"number\">2</span>; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str[i]!== str[len <span class=\"number\">-1</span> -i])</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">isPalindrome(<span class=\"string\">'madam'</span>) <span class=\"comment\">// =&gt; true</span></span><br><span class=\"line\">isPalindrome(<span class=\"string\">'toyota'</span>) <span class=\"comment\">// =&gt; false</span></span><br></pre></td></tr></table></figure>\n"},{"title":"VSCode插件配置","date":"2018-06-28T10:48:35.000Z","_content":"\n## 常用插件\n\n- Beautify - 通过配置.jsbeautifyrc文件可以格式化javascript、json、css、sass和html文件\n- Code Runner - 支持运行多种语言的代码片段或代码文件（比如C++、java等）\n- ESLint - 代码检查\n- HTML CSS Support - 对HTML文档的CSS支持\n- HTML Snippets - H5代码片段及提示\n- Vue 2 Snippets - Vue2代码片段及提示\n- Auto Close Tag - 匹配标签，关闭对应标签\n- Auto Rename Tag  - 当修改HTML/XML标签时，会自动修改 与之对应的开始/结束标签\n- Settings Sync - VSCode设置同步到Gist\n- Document This - 生成JS注释模板\n- vscode-icon - 让VSCode资源树目录加上图标\n- Path Intellisense - 路径智能提示\n- Vetur - 语法高亮、智能感知、Emmet等\n- VueHelper - Vue代码智能提示（包括Vue、Vue-router、Vuex）\n\n## VSCode设置如何同步到Gist\n\n- 安装Settings Sync扩展\n\n- 打开自己的Github->Settings->Developer settings->Personal access tokens->Generate new token\n\n  填写Token描述\n\n  ![](http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-10-52%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n  在选择范围中选择`gist`\n\n  ![](http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-00%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n  创建`Token`\n\n  ![](http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-19%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n  获取`Token`（注意保存！！）\n\n  ![](http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-50%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n- 第一次上传设置\n\n按下组合键`Shift+Alt+U`，自动打开Github设置页面，允许你为应用程序生成一个新的令牌，然后回到VSCode在窗口中输入刚才获取的`Token`，最后单击`Enter`\n\n这样就自动上传了VSCode的设置，并且扩展程序会在系统消息中提供Gist ID。需要Gist ID才能访问你使用Token上传的数据\n\n![](http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-36-44%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n> GitHub Token: 519f1565671630977425bd204984b1d4b32b145b\n> GitHub Gist: 99f2b0be96b188e3bdd459fc4a9b5d28\n\n\n\n- 上传设置\n\n经过第一次上传设置操作之后，可以按下组合键`Shift+Alt+U`直接上传，无需再次输入`Token`\n\n- 下载设置\n\n按下组合键`Shift+Alt+D`它会询问你的`Github Gist ID`，然后按要求输入`Token`然后单击`Enter`，输入`Gist ID`，这样就下载好设置了。\n\n\n\n## 最后\n\n妈妈再也不用担心我换电脑/系统VSCode配置不见啦，也不需要再重新设置配置啦，一键搞定配置，省心！\n\nSettings Sync官网操作链接[戳这里](https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync)","source":"_posts/VSCode插件配置.md","raw":"---\ntitle: VSCode插件配置\ndate: 2018-06-28 18:48:35\ntags: [VSCode, Gist]\ncategories: git\n---\n\n## 常用插件\n\n- Beautify - 通过配置.jsbeautifyrc文件可以格式化javascript、json、css、sass和html文件\n- Code Runner - 支持运行多种语言的代码片段或代码文件（比如C++、java等）\n- ESLint - 代码检查\n- HTML CSS Support - 对HTML文档的CSS支持\n- HTML Snippets - H5代码片段及提示\n- Vue 2 Snippets - Vue2代码片段及提示\n- Auto Close Tag - 匹配标签，关闭对应标签\n- Auto Rename Tag  - 当修改HTML/XML标签时，会自动修改 与之对应的开始/结束标签\n- Settings Sync - VSCode设置同步到Gist\n- Document This - 生成JS注释模板\n- vscode-icon - 让VSCode资源树目录加上图标\n- Path Intellisense - 路径智能提示\n- Vetur - 语法高亮、智能感知、Emmet等\n- VueHelper - Vue代码智能提示（包括Vue、Vue-router、Vuex）\n\n## VSCode设置如何同步到Gist\n\n- 安装Settings Sync扩展\n\n- 打开自己的Github->Settings->Developer settings->Personal access tokens->Generate new token\n\n  填写Token描述\n\n  ![](http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-10-52%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n  在选择范围中选择`gist`\n\n  ![](http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-00%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n  创建`Token`\n\n  ![](http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-19%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n  获取`Token`（注意保存！！）\n\n  ![](http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-50%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n- 第一次上传设置\n\n按下组合键`Shift+Alt+U`，自动打开Github设置页面，允许你为应用程序生成一个新的令牌，然后回到VSCode在窗口中输入刚才获取的`Token`，最后单击`Enter`\n\n这样就自动上传了VSCode的设置，并且扩展程序会在系统消息中提供Gist ID。需要Gist ID才能访问你使用Token上传的数据\n\n![](http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-36-44%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n> GitHub Token: 519f1565671630977425bd204984b1d4b32b145b\n> GitHub Gist: 99f2b0be96b188e3bdd459fc4a9b5d28\n\n\n\n- 上传设置\n\n经过第一次上传设置操作之后，可以按下组合键`Shift+Alt+U`直接上传，无需再次输入`Token`\n\n- 下载设置\n\n按下组合键`Shift+Alt+D`它会询问你的`Github Gist ID`，然后按要求输入`Token`然后单击`Enter`，输入`Gist ID`，这样就下载好设置了。\n\n\n\n## 最后\n\n妈妈再也不用担心我换电脑/系统VSCode配置不见啦，也不需要再重新设置配置啦，一键搞定配置，省心！\n\nSettings Sync官网操作链接[戳这里](https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync)","slug":"VSCode插件配置","published":1,"updated":"2018-08-17T07:35:36.756Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gun000coaqooqy2t8wa","content":"<h2 id=\"常用插件\"><a href=\"#常用插件\" class=\"headerlink\" title=\"常用插件\"></a>常用插件</h2><ul>\n<li>Beautify - 通过配置.jsbeautifyrc文件可以格式化javascript、json、css、sass和html文件</li>\n<li>Code Runner - 支持运行多种语言的代码片段或代码文件（比如C++、java等）</li>\n<li>ESLint - 代码检查</li>\n<li>HTML CSS Support - 对HTML文档的CSS支持</li>\n<li>HTML Snippets - H5代码片段及提示</li>\n<li>Vue 2 Snippets - Vue2代码片段及提示</li>\n<li>Auto Close Tag - 匹配标签，关闭对应标签</li>\n<li>Auto Rename Tag  - 当修改HTML/XML标签时，会自动修改 与之对应的开始/结束标签</li>\n<li>Settings Sync - VSCode设置同步到Gist</li>\n<li>Document This - 生成JS注释模板</li>\n<li>vscode-icon - 让VSCode资源树目录加上图标</li>\n<li>Path Intellisense - 路径智能提示</li>\n<li>Vetur - 语法高亮、智能感知、Emmet等</li>\n<li>VueHelper - Vue代码智能提示（包括Vue、Vue-router、Vuex）</li>\n</ul>\n<h2 id=\"VSCode设置如何同步到Gist\"><a href=\"#VSCode设置如何同步到Gist\" class=\"headerlink\" title=\"VSCode设置如何同步到Gist\"></a>VSCode设置如何同步到Gist</h2><ul>\n<li><p>安装Settings Sync扩展</p>\n</li>\n<li><p>打开自己的Github-&gt;Settings-&gt;Developer settings-&gt;Personal access tokens-&gt;Generate new token</p>\n<p>填写Token描述</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-10-52%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<p>在选择范围中选择<code>gist</code></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-00%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<p>创建<code>Token</code></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-19%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<p>获取<code>Token</code>（注意保存！！）</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-50%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n</li>\n<li><p>第一次上传设置</p>\n</li>\n</ul>\n<p>按下组合键<code>Shift+Alt+U</code>，自动打开Github设置页面，允许你为应用程序生成一个新的令牌，然后回到VSCode在窗口中输入刚才获取的<code>Token</code>，最后单击<code>Enter</code></p>\n<p>这样就自动上传了VSCode的设置，并且扩展程序会在系统消息中提供Gist ID。需要Gist ID才能访问你使用Token上传的数据</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-36-44%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<blockquote>\n<p>GitHub Token: 519f1565671630977425bd204984b1d4b32b145b<br>GitHub Gist: 99f2b0be96b188e3bdd459fc4a9b5d28</p>\n</blockquote>\n<ul>\n<li>上传设置</li>\n</ul>\n<p>经过第一次上传设置操作之后，可以按下组合键<code>Shift+Alt+U</code>直接上传，无需再次输入<code>Token</code></p>\n<ul>\n<li>下载设置</li>\n</ul>\n<p>按下组合键<code>Shift+Alt+D</code>它会询问你的<code>Github Gist ID</code>，然后按要求输入<code>Token</code>然后单击<code>Enter</code>，输入<code>Gist ID</code>，这样就下载好设置了。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>妈妈再也不用担心我换电脑/系统VSCode配置不见啦，也不需要再重新设置配置啦，一键搞定配置，省心！</p>\n<p>Settings Sync官网操作链接<a href=\"https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync\" target=\"_blank\" rel=\"noopener\">戳这里</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"常用插件\"><a href=\"#常用插件\" class=\"headerlink\" title=\"常用插件\"></a>常用插件</h2><ul>\n<li>Beautify - 通过配置.jsbeautifyrc文件可以格式化javascript、json、css、sass和html文件</li>\n<li>Code Runner - 支持运行多种语言的代码片段或代码文件（比如C++、java等）</li>\n<li>ESLint - 代码检查</li>\n<li>HTML CSS Support - 对HTML文档的CSS支持</li>\n<li>HTML Snippets - H5代码片段及提示</li>\n<li>Vue 2 Snippets - Vue2代码片段及提示</li>\n<li>Auto Close Tag - 匹配标签，关闭对应标签</li>\n<li>Auto Rename Tag  - 当修改HTML/XML标签时，会自动修改 与之对应的开始/结束标签</li>\n<li>Settings Sync - VSCode设置同步到Gist</li>\n<li>Document This - 生成JS注释模板</li>\n<li>vscode-icon - 让VSCode资源树目录加上图标</li>\n<li>Path Intellisense - 路径智能提示</li>\n<li>Vetur - 语法高亮、智能感知、Emmet等</li>\n<li>VueHelper - Vue代码智能提示（包括Vue、Vue-router、Vuex）</li>\n</ul>\n<h2 id=\"VSCode设置如何同步到Gist\"><a href=\"#VSCode设置如何同步到Gist\" class=\"headerlink\" title=\"VSCode设置如何同步到Gist\"></a>VSCode设置如何同步到Gist</h2><ul>\n<li><p>安装Settings Sync扩展</p>\n</li>\n<li><p>打开自己的Github-&gt;Settings-&gt;Developer settings-&gt;Personal access tokens-&gt;Generate new token</p>\n<p>填写Token描述</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-10-52%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<p>在选择范围中选择<code>gist</code></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-00%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<p>创建<code>Token</code></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-19%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<p>获取<code>Token</code>（注意保存！！）</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-11-50%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n</li>\n<li><p>第一次上传设置</p>\n</li>\n</ul>\n<p>按下组合键<code>Shift+Alt+U</code>，自动打开Github设置页面，允许你为应用程序生成一个新的令牌，然后回到VSCode在窗口中输入刚才获取的<code>Token</code>，最后单击<code>Enter</code></p>\n<p>这样就自动上传了VSCode的设置，并且扩展程序会在系统消息中提供Gist ID。需要Gist ID才能访问你使用Token上传的数据</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-06-12%2016-36-44%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<blockquote>\n<p>GitHub Token: 519f1565671630977425bd204984b1d4b32b145b<br>GitHub Gist: 99f2b0be96b188e3bdd459fc4a9b5d28</p>\n</blockquote>\n<ul>\n<li>上传设置</li>\n</ul>\n<p>经过第一次上传设置操作之后，可以按下组合键<code>Shift+Alt+U</code>直接上传，无需再次输入<code>Token</code></p>\n<ul>\n<li>下载设置</li>\n</ul>\n<p>按下组合键<code>Shift+Alt+D</code>它会询问你的<code>Github Gist ID</code>，然后按要求输入<code>Token</code>然后单击<code>Enter</code>，输入<code>Gist ID</code>，这样就下载好设置了。</p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>妈妈再也不用担心我换电脑/系统VSCode配置不见啦，也不需要再重新设置配置啦，一键搞定配置，省心！</p>\n<p>Settings Sync官网操作链接<a href=\"https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync\" target=\"_blank\" rel=\"noopener\">戳这里</a></p>\n"},{"title":"Ubuntu下安装Typora","date":"2017-11-30T01:42:22.000Z","_content":"\n## ![Typora](https://eveywongblog.files.wordpress.com/2017/10/typora.png)\n\n# 简介\n\n## Markdown\n\n[Markdown](http://zh.wikipedia.org/wiki/Markdown) 是一种轻量级的「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 *Word* 或 *Pages* 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了，减少了鼠标的点击。目前来看，支持 Markdown 语法的编辑器有很多，但他们的交互形式基本都是将「[编辑](http://www.iplaysoft.com/tag/%E7%BC%96%E8%BE%91)」和「预览」分离开来的，要么是直接左右排列编辑和预览窗口，要么是要在两种模式之间来回切换，以前刚接触的时候常常被搞晕。后面电脑换了Linux系统以后觉得编辑文件没有这么方便于是就想下个编辑器来用，找了很久觉得Typora这个编辑器很简洁大方深得小仙女的心于是立马下载来用。\n\n## Typora\n\nTypora(<https://typora.io/>)不同于以往的markdown编辑器在于它只使用一个窗口，却能优雅地实现同时将代码编辑与预览「一体化」结合起来，从而为用户带来更加流畅直观的「所见即所得的 Markdown 写作体验」。Typora 即时显示 Markdown 语法格式的能力被官方称之为 WYSIWYG （What You See Is What You Get）。虽然一开始用觉得有点麻烦甚至想弃坑，但是用久了习惯了就会发现很好用很方便。正式开始用Typora还是在接触gitbook以后，想要写文章才想起来原来我有个markdown编辑器，于是就开造啦~\n\n![Typora-GIF.gif](https://eveywongblog.files.wordpress.com/2017/10/typora-gif.gif)\n\n\n\n# 安装\n\n## 在Ubuntu下安装Typora\n\n按照下列命令依次输入即可成功安装Typora，很幸运没有出现BUG最讨厌的就是BUG了。\n\n安装成功以后找到Typora图标双击打开就可以用了，当然如果你很熟悉命令行模式那你也可以在命令行进行启动。\n\n```\n$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE\n$ sudo add-apt-repository 'deb https://typora.io linux/'\n$ sudo apt-get update\n$ sudo apt-get install typora\n```\n\n# 用法\n\nmarkdown啦当然用的markdown格式写咯","source":"_posts/Typora.md","raw":"---\ntitle: Ubuntu下安装Typora\ndate: 2017-11-30 09:42:22\ntags: [Typora, ubuntu]\ncategories: Ubuntu\n---\n\n## ![Typora](https://eveywongblog.files.wordpress.com/2017/10/typora.png)\n\n# 简介\n\n## Markdown\n\n[Markdown](http://zh.wikipedia.org/wiki/Markdown) 是一种轻量级的「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 *Word* 或 *Pages* 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了，减少了鼠标的点击。目前来看，支持 Markdown 语法的编辑器有很多，但他们的交互形式基本都是将「[编辑](http://www.iplaysoft.com/tag/%E7%BC%96%E8%BE%91)」和「预览」分离开来的，要么是直接左右排列编辑和预览窗口，要么是要在两种模式之间来回切换，以前刚接触的时候常常被搞晕。后面电脑换了Linux系统以后觉得编辑文件没有这么方便于是就想下个编辑器来用，找了很久觉得Typora这个编辑器很简洁大方深得小仙女的心于是立马下载来用。\n\n## Typora\n\nTypora(<https://typora.io/>)不同于以往的markdown编辑器在于它只使用一个窗口，却能优雅地实现同时将代码编辑与预览「一体化」结合起来，从而为用户带来更加流畅直观的「所见即所得的 Markdown 写作体验」。Typora 即时显示 Markdown 语法格式的能力被官方称之为 WYSIWYG （What You See Is What You Get）。虽然一开始用觉得有点麻烦甚至想弃坑，但是用久了习惯了就会发现很好用很方便。正式开始用Typora还是在接触gitbook以后，想要写文章才想起来原来我有个markdown编辑器，于是就开造啦~\n\n![Typora-GIF.gif](https://eveywongblog.files.wordpress.com/2017/10/typora-gif.gif)\n\n\n\n# 安装\n\n## 在Ubuntu下安装Typora\n\n按照下列命令依次输入即可成功安装Typora，很幸运没有出现BUG最讨厌的就是BUG了。\n\n安装成功以后找到Typora图标双击打开就可以用了，当然如果你很熟悉命令行模式那你也可以在命令行进行启动。\n\n```\n$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE\n$ sudo add-apt-repository 'deb https://typora.io linux/'\n$ sudo apt-get update\n$ sudo apt-get install typora\n```\n\n# 用法\n\nmarkdown啦当然用的markdown格式写咯","slug":"Typora","published":1,"updated":"2018-08-17T07:35:36.756Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18guo000doaqozxgr0lbe","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"https://eveywongblog.files.wordpress.com/2017/10/typora.png\" alt=\"Typora\"></h2><h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><h2 id=\"Markdown\"><a href=\"#Markdown\" class=\"headerlink\" title=\"Markdown\"></a>Markdown</h2><p><a href=\"http://zh.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"noopener\">Markdown</a> 是一种轻量级的「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 <em>Word</em> 或 <em>Pages</em> 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了，减少了鼠标的点击。目前来看，支持 Markdown 语法的编辑器有很多，但他们的交互形式基本都是将「<a href=\"http://www.iplaysoft.com/tag/%E7%BC%96%E8%BE%91\" target=\"_blank\" rel=\"noopener\">编辑</a>」和「预览」分离开来的，要么是直接左右排列编辑和预览窗口，要么是要在两种模式之间来回切换，以前刚接触的时候常常被搞晕。后面电脑换了Linux系统以后觉得编辑文件没有这么方便于是就想下个编辑器来用，找了很久觉得Typora这个编辑器很简洁大方深得小仙女的心于是立马下载来用。</p>\n<h2 id=\"Typora\"><a href=\"#Typora\" class=\"headerlink\" title=\"Typora\"></a>Typora</h2><p>Typora(<a href=\"https://typora.io/\" target=\"_blank\" rel=\"noopener\">https://typora.io/</a>)不同于以往的markdown编辑器在于它只使用一个窗口，却能优雅地实现同时将代码编辑与预览「一体化」结合起来，从而为用户带来更加流畅直观的「所见即所得的 Markdown 写作体验」。Typora 即时显示 Markdown 语法格式的能力被官方称之为 WYSIWYG （What You See Is What You Get）。虽然一开始用觉得有点麻烦甚至想弃坑，但是用久了习惯了就会发现很好用很方便。正式开始用Typora还是在接触gitbook以后，想要写文章才想起来原来我有个markdown编辑器，于是就开造啦~</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/10/typora-gif.gif\" alt=\"Typora-GIF.gif\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"在Ubuntu下安装Typora\"><a href=\"#在Ubuntu下安装Typora\" class=\"headerlink\" title=\"在Ubuntu下安装Typora\"></a>在Ubuntu下安装Typora</h2><p>按照下列命令依次输入即可成功安装Typora，很幸运没有出现BUG最讨厌的就是BUG了。</p>\n<p>安装成功以后找到Typora图标双击打开就可以用了，当然如果你很熟悉命令行模式那你也可以在命令行进行启动。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE</span><br><span class=\"line\">$ sudo add-apt-repository &apos;deb https://typora.io linux/&apos;</span><br><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get install typora</span><br></pre></td></tr></table></figure>\n<h1 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h1><p>markdown啦当然用的markdown格式写咯</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a><img src=\"https://eveywongblog.files.wordpress.com/2017/10/typora.png\" alt=\"Typora\"></h2><h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><h2 id=\"Markdown\"><a href=\"#Markdown\" class=\"headerlink\" title=\"Markdown\"></a>Markdown</h2><p><a href=\"http://zh.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"noopener\">Markdown</a> 是一种轻量级的「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 <em>Word</em> 或 <em>Pages</em> 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了，减少了鼠标的点击。目前来看，支持 Markdown 语法的编辑器有很多，但他们的交互形式基本都是将「<a href=\"http://www.iplaysoft.com/tag/%E7%BC%96%E8%BE%91\" target=\"_blank\" rel=\"noopener\">编辑</a>」和「预览」分离开来的，要么是直接左右排列编辑和预览窗口，要么是要在两种模式之间来回切换，以前刚接触的时候常常被搞晕。后面电脑换了Linux系统以后觉得编辑文件没有这么方便于是就想下个编辑器来用，找了很久觉得Typora这个编辑器很简洁大方深得小仙女的心于是立马下载来用。</p>\n<h2 id=\"Typora\"><a href=\"#Typora\" class=\"headerlink\" title=\"Typora\"></a>Typora</h2><p>Typora(<a href=\"https://typora.io/\" target=\"_blank\" rel=\"noopener\">https://typora.io/</a>)不同于以往的markdown编辑器在于它只使用一个窗口，却能优雅地实现同时将代码编辑与预览「一体化」结合起来，从而为用户带来更加流畅直观的「所见即所得的 Markdown 写作体验」。Typora 即时显示 Markdown 语法格式的能力被官方称之为 WYSIWYG （What You See Is What You Get）。虽然一开始用觉得有点麻烦甚至想弃坑，但是用久了习惯了就会发现很好用很方便。正式开始用Typora还是在接触gitbook以后，想要写文章才想起来原来我有个markdown编辑器，于是就开造啦~</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/10/typora-gif.gif\" alt=\"Typora-GIF.gif\"></p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"在Ubuntu下安装Typora\"><a href=\"#在Ubuntu下安装Typora\" class=\"headerlink\" title=\"在Ubuntu下安装Typora\"></a>在Ubuntu下安装Typora</h2><p>按照下列命令依次输入即可成功安装Typora，很幸运没有出现BUG最讨厌的就是BUG了。</p>\n<p>安装成功以后找到Typora图标双击打开就可以用了，当然如果你很熟悉命令行模式那你也可以在命令行进行启动。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE</span><br><span class=\"line\">$ sudo add-apt-repository &apos;deb https://typora.io linux/&apos;</span><br><span class=\"line\">$ sudo apt-get update</span><br><span class=\"line\">$ sudo apt-get install typora</span><br></pre></td></tr></table></figure>\n<h1 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h1><p>markdown啦当然用的markdown格式写咯</p>\n"},{"title":"数组求和","date":"2018-04-03T16:08:44.000Z","_content":"\n\n\n### 问题描述：\n\n>计算给定数组arr中所有元素的总和。\n>\n>例：\n>\n>输入[1,2,3,4]    \n>\n>输出：10\n\n\n\n### 常规循环：\n\n```js\nfunction sum(arr) {\n    var s = 0;\n    function(var i=arr.length-1;i>=0;i--) {\n        s+=arr[i];\n    }\n    return s;\n}\n```\n\n##### 思路：\n\narr=[1,2,3,4]，i=arr.length-1=4-1=3\n\ns0=0+arr[3]=0+4=4;\n\ns1=4+arr[2]=4+3=7;\n\ns2=7+arr[1]=7+2=9;\n\ns3=9+arr[0]=9+1=10;\n\n\n\n### forEach遍历：\n\n```js\nfunction sum(arr) {\n    var s = 0;\n    arr.forEach(function(val,index,arr) {\n        s+=val;\n    },0)\n    return s;\n}\n```\n\n[forEach传送门]()\n\n`val`:数组中正在处理的当前元素\n\n`index`:数组中正在处理的当前元素的索引\n\n`arr`:forEach()方法正在操作的数组\n\n\n\n>例如:arr=[1,2,3,4]，则\n>\n>s0=s+val0=0+1=1;\n>\n>s1=s0+val1=1+2=3;\n>\n>s2=s1+val2=3+3=6;\n>\n>s3=s2+val3=6+4=10;\n\n\n\n### reduce方法：\n\n```js\nfunction sum(arr) {\n    return arr.reduce(function(prev, curr, idx, arr){\n        return prev + curr;\n    });\n}\n```\n\n[reduce传送门](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce)\n\n`prev`:累加器累加回调的返回值\n\n`curr`:数组中正在处理的元素\n\n`idx`:数组中正在处理的当前元素的索引\n\n`arr`:调用`reduce`的数组\n\n\n\n>例如：arr=[1,2,3,4]，则共经历4轮\n>\n>1. prev=0,curr=1,return 0+1=1 （第一轮累加器累加毁掉的返回值为0）\n>2. prev=1,curr=2,return 1+2=3\n>3. prev=3,curr=3,return 3+3=6\n>4. prev=6,curr=4,return 6+4=10\n\n\n\n### eval：\n\n```js\nfunction sum(arr) {\n    return eval(arr.join(\"+\"));\n};\n```\n\n[eval传送门](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/eval)\n\n>例如:arr=[1,2,3,4]，则\n>\n>return 1+2+3+4=10\n\n","source":"_posts/array-sum.md","raw":"---\ntitle: 数组求和\ndate: 2018-04-04 00:08:44\ntags: [JS, 数组求和]\ncategories: JS\n---\n\n\n\n### 问题描述：\n\n>计算给定数组arr中所有元素的总和。\n>\n>例：\n>\n>输入[1,2,3,4]    \n>\n>输出：10\n\n\n\n### 常规循环：\n\n```js\nfunction sum(arr) {\n    var s = 0;\n    function(var i=arr.length-1;i>=0;i--) {\n        s+=arr[i];\n    }\n    return s;\n}\n```\n\n##### 思路：\n\narr=[1,2,3,4]，i=arr.length-1=4-1=3\n\ns0=0+arr[3]=0+4=4;\n\ns1=4+arr[2]=4+3=7;\n\ns2=7+arr[1]=7+2=9;\n\ns3=9+arr[0]=9+1=10;\n\n\n\n### forEach遍历：\n\n```js\nfunction sum(arr) {\n    var s = 0;\n    arr.forEach(function(val,index,arr) {\n        s+=val;\n    },0)\n    return s;\n}\n```\n\n[forEach传送门]()\n\n`val`:数组中正在处理的当前元素\n\n`index`:数组中正在处理的当前元素的索引\n\n`arr`:forEach()方法正在操作的数组\n\n\n\n>例如:arr=[1,2,3,4]，则\n>\n>s0=s+val0=0+1=1;\n>\n>s1=s0+val1=1+2=3;\n>\n>s2=s1+val2=3+3=6;\n>\n>s3=s2+val3=6+4=10;\n\n\n\n### reduce方法：\n\n```js\nfunction sum(arr) {\n    return arr.reduce(function(prev, curr, idx, arr){\n        return prev + curr;\n    });\n}\n```\n\n[reduce传送门](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce)\n\n`prev`:累加器累加回调的返回值\n\n`curr`:数组中正在处理的元素\n\n`idx`:数组中正在处理的当前元素的索引\n\n`arr`:调用`reduce`的数组\n\n\n\n>例如：arr=[1,2,3,4]，则共经历4轮\n>\n>1. prev=0,curr=1,return 0+1=1 （第一轮累加器累加毁掉的返回值为0）\n>2. prev=1,curr=2,return 1+2=3\n>3. prev=3,curr=3,return 3+3=6\n>4. prev=6,curr=4,return 6+4=10\n\n\n\n### eval：\n\n```js\nfunction sum(arr) {\n    return eval(arr.join(\"+\"));\n};\n```\n\n[eval传送门](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/eval)\n\n>例如:arr=[1,2,3,4]，则\n>\n>return 1+2+3+4=10\n\n","slug":"array-sum","published":1,"updated":"2018-08-17T07:35:36.756Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gur000hoaqo4whyub6l","content":"<h3 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h3><blockquote>\n<p>计算给定数组arr中所有元素的总和。</p>\n<p>例：</p>\n<p>输入[1,2,3,4]    </p>\n<p>输出：10</p>\n</blockquote>\n<h3 id=\"常规循环：\"><a href=\"#常规循环：\" class=\"headerlink\" title=\"常规循环：\"></a>常规循环：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">var i=arr.length<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--</span>) </span>&#123;</span><br><span class=\"line\">        s+=arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"思路：\"><a href=\"#思路：\" class=\"headerlink\" title=\"思路：\"></a>思路：</h5><p>arr=[1,2,3,4]，i=arr.length-1=4-1=3</p>\n<p>s0=0+arr[3]=0+4=4;</p>\n<p>s1=4+arr[2]=4+3=7;</p>\n<p>s2=7+arr[1]=7+2=9;</p>\n<p>s3=9+arr[0]=9+1=10;</p>\n<h3 id=\"forEach遍历：\"><a href=\"#forEach遍历：\" class=\"headerlink\" title=\"forEach遍历：\"></a>forEach遍历：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"number\">0</span>;</span><br><span class=\"line\">    arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val,index,arr</span>) </span>&#123;</span><br><span class=\"line\">        s+=val;</span><br><span class=\"line\">    &#125;,<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"\">forEach传送门</a></p>\n<p><code>val</code>:数组中正在处理的当前元素</p>\n<p><code>index</code>:数组中正在处理的当前元素的索引</p>\n<p><code>arr</code>:forEach()方法正在操作的数组</p>\n<blockquote>\n<p>例如:arr=[1,2,3,4]，则</p>\n<p>s0=s+val0=0+1=1;</p>\n<p>s1=s0+val1=1+2=3;</p>\n<p>s2=s1+val2=3+3=6;</p>\n<p>s3=s2+val3=6+4=10;</p>\n</blockquote>\n<h3 id=\"reduce方法：\"><a href=\"#reduce方法：\" class=\"headerlink\" title=\"reduce方法：\"></a>reduce方法：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev, curr, idx, arr</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> prev + curr;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\" target=\"_blank\" rel=\"noopener\">reduce传送门</a></p>\n<p><code>prev</code>:累加器累加回调的返回值</p>\n<p><code>curr</code>:数组中正在处理的元素</p>\n<p><code>idx</code>:数组中正在处理的当前元素的索引</p>\n<p><code>arr</code>:调用<code>reduce</code>的数组</p>\n<blockquote>\n<p>例如：arr=[1,2,3,4]，则共经历4轮</p>\n<ol>\n<li>prev=0,curr=1,return 0+1=1 （第一轮累加器累加毁掉的返回值为0）</li>\n<li>prev=1,curr=2,return 1+2=3</li>\n<li>prev=3,curr=3,return 3+3=6</li>\n<li>prev=6,curr=4,return 6+4=10</li>\n</ol>\n</blockquote>\n<h3 id=\"eval：\"><a href=\"#eval：\" class=\"headerlink\" title=\"eval：\"></a>eval：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">eval</span>(arr.join(<span class=\"string\">\"+\"</span>));</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/eval\" target=\"_blank\" rel=\"noopener\">eval传送门</a></p>\n<blockquote>\n<p>例如:arr=[1,2,3,4]，则</p>\n<p>return 1+2+3+4=10</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"问题描述：\"><a href=\"#问题描述：\" class=\"headerlink\" title=\"问题描述：\"></a>问题描述：</h3><blockquote>\n<p>计算给定数组arr中所有元素的总和。</p>\n<p>例：</p>\n<p>输入[1,2,3,4]    </p>\n<p>输出：10</p>\n</blockquote>\n<h3 id=\"常规循环：\"><a href=\"#常规循环：\" class=\"headerlink\" title=\"常规循环：\"></a>常规循环：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">var i=arr.length<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--</span>) </span>&#123;</span><br><span class=\"line\">        s+=arr[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"思路：\"><a href=\"#思路：\" class=\"headerlink\" title=\"思路：\"></a>思路：</h5><p>arr=[1,2,3,4]，i=arr.length-1=4-1=3</p>\n<p>s0=0+arr[3]=0+4=4;</p>\n<p>s1=4+arr[2]=4+3=7;</p>\n<p>s2=7+arr[1]=7+2=9;</p>\n<p>s3=9+arr[0]=9+1=10;</p>\n<h3 id=\"forEach遍历：\"><a href=\"#forEach遍历：\" class=\"headerlink\" title=\"forEach遍历：\"></a>forEach遍历：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"number\">0</span>;</span><br><span class=\"line\">    arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">val,index,arr</span>) </span>&#123;</span><br><span class=\"line\">        s+=val;</span><br><span class=\"line\">    &#125;,<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"\">forEach传送门</a></p>\n<p><code>val</code>:数组中正在处理的当前元素</p>\n<p><code>index</code>:数组中正在处理的当前元素的索引</p>\n<p><code>arr</code>:forEach()方法正在操作的数组</p>\n<blockquote>\n<p>例如:arr=[1,2,3,4]，则</p>\n<p>s0=s+val0=0+1=1;</p>\n<p>s1=s0+val1=1+2=3;</p>\n<p>s2=s1+val2=3+3=6;</p>\n<p>s3=s2+val3=6+4=10;</p>\n</blockquote>\n<h3 id=\"reduce方法：\"><a href=\"#reduce方法：\" class=\"headerlink\" title=\"reduce方法：\"></a>reduce方法：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev, curr, idx, arr</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> prev + curr;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\" target=\"_blank\" rel=\"noopener\">reduce传送门</a></p>\n<p><code>prev</code>:累加器累加回调的返回值</p>\n<p><code>curr</code>:数组中正在处理的元素</p>\n<p><code>idx</code>:数组中正在处理的当前元素的索引</p>\n<p><code>arr</code>:调用<code>reduce</code>的数组</p>\n<blockquote>\n<p>例如：arr=[1,2,3,4]，则共经历4轮</p>\n<ol>\n<li>prev=0,curr=1,return 0+1=1 （第一轮累加器累加毁掉的返回值为0）</li>\n<li>prev=1,curr=2,return 1+2=3</li>\n<li>prev=3,curr=3,return 3+3=6</li>\n<li>prev=6,curr=4,return 6+4=10</li>\n</ol>\n</blockquote>\n<h3 id=\"eval：\"><a href=\"#eval：\" class=\"headerlink\" title=\"eval：\"></a>eval：</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">eval</span>(arr.join(<span class=\"string\">\"+\"</span>));</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/eval\" target=\"_blank\" rel=\"noopener\">eval传送门</a></p>\n<blockquote>\n<p>例如:arr=[1,2,3,4]，则</p>\n<p>return 1+2+3+4=10</p>\n</blockquote>\n"},{"title":"《老了依然可以谈未来》读后感","date":"2017-12-14T13:35:41.000Z","_content":"\n蔡澜老先生是一位非常值得敬佩的人。\n\n读蔡澜先生的书不多，这是第一本，还有好几本躺在书单里，很喜欢他丰富的生活阅历，喜欢他热爱生活热爱美食开心快乐的样子，希望自己也能慢慢向他靠拢，多些乐少些愁。\n\n读《老了依然可以谈未来》我有这些感悟：\n\n- 人活一世不过数十载，要开心不要忧愁\n- 学到老活到老。多学一些就更自信一些\n- 要保持年轻\n- 年轻时候吃的苦都不算吃苦，这是一种阅历，总会苦尽甘来\n- 要学会花钱，挣了钱拿出10%去尽情花肯定很开心，挣了钱拿去跟朋友家人吃吃喝喝也很开心\n- 多旅行，看看世界各地的人是怎样去生活\n- 要培养一些除了工作之外的兴趣，这样人活着才有趣\n\n\n\n小学喜欢动画，初中偏爱看名著，高中喜欢看杂志和轻阅读，大学热爱网络。读书使人精神丰富使人常思考，读书是个好东西，所以工作的我又捡起了这个好习惯。\n\n\n\n下一本看张纯如的《南京大屠杀》，本来是很不敢看这类书，但是最近南京大屠杀纪念日让焦点又聚集到这里，我想我们年轻一代需要了解更多的历史真相。","source":"_posts/cailan.md","raw":"---\ntitle: 《老了依然可以谈未来》读后感\ndate: 2017-12-14 21:35:41\ntags: [蔡澜, 读后感]\ncategories: 读书\n---\n\n蔡澜老先生是一位非常值得敬佩的人。\n\n读蔡澜先生的书不多，这是第一本，还有好几本躺在书单里，很喜欢他丰富的生活阅历，喜欢他热爱生活热爱美食开心快乐的样子，希望自己也能慢慢向他靠拢，多些乐少些愁。\n\n读《老了依然可以谈未来》我有这些感悟：\n\n- 人活一世不过数十载，要开心不要忧愁\n- 学到老活到老。多学一些就更自信一些\n- 要保持年轻\n- 年轻时候吃的苦都不算吃苦，这是一种阅历，总会苦尽甘来\n- 要学会花钱，挣了钱拿出10%去尽情花肯定很开心，挣了钱拿去跟朋友家人吃吃喝喝也很开心\n- 多旅行，看看世界各地的人是怎样去生活\n- 要培养一些除了工作之外的兴趣，这样人活着才有趣\n\n\n\n小学喜欢动画，初中偏爱看名著，高中喜欢看杂志和轻阅读，大学热爱网络。读书使人精神丰富使人常思考，读书是个好东西，所以工作的我又捡起了这个好习惯。\n\n\n\n下一本看张纯如的《南京大屠杀》，本来是很不敢看这类书，但是最近南京大屠杀纪念日让焦点又聚集到这里，我想我们年轻一代需要了解更多的历史真相。","slug":"cailan","published":1,"updated":"2018-08-17T07:35:36.757Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gut000koaqochpiriia","content":"<p>蔡澜老先生是一位非常值得敬佩的人。</p>\n<p>读蔡澜先生的书不多，这是第一本，还有好几本躺在书单里，很喜欢他丰富的生活阅历，喜欢他热爱生活热爱美食开心快乐的样子，希望自己也能慢慢向他靠拢，多些乐少些愁。</p>\n<p>读《老了依然可以谈未来》我有这些感悟：</p>\n<ul>\n<li>人活一世不过数十载，要开心不要忧愁</li>\n<li>学到老活到老。多学一些就更自信一些</li>\n<li>要保持年轻</li>\n<li>年轻时候吃的苦都不算吃苦，这是一种阅历，总会苦尽甘来</li>\n<li>要学会花钱，挣了钱拿出10%去尽情花肯定很开心，挣了钱拿去跟朋友家人吃吃喝喝也很开心</li>\n<li>多旅行，看看世界各地的人是怎样去生活</li>\n<li>要培养一些除了工作之外的兴趣，这样人活着才有趣</li>\n</ul>\n<p>小学喜欢动画，初中偏爱看名著，高中喜欢看杂志和轻阅读，大学热爱网络。读书使人精神丰富使人常思考，读书是个好东西，所以工作的我又捡起了这个好习惯。</p>\n<p>下一本看张纯如的《南京大屠杀》，本来是很不敢看这类书，但是最近南京大屠杀纪念日让焦点又聚集到这里，我想我们年轻一代需要了解更多的历史真相。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>蔡澜老先生是一位非常值得敬佩的人。</p>\n<p>读蔡澜先生的书不多，这是第一本，还有好几本躺在书单里，很喜欢他丰富的生活阅历，喜欢他热爱生活热爱美食开心快乐的样子，希望自己也能慢慢向他靠拢，多些乐少些愁。</p>\n<p>读《老了依然可以谈未来》我有这些感悟：</p>\n<ul>\n<li>人活一世不过数十载，要开心不要忧愁</li>\n<li>学到老活到老。多学一些就更自信一些</li>\n<li>要保持年轻</li>\n<li>年轻时候吃的苦都不算吃苦，这是一种阅历，总会苦尽甘来</li>\n<li>要学会花钱，挣了钱拿出10%去尽情花肯定很开心，挣了钱拿去跟朋友家人吃吃喝喝也很开心</li>\n<li>多旅行，看看世界各地的人是怎样去生活</li>\n<li>要培养一些除了工作之外的兴趣，这样人活着才有趣</li>\n</ul>\n<p>小学喜欢动画，初中偏爱看名著，高中喜欢看杂志和轻阅读，大学热爱网络。读书使人精神丰富使人常思考，读书是个好东西，所以工作的我又捡起了这个好习惯。</p>\n<p>下一本看张纯如的《南京大屠杀》，本来是很不敢看这类书，但是最近南京大屠杀纪念日让焦点又聚集到这里，我想我们年轻一代需要了解更多的历史真相。</p>\n"},{"title":"css实现居中","date":"2018-04-25T06:47:18.000Z","_content":"\n### translate+position实现居中\n\n**HTML**\n\n```html\n<div class=\"menu\">\n    <span>dhsl</span>\n</div>\n```\n\n**CSS**\n\n```css\n.menu {\n    position: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n}\n```\n\n","source":"_posts/center.md","raw":"---\ntitle: css实现居中\ndate: 2018-04-25 14:47:18\ntags: [css, 居中]\ncategories: css\n---\n\n### translate+position实现居中\n\n**HTML**\n\n```html\n<div class=\"menu\">\n    <span>dhsl</span>\n</div>\n```\n\n**CSS**\n\n```css\n.menu {\n    position: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n}\n```\n\n","slug":"center","published":1,"updated":"2018-08-17T07:35:36.757Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18guu000poaqo0mfqkdaw","content":"<h3 id=\"translate-position实现居中\"><a href=\"#translate-position实现居中\" class=\"headerlink\" title=\"translate+position实现居中\"></a>translate+position实现居中</h3><p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>dhsl<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-50%, -50%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"translate-position实现居中\"><a href=\"#translate-position实现居中\" class=\"headerlink\" title=\"translate+position实现居中\"></a>translate+position实现居中</h3><p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"menu\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>dhsl<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>CSS</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.menu</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">\t<span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-50%, -50%);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"e2e端到端测试使用ES6遇到的问题及解决方案","date":"2018-06-28T11:04:09.000Z","_content":"\n问题描述：\n\n> (function (exports, require, module, __filename, __dirname) { import _Object$is from 'babel-runtime/core-js/object/is';、\n\n\n\n解决：\n\npackage.json\n\n在package.json添加\"babel-preset-es2015\"\n\n> \"babel-preset-es2015\": \"^6.9.0\",\n\n.babelrc\n\n在文件.babelrc中的\"presets\"字段添加\"es2015\"\n\n> \"presets\": [\n>\n> ​    \"es2015\"\n>\n>   ]\n\n最后\n\n```shell\nnpm install\n```","source":"_posts/e2e端到端测试使用ES6遇到的问题及解决方案.md","raw":"---\ntitle: e2e端到端测试使用ES6遇到的问题及解决方案\ndate: 2018-06-28 19:04:09\ntags: [e2e, es6]\ncategories: 测试\n---\n\n问题描述：\n\n> (function (exports, require, module, __filename, __dirname) { import _Object$is from 'babel-runtime/core-js/object/is';、\n\n\n\n解决：\n\npackage.json\n\n在package.json添加\"babel-preset-es2015\"\n\n> \"babel-preset-es2015\": \"^6.9.0\",\n\n.babelrc\n\n在文件.babelrc中的\"presets\"字段添加\"es2015\"\n\n> \"presets\": [\n>\n> ​    \"es2015\"\n>\n>   ]\n\n最后\n\n```shell\nnpm install\n```","slug":"e2e端到端测试使用ES6遇到的问题及解决方案","published":1,"updated":"2018-08-17T07:35:36.757Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18guv000qoaqolw8l0znh","content":"<p>问题描述：</p>\n<blockquote>\n<p>(function (exports, require, module, <strong>filename, </strong>dirname) { import _Object$is from ‘babel-runtime/core-js/object/is’;、</p>\n</blockquote>\n<p>解决：</p>\n<p>package.json</p>\n<p>在package.json添加”babel-preset-es2015”</p>\n<blockquote>\n<p>“babel-preset-es2015”: “^6.9.0”,</p>\n</blockquote>\n<p>.babelrc</p>\n<p>在文件.babelrc中的”presets”字段添加”es2015”</p>\n<blockquote>\n<p>“presets”: [</p>\n<p>​    “es2015”</p>\n<p>  ]</p>\n</blockquote>\n<p>最后</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>问题描述：</p>\n<blockquote>\n<p>(function (exports, require, module, <strong>filename, </strong>dirname) { import _Object$is from ‘babel-runtime/core-js/object/is’;、</p>\n</blockquote>\n<p>解决：</p>\n<p>package.json</p>\n<p>在package.json添加”babel-preset-es2015”</p>\n<blockquote>\n<p>“babel-preset-es2015”: “^6.9.0”,</p>\n</blockquote>\n<p>.babelrc</p>\n<p>在文件.babelrc中的”presets”字段添加”es2015”</p>\n<blockquote>\n<p>“presets”: [</p>\n<p>​    “es2015”</p>\n<p>  ]</p>\n</blockquote>\n<p>最后</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>"},{"title":"基于element-ui表单验证方法封装","date":"2018-01-24T10:33:38.000Z","_content":"\n## 背景\n\n最近在做重构项目的表单验证，发现element-ui自带的表单校验内置方法太少了，不能满足日常工作需求，如果需要校验的表单多，就会做很多重复的工作，所以把校验方法包括自定义校验规则封装起来便于调用。\n\n\n\n## 使用\n\n主要文件有两个，`eleValidate.vue`和`valiate.js`\n\n### eleValidate.vue\n\n封装后的loginRules只需要`传参`就可以了。\n\n```html\n<template>\n  <div class=\"login-container\">\n    <el-form autoComplete=\"on\" :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginForm\" label-position=\"left\" label-width=\"0px\"\n      class=\"card-box login-form\">\n\n      <el-form-item prop=\"username\">\n        <el-input name=\"username\" type=\"text\" v-model=\"loginForm.username\" autoComplete=\"on\" placeholder=\"用户名\"/>\n      </el-form-item>\n\n      <el-form-item prop=\"password\">\n        <el-input name=\"password\" v-model=\"loginForm.password\" autoComplete=\"on\"\n          placeholder=\"密码\"></el-input>\n      </el-form-item>\n\n      <el-form-item>\n        <el-button type=\"primary\" style=\"width:100%;\">\n          登陆\n        </el-button>\n      </el-form-item>\n\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport validate from '../validate'\n\nexport default {\n  name: 'login',\n  data () {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [\n          { validator: validate('name', '用户名由字母、数字、下划线以及短横线组成。', '用户名不能为空！'), trigger: 'blur' },\n          { max: 50, message: '用户名最多为50个字符！', trigger: 'blur' }\n        ],\n        password: [\n          { validator: validate('passWord', '密码由字母、数字及下划线组成。', '密码不能为空！'), trigger: 'blur' },\n          { max: 25, message: '密码最多为25个字符！', trigger: 'blur' }\n        ]\n      }\n    }\n  }\n}\n</script>\n<style>\n  .login-container {\n    width: 300px;\n    margin: 0 auto;\n    margin-top: 100px;\n  }\n</style>\n\n```\n\n`validate`既可以传参数名也可以传正则表达式，例如：\n\n```\n{ validator: validate('name', '用户名由字母、数字、下划线以及短横线组成。', '用户名不能为空！'), trigger: 'blur' }\n或者\n{ validator: validate('/^([\\w-]+|[\\u4e00-\\u9fa5]+)$/', '用户名由字母、数字、下划线以及短横线组成。', '用户名不能为空！'), trigger: 'blur' }\n```\n\n\n\n### validate.js\n\n这个文件主要写自定义正则表达式和处理传进来的参数。\n\n```\nreg = pattern[reg] ? pattern[reg] : reg\n```\n\n这句话的作用就是既可以传定义好的参数名，也可以直接传正则表达式，传进来以后自动检测是否存在（已经定义）\n\n```js\n/**\n * 正则库\n */\nconst pattern = {\n  name: /^([\\w-]+|[\\u4e00-\\u9fa5]+)$/, // 用户名校验\n  passWord: /^\\w+$/ // 密码校验\n}\n\n/**\n * 内置规则\n * @param {String} reg - {pattern}中预定义正则名称 or 自定义正则\n * @param {String} msg1 - 正则校验不通过提示\n * @param {String} msg2 - 值为空时提示（可不填）\n */\nconst validate = (reg, msg1, msg2) => {\n  return (rule, value, callback) => {\n    if (!value) {\n      if (!msg2) {\n        callback()\n      }\n      callback(new Error(msg2))\n    }\n    reg = pattern[reg] ? pattern[reg] : reg\n    if (!reg.test(value)) {\n      callback(new Error(msg1))\n    } else {\n      callback()\n    }\n  }\n}\n\nexport default validate\n\n```\n\n\n\n## 传送门\n\n源码戳[这里](https://github.com/Evey-huang/ele-validate)\n\n## 小结\n\n封装以后确实很好用，省了很多工作，就是内置的规则很少，写正则麻烦。\n\n![抱头痛哭](http://p1cjg886l.bkt.clouddn.com/cry.jpg)","source":"_posts/eleValidatePackage.md","raw":"---\ntitle: 基于element-ui表单验证方法封装\ndate: 2018-01-24 18:33:38\ntags: [element-ui, 封装, 表单校验]\ncategories: validate\n---\n\n## 背景\n\n最近在做重构项目的表单验证，发现element-ui自带的表单校验内置方法太少了，不能满足日常工作需求，如果需要校验的表单多，就会做很多重复的工作，所以把校验方法包括自定义校验规则封装起来便于调用。\n\n\n\n## 使用\n\n主要文件有两个，`eleValidate.vue`和`valiate.js`\n\n### eleValidate.vue\n\n封装后的loginRules只需要`传参`就可以了。\n\n```html\n<template>\n  <div class=\"login-container\">\n    <el-form autoComplete=\"on\" :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginForm\" label-position=\"left\" label-width=\"0px\"\n      class=\"card-box login-form\">\n\n      <el-form-item prop=\"username\">\n        <el-input name=\"username\" type=\"text\" v-model=\"loginForm.username\" autoComplete=\"on\" placeholder=\"用户名\"/>\n      </el-form-item>\n\n      <el-form-item prop=\"password\">\n        <el-input name=\"password\" v-model=\"loginForm.password\" autoComplete=\"on\"\n          placeholder=\"密码\"></el-input>\n      </el-form-item>\n\n      <el-form-item>\n        <el-button type=\"primary\" style=\"width:100%;\">\n          登陆\n        </el-button>\n      </el-form-item>\n\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport validate from '../validate'\n\nexport default {\n  name: 'login',\n  data () {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [\n          { validator: validate('name', '用户名由字母、数字、下划线以及短横线组成。', '用户名不能为空！'), trigger: 'blur' },\n          { max: 50, message: '用户名最多为50个字符！', trigger: 'blur' }\n        ],\n        password: [\n          { validator: validate('passWord', '密码由字母、数字及下划线组成。', '密码不能为空！'), trigger: 'blur' },\n          { max: 25, message: '密码最多为25个字符！', trigger: 'blur' }\n        ]\n      }\n    }\n  }\n}\n</script>\n<style>\n  .login-container {\n    width: 300px;\n    margin: 0 auto;\n    margin-top: 100px;\n  }\n</style>\n\n```\n\n`validate`既可以传参数名也可以传正则表达式，例如：\n\n```\n{ validator: validate('name', '用户名由字母、数字、下划线以及短横线组成。', '用户名不能为空！'), trigger: 'blur' }\n或者\n{ validator: validate('/^([\\w-]+|[\\u4e00-\\u9fa5]+)$/', '用户名由字母、数字、下划线以及短横线组成。', '用户名不能为空！'), trigger: 'blur' }\n```\n\n\n\n### validate.js\n\n这个文件主要写自定义正则表达式和处理传进来的参数。\n\n```\nreg = pattern[reg] ? pattern[reg] : reg\n```\n\n这句话的作用就是既可以传定义好的参数名，也可以直接传正则表达式，传进来以后自动检测是否存在（已经定义）\n\n```js\n/**\n * 正则库\n */\nconst pattern = {\n  name: /^([\\w-]+|[\\u4e00-\\u9fa5]+)$/, // 用户名校验\n  passWord: /^\\w+$/ // 密码校验\n}\n\n/**\n * 内置规则\n * @param {String} reg - {pattern}中预定义正则名称 or 自定义正则\n * @param {String} msg1 - 正则校验不通过提示\n * @param {String} msg2 - 值为空时提示（可不填）\n */\nconst validate = (reg, msg1, msg2) => {\n  return (rule, value, callback) => {\n    if (!value) {\n      if (!msg2) {\n        callback()\n      }\n      callback(new Error(msg2))\n    }\n    reg = pattern[reg] ? pattern[reg] : reg\n    if (!reg.test(value)) {\n      callback(new Error(msg1))\n    } else {\n      callback()\n    }\n  }\n}\n\nexport default validate\n\n```\n\n\n\n## 传送门\n\n源码戳[这里](https://github.com/Evey-huang/ele-validate)\n\n## 小结\n\n封装以后确实很好用，省了很多工作，就是内置的规则很少，写正则麻烦。\n\n![抱头痛哭](http://p1cjg886l.bkt.clouddn.com/cry.jpg)","slug":"eleValidatePackage","published":1,"updated":"2018-08-17T07:35:36.758Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18guw000uoaqoidbrkr5s","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近在做重构项目的表单验证，发现element-ui自带的表单校验内置方法太少了，不能满足日常工作需求，如果需要校验的表单多，就会做很多重复的工作，所以把校验方法包括自定义校验规则封装起来便于调用。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>主要文件有两个，<code>eleValidate.vue</code>和<code>valiate.js</code></p>\n<h3 id=\"eleValidate-vue\"><a href=\"#eleValidate-vue\" class=\"headerlink\" title=\"eleValidate.vue\"></a>eleValidate.vue</h3><p>封装后的loginRules只需要<code>传参</code>就可以了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"login-container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">autoComplete</span>=<span class=\"string\">\"on\"</span> <span class=\"attr\">:model</span>=<span class=\"string\">\"loginForm\"</span> <span class=\"attr\">:rules</span>=<span class=\"string\">\"loginRules\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"loginForm\"</span> <span class=\"attr\">label-position</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">label-width</span>=<span class=\"string\">\"0px\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"card-box login-form\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">prop</span>=<span class=\"string\">\"username\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"loginForm.username\"</span> <span class=\"attr\">autoComplete</span>=<span class=\"string\">\"on\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"用户名\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">prop</span>=<span class=\"string\">\"password\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"loginForm.password\"</span> <span class=\"attr\">autoComplete</span>=<span class=\"string\">\"on\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">placeholder</span>=<span class=\"string\">\"密码\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"primary\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100%;\"</span>&gt;</span></span><br><span class=\"line\">          登陆</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">import</span> validate <span class=\"keyword\">from</span> <span class=\"string\">'../validate'</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  name: <span class=\"string\">'login'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">  data () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      loginForm: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        username: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">        password: <span class=\"string\">''</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      loginRules: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        username: [</span></span><br><span class=\"line\"><span class=\"javascript\">          &#123; <span class=\"attr\">validator</span>: validate(<span class=\"string\">'name'</span>, <span class=\"string\">'用户名由字母、数字、下划线以及短横线组成。'</span>, <span class=\"string\">'用户名不能为空！'</span>), <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">          &#123; <span class=\"attr\">max</span>: <span class=\"number\">50</span>, <span class=\"attr\">message</span>: <span class=\"string\">'用户名最多为50个字符！'</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        ],</span></span><br><span class=\"line\"><span class=\"undefined\">        password: [</span></span><br><span class=\"line\"><span class=\"javascript\">          &#123; <span class=\"attr\">validator</span>: validate(<span class=\"string\">'passWord'</span>, <span class=\"string\">'密码由字母、数字及下划线组成。'</span>, <span class=\"string\">'密码不能为空！'</span>), <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">          &#123; <span class=\"attr\">max</span>: <span class=\"number\">25</span>, <span class=\"attr\">message</span>: <span class=\"string\">'密码最多为25个字符！'</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        ]</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.login-container</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    width: 300px;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin: 0 auto;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin-top: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>validate</code>既可以传参数名也可以传正则表达式，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; validator: validate(&apos;name&apos;, &apos;用户名由字母、数字、下划线以及短横线组成。&apos;, &apos;用户名不能为空！&apos;), trigger: &apos;blur&apos; &#125;</span><br><span class=\"line\">或者</span><br><span class=\"line\">&#123; validator: validate(&apos;/^([\\w-]+|[\\u4e00-\\u9fa5]+)$/&apos;, &apos;用户名由字母、数字、下划线以及短横线组成。&apos;, &apos;用户名不能为空！&apos;), trigger: &apos;blur&apos; &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"validate-js\"><a href=\"#validate-js\" class=\"headerlink\" title=\"validate.js\"></a>validate.js</h3><p>这个文件主要写自定义正则表达式和处理传进来的参数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reg = pattern[reg] ? pattern[reg] : reg</span><br></pre></td></tr></table></figure>\n<p>这句话的作用就是既可以传定义好的参数名，也可以直接传正则表达式，传进来以后自动检测是否存在（已经定义）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 正则库</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> pattern = &#123;</span><br><span class=\"line\">  name: <span class=\"regexp\">/^([\\w-]+|[\\u4e00-\\u9fa5]+)$/</span>, <span class=\"comment\">// 用户名校验</span></span><br><span class=\"line\">  passWord: <span class=\"regexp\">/^\\w+$/</span> <span class=\"comment\">// 密码校验</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 内置规则</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;String&#125; reg - &#123;pattern&#125;中预定义正则名称 or 自定义正则</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;String&#125; msg1 - 正则校验不通过提示</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;String&#125; msg2 - 值为空时提示（可不填）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> validate = <span class=\"function\">(<span class=\"params\">reg, msg1, msg2</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!value) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!msg2) &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(msg2))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    reg = pattern[reg] ? pattern[reg] : reg</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!reg.test(value)) &#123;</span><br><span class=\"line\">      callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(msg1))</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      callback()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> validate</span><br></pre></td></tr></table></figure>\n<h2 id=\"传送门\"><a href=\"#传送门\" class=\"headerlink\" title=\"传送门\"></a>传送门</h2><p>源码戳<a href=\"https://github.com/Evey-huang/ele-validate\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>封装以后确实很好用，省了很多工作，就是内置的规则很少，写正则麻烦。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/cry.jpg\" alt=\"抱头痛哭\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近在做重构项目的表单验证，发现element-ui自带的表单校验内置方法太少了，不能满足日常工作需求，如果需要校验的表单多，就会做很多重复的工作，所以把校验方法包括自定义校验规则封装起来便于调用。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>主要文件有两个，<code>eleValidate.vue</code>和<code>valiate.js</code></p>\n<h3 id=\"eleValidate-vue\"><a href=\"#eleValidate-vue\" class=\"headerlink\" title=\"eleValidate.vue\"></a>eleValidate.vue</h3><p>封装后的loginRules只需要<code>传参</code>就可以了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"login-container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">autoComplete</span>=<span class=\"string\">\"on\"</span> <span class=\"attr\">:model</span>=<span class=\"string\">\"loginForm\"</span> <span class=\"attr\">:rules</span>=<span class=\"string\">\"loginRules\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"loginForm\"</span> <span class=\"attr\">label-position</span>=<span class=\"string\">\"left\"</span> <span class=\"attr\">label-width</span>=<span class=\"string\">\"0px\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"card-box login-form\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">prop</span>=<span class=\"string\">\"username\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"loginForm.username\"</span> <span class=\"attr\">autoComplete</span>=<span class=\"string\">\"on\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"用户名\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">prop</span>=<span class=\"string\">\"password\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"loginForm.password\"</span> <span class=\"attr\">autoComplete</span>=<span class=\"string\">\"on\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">placeholder</span>=<span class=\"string\">\"密码\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"primary\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100%;\"</span>&gt;</span></span><br><span class=\"line\">          登陆</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">import</span> validate <span class=\"keyword\">from</span> <span class=\"string\">'../validate'</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">  name: <span class=\"string\">'login'</span>,</span></span><br><span class=\"line\"><span class=\"undefined\">  data () &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">return</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">      loginForm: &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        username: <span class=\"string\">''</span>,</span></span><br><span class=\"line\"><span class=\"javascript\">        password: <span class=\"string\">''</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;,</span></span><br><span class=\"line\"><span class=\"undefined\">      loginRules: &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        username: [</span></span><br><span class=\"line\"><span class=\"javascript\">          &#123; <span class=\"attr\">validator</span>: validate(<span class=\"string\">'name'</span>, <span class=\"string\">'用户名由字母、数字、下划线以及短横线组成。'</span>, <span class=\"string\">'用户名不能为空！'</span>), <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">          &#123; <span class=\"attr\">max</span>: <span class=\"number\">50</span>, <span class=\"attr\">message</span>: <span class=\"string\">'用户名最多为50个字符！'</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        ],</span></span><br><span class=\"line\"><span class=\"undefined\">        password: [</span></span><br><span class=\"line\"><span class=\"javascript\">          &#123; <span class=\"attr\">validator</span>: validate(<span class=\"string\">'passWord'</span>, <span class=\"string\">'密码由字母、数字及下划线组成。'</span>, <span class=\"string\">'密码不能为空！'</span>), <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;,</span></span><br><span class=\"line\"><span class=\"javascript\">          &#123; <span class=\"attr\">max</span>: <span class=\"number\">25</span>, <span class=\"attr\">message</span>: <span class=\"string\">'密码最多为25个字符！'</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        ]</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.login-container</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    width: 300px;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin: 0 auto;</span></span><br><span class=\"line\"><span class=\"undefined\">    margin-top: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><code>validate</code>既可以传参数名也可以传正则表达式，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; validator: validate(&apos;name&apos;, &apos;用户名由字母、数字、下划线以及短横线组成。&apos;, &apos;用户名不能为空！&apos;), trigger: &apos;blur&apos; &#125;</span><br><span class=\"line\">或者</span><br><span class=\"line\">&#123; validator: validate(&apos;/^([\\w-]+|[\\u4e00-\\u9fa5]+)$/&apos;, &apos;用户名由字母、数字、下划线以及短横线组成。&apos;, &apos;用户名不能为空！&apos;), trigger: &apos;blur&apos; &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"validate-js\"><a href=\"#validate-js\" class=\"headerlink\" title=\"validate.js\"></a>validate.js</h3><p>这个文件主要写自定义正则表达式和处理传进来的参数。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">reg = pattern[reg] ? pattern[reg] : reg</span><br></pre></td></tr></table></figure>\n<p>这句话的作用就是既可以传定义好的参数名，也可以直接传正则表达式，传进来以后自动检测是否存在（已经定义）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 正则库</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> pattern = &#123;</span><br><span class=\"line\">  name: <span class=\"regexp\">/^([\\w-]+|[\\u4e00-\\u9fa5]+)$/</span>, <span class=\"comment\">// 用户名校验</span></span><br><span class=\"line\">  passWord: <span class=\"regexp\">/^\\w+$/</span> <span class=\"comment\">// 密码校验</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 内置规则</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;String&#125; reg - &#123;pattern&#125;中预定义正则名称 or 自定义正则</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;String&#125; msg1 - 正则校验不通过提示</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;String&#125; msg2 - 值为空时提示（可不填）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> validate = <span class=\"function\">(<span class=\"params\">reg, msg1, msg2</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!value) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!msg2) &#123;</span><br><span class=\"line\">        callback()</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(msg2))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    reg = pattern[reg] ? pattern[reg] : reg</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!reg.test(value)) &#123;</span><br><span class=\"line\">      callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(msg1))</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      callback()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> validate</span><br></pre></td></tr></table></figure>\n<h2 id=\"传送门\"><a href=\"#传送门\" class=\"headerlink\" title=\"传送门\"></a>传送门</h2><p>源码戳<a href=\"https://github.com/Evey-huang/ele-validate\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>封装以后确实很好用，省了很多工作，就是内置的规则很少，写正则麻烦。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/cry.jpg\" alt=\"抱头痛哭\"></p>\n"},{"title":"使用ES6的浏览器兼容性问题","date":"2018-01-20T03:38:18.000Z","_content":"\n![插图](http://p1cjg886l.bkt.clouddn.com/es1.jpg)\n\n## 背景\n\n最近项目重构需要添加单元测试环境到项目中去，由于之前已经有了经验和写了教程，直接照着来就是了，但是却出现了bug。\n\n![es6 bug](http://p1cjg886l.bkt.clouddn.com/es.png)\n\n## 问题\n\nGoogle发现这是一个<u>es6浏览器兼容性问题</u>。\n\n### polyfill\n\n由于Babel默认只转换各种ES2015语法，而不转换新的API，比如`Promise`，这时我们需要提供一些`ployfill`来模拟出这样一个提供原生支持功能的浏览器环境。主要有两种方式：`babel-runtime`和`babel-polyfill`，这里主要讲`babel-polyfill`。\n\n#### babel-polypill\n\n`babel-polyfill`是针对全局环境的，引入它浏览器就好像具备了规范里定义的完整的特性，一旦引入，就会跑一个`babel-polyfill`实例。\n\n##### 用法：\n\n1. 安装\n\n```shell\nnpm install --save-dev babel-polyfill\n```\n\n1. 在入口文件引入\n\n```js\nimport 'babel-polyfill'\n```\n\n\n\n## 解决方案\n\n本次bug的引起主要是因为添加了单元测试环境，所以引入的时候应该在单元测试环境配置文件里引入，在`karma.conf.js`中`files`字段中引入：\n\n```js\n'../../node_modules/babel-polyfill/dist/polyfill.js'\n```\n\n具体这样：\n\n```js\nfiles: [\n  '../../node_modules/babel-polyfill/dist/polyfill.js',\n  './index.js' // 入口文件\n],\n```\n\n\n\n## 小结\n\n浏览器兼容是个坑。","source":"_posts/es6.md","raw":"---\ntitle: 使用ES6的浏览器兼容性问题\ndate: 2018-01-20 11:38:18\ntags: [ES6, 单元测试]\ncategories: 测试\n---\n\n![插图](http://p1cjg886l.bkt.clouddn.com/es1.jpg)\n\n## 背景\n\n最近项目重构需要添加单元测试环境到项目中去，由于之前已经有了经验和写了教程，直接照着来就是了，但是却出现了bug。\n\n![es6 bug](http://p1cjg886l.bkt.clouddn.com/es.png)\n\n## 问题\n\nGoogle发现这是一个<u>es6浏览器兼容性问题</u>。\n\n### polyfill\n\n由于Babel默认只转换各种ES2015语法，而不转换新的API，比如`Promise`，这时我们需要提供一些`ployfill`来模拟出这样一个提供原生支持功能的浏览器环境。主要有两种方式：`babel-runtime`和`babel-polyfill`，这里主要讲`babel-polyfill`。\n\n#### babel-polypill\n\n`babel-polyfill`是针对全局环境的，引入它浏览器就好像具备了规范里定义的完整的特性，一旦引入，就会跑一个`babel-polyfill`实例。\n\n##### 用法：\n\n1. 安装\n\n```shell\nnpm install --save-dev babel-polyfill\n```\n\n1. 在入口文件引入\n\n```js\nimport 'babel-polyfill'\n```\n\n\n\n## 解决方案\n\n本次bug的引起主要是因为添加了单元测试环境，所以引入的时候应该在单元测试环境配置文件里引入，在`karma.conf.js`中`files`字段中引入：\n\n```js\n'../../node_modules/babel-polyfill/dist/polyfill.js'\n```\n\n具体这样：\n\n```js\nfiles: [\n  '../../node_modules/babel-polyfill/dist/polyfill.js',\n  './index.js' // 入口文件\n],\n```\n\n\n\n## 小结\n\n浏览器兼容是个坑。","slug":"es6","published":1,"updated":"2018-08-17T07:35:36.758Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gux000xoaqoqlrk6pil","content":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/es1.jpg\" alt=\"插图\"></p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近项目重构需要添加单元测试环境到项目中去，由于之前已经有了经验和写了教程，直接照着来就是了，但是却出现了bug。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/es.png\" alt=\"es6 bug\"></p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>Google发现这是一个<u>es6浏览器兼容性问题</u>。</p>\n<h3 id=\"polyfill\"><a href=\"#polyfill\" class=\"headerlink\" title=\"polyfill\"></a>polyfill</h3><p>由于Babel默认只转换各种ES2015语法，而不转换新的API，比如<code>Promise</code>，这时我们需要提供一些<code>ployfill</code>来模拟出这样一个提供原生支持功能的浏览器环境。主要有两种方式：<code>babel-runtime</code>和<code>babel-polyfill</code>，这里主要讲<code>babel-polyfill</code>。</p>\n<h4 id=\"babel-polypill\"><a href=\"#babel-polypill\" class=\"headerlink\" title=\"babel-polypill\"></a>babel-polypill</h4><p><code>babel-polyfill</code>是针对全局环境的，引入它浏览器就好像具备了规范里定义的完整的特性，一旦引入，就会跑一个<code>babel-polyfill</code>实例。</p>\n<h5 id=\"用法：\"><a href=\"#用法：\" class=\"headerlink\" title=\"用法：\"></a>用法：</h5><ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save-dev babel-polyfill</span><br></pre></td></tr></table></figure>\n<ol>\n<li>在入口文件引入</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'babel-polyfill'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>本次bug的引起主要是因为添加了单元测试环境，所以引入的时候应该在单元测试环境配置文件里引入，在<code>karma.conf.js</code>中<code>files</code>字段中引入：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'../../node_modules/babel-polyfill/dist/polyfill.js'</span></span><br></pre></td></tr></table></figure>\n<p>具体这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">files: [</span><br><span class=\"line\">  <span class=\"string\">'../../node_modules/babel-polyfill/dist/polyfill.js'</span>,</span><br><span class=\"line\">  <span class=\"string\">'./index.js'</span> <span class=\"comment\">// 入口文件</span></span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>浏览器兼容是个坑。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/es1.jpg\" alt=\"插图\"></p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近项目重构需要添加单元测试环境到项目中去，由于之前已经有了经验和写了教程，直接照着来就是了，但是却出现了bug。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/es.png\" alt=\"es6 bug\"></p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>Google发现这是一个<u>es6浏览器兼容性问题</u>。</p>\n<h3 id=\"polyfill\"><a href=\"#polyfill\" class=\"headerlink\" title=\"polyfill\"></a>polyfill</h3><p>由于Babel默认只转换各种ES2015语法，而不转换新的API，比如<code>Promise</code>，这时我们需要提供一些<code>ployfill</code>来模拟出这样一个提供原生支持功能的浏览器环境。主要有两种方式：<code>babel-runtime</code>和<code>babel-polyfill</code>，这里主要讲<code>babel-polyfill</code>。</p>\n<h4 id=\"babel-polypill\"><a href=\"#babel-polypill\" class=\"headerlink\" title=\"babel-polypill\"></a>babel-polypill</h4><p><code>babel-polyfill</code>是针对全局环境的，引入它浏览器就好像具备了规范里定义的完整的特性，一旦引入，就会跑一个<code>babel-polyfill</code>实例。</p>\n<h5 id=\"用法：\"><a href=\"#用法：\" class=\"headerlink\" title=\"用法：\"></a>用法：</h5><ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save-dev babel-polyfill</span><br></pre></td></tr></table></figure>\n<ol>\n<li>在入口文件引入</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'babel-polyfill'</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>本次bug的引起主要是因为添加了单元测试环境，所以引入的时候应该在单元测试环境配置文件里引入，在<code>karma.conf.js</code>中<code>files</code>字段中引入：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'../../node_modules/babel-polyfill/dist/polyfill.js'</span></span><br></pre></td></tr></table></figure>\n<p>具体这样：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">files: [</span><br><span class=\"line\">  <span class=\"string\">'../../node_modules/babel-polyfill/dist/polyfill.js'</span>,</span><br><span class=\"line\">  <span class=\"string\">'./index.js'</span> <span class=\"comment\">// 入口文件</span></span><br><span class=\"line\">],</span><br></pre></td></tr></table></figure>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>浏览器兼容是个坑。</p>\n"},{"title":"《单恋》","date":"2018-01-12T02:11:50.000Z","_content":"\n![单恋人物图](http://p1cjg886l.bkt.clouddn.com/danlian.png)\n\n《单恋》主要是围绕一个杀人事件展开调查最后牵出因性别而烦恼的一个特殊人群。\n\n## 故事梗概\n\n中尾功辅、西胁哲朗、高仓理沙子还有日浦美月都是大学时代美式橄榄球队的成员，中尾毕业以后入赘高城家，因为有一个内心是男人的母亲而研究起性别差异并与嵯峨正道创办了金童剧团来为因性别而烦恼的人群解决身份户籍问题。日浦美月患有性别识别障碍，时而是女性时而是男性，顺应父母做一个正常的女孩子而相亲结婚并且生下一个孩子，但是想做男人的愿望特别强烈所以还是离开了家，去寻找自己想要的生活。\n\n在佐伯香里的介绍下进入了猫眼工作，户仓明雄跟踪佐伯香里，为了保护香里日浦形影不离地保护她，户仓明雄很生气调查到日浦其实是个女人，为了羞辱她进而对她施暴，还好中尾及时赶到施暴未遂，中尾因为愤怒杀死了户仓明雄。\n\n美月想要顶替中尾去自首，但是很舍不得昔日的好友，便决定先去见一见哲朗他们，这一次的相见引发了大家的想追寻真想的好奇心，哲朗和理沙子围绕美月杀人以及美月失踪展开了调查然后慢慢接近了真相，原来中尾和美月的背后有着一群因为性别而烦恼的人，他们有些是生来是女儿身但是却有着男儿心，有些事男人的身体却想以女人的身份去生活，想真正以异性的身份去生活户籍是个大问题，中尾和嵯峨就致力于帮助他们过上自己想要的生活而努力。想要保护好友而终止调查的时候却发现事情失去了控制。\n\n若因杀人事件而使这一特殊人群曝光，之前所做的努力就会付之东流，这时已经身怀而哲朗、理沙子还有早田也以自己的方式帮助着他们。\n\n结局的最后是一切尘埃落定，因为中尾的牺牲那个特殊人群得以平静地生活。\n\n\n\n## 想说几句\n\n对于性别的解释，书中用麦比乌斯环来做比喻。“<u>如果是一张普通的纸，那么反面永远是反面，正面永远是正面，两者没有交会的机会。但若换成麦比乌斯环，正面却会在不知不觉间成了反面。正反面紧密相连。这个世界上所有的人都在这麦比乌斯环上，不存在完全的女人，也不存在完全的男人。</u>”\n\n这其中的代表就是日浦美月，美月说自己的内心是个男人，至少在丈夫和外人面前是，但是在中尾交往的时候，和哲朗发生关系的时候，拍成人礼照片的时候透露出来的都是不折不扣的女人，她的父亲、中尾和哲朗都是这样坚信，但是和理沙子在一起的时候，理沙子却说感受到她是以男人方式存在的，最后她和中尾一体同心，她既是中尾也是日浦，十多年的单恋修成正果，是很幸福的事。\n\n后面理沙子和哲朗还是分开了，关于大学最后一场比赛输了，理由是因为哲朗左眼视力不好导致丢球，但是这个原因他从来没有对大家说过，只有中尾和早田知道，甚至是最亲密的伴侣他的妻子理沙子，他也不曾开口，后面理沙子说的“<u>你是不是决定到死也不让我进入你的世界，也就是所谓的男人的世界？那个世界有多夸张？是圣地？女人进入那个世界，对男人来说有那么严重吗？</u>”，太过鲜明地划分男人和女人的世界了。理沙子和哲朗这一对校园恋人走进婚姻八年最终还是分手收场，让我想起最近火热的电影《前任3》，讲的是错过了就回不去了，但我是想为什么在这个错过形成之前不把问题解决了呢，恋人间不是应该多沟通吗，有什么就讲清楚然后再一起去解决，而不是一直等对方开口，最后这样错过。\n\n最后很意外的是早田帮助哲朗他们逃跑，一开始觉得早田很在意他的工作虽不会给他们添麻烦但也不至于帮忙，但是最后的举动让人很意外，原来近端锋不仅要接好传过来的球，为了保护四分位还需要参与防守。\n\n第一次看关于性别探讨的的书籍，类似影视作品也看过，但是第一次对性别有个深刻的认识还是看完《单恋》以后。我想我们不应该为了性别而去烦恼，因为自己有个异性的心就一定要变成异性去生活，就应该像书中的相川冬纪和末永睦美一样，男的女的好的坏的都是自己，应该学会去接受自己。\n\n我就是我，不一样的烟火。","source":"_posts/danlian.md","raw":"---\ntitle: 《单恋》\ndate: 2018-01-12 10:11:50\ntags: [单恋, 东野圭吾]\ncategories: 读书\n---\n\n![单恋人物图](http://p1cjg886l.bkt.clouddn.com/danlian.png)\n\n《单恋》主要是围绕一个杀人事件展开调查最后牵出因性别而烦恼的一个特殊人群。\n\n## 故事梗概\n\n中尾功辅、西胁哲朗、高仓理沙子还有日浦美月都是大学时代美式橄榄球队的成员，中尾毕业以后入赘高城家，因为有一个内心是男人的母亲而研究起性别差异并与嵯峨正道创办了金童剧团来为因性别而烦恼的人群解决身份户籍问题。日浦美月患有性别识别障碍，时而是女性时而是男性，顺应父母做一个正常的女孩子而相亲结婚并且生下一个孩子，但是想做男人的愿望特别强烈所以还是离开了家，去寻找自己想要的生活。\n\n在佐伯香里的介绍下进入了猫眼工作，户仓明雄跟踪佐伯香里，为了保护香里日浦形影不离地保护她，户仓明雄很生气调查到日浦其实是个女人，为了羞辱她进而对她施暴，还好中尾及时赶到施暴未遂，中尾因为愤怒杀死了户仓明雄。\n\n美月想要顶替中尾去自首，但是很舍不得昔日的好友，便决定先去见一见哲朗他们，这一次的相见引发了大家的想追寻真想的好奇心，哲朗和理沙子围绕美月杀人以及美月失踪展开了调查然后慢慢接近了真相，原来中尾和美月的背后有着一群因为性别而烦恼的人，他们有些是生来是女儿身但是却有着男儿心，有些事男人的身体却想以女人的身份去生活，想真正以异性的身份去生活户籍是个大问题，中尾和嵯峨就致力于帮助他们过上自己想要的生活而努力。想要保护好友而终止调查的时候却发现事情失去了控制。\n\n若因杀人事件而使这一特殊人群曝光，之前所做的努力就会付之东流，这时已经身怀而哲朗、理沙子还有早田也以自己的方式帮助着他们。\n\n结局的最后是一切尘埃落定，因为中尾的牺牲那个特殊人群得以平静地生活。\n\n\n\n## 想说几句\n\n对于性别的解释，书中用麦比乌斯环来做比喻。“<u>如果是一张普通的纸，那么反面永远是反面，正面永远是正面，两者没有交会的机会。但若换成麦比乌斯环，正面却会在不知不觉间成了反面。正反面紧密相连。这个世界上所有的人都在这麦比乌斯环上，不存在完全的女人，也不存在完全的男人。</u>”\n\n这其中的代表就是日浦美月，美月说自己的内心是个男人，至少在丈夫和外人面前是，但是在中尾交往的时候，和哲朗发生关系的时候，拍成人礼照片的时候透露出来的都是不折不扣的女人，她的父亲、中尾和哲朗都是这样坚信，但是和理沙子在一起的时候，理沙子却说感受到她是以男人方式存在的，最后她和中尾一体同心，她既是中尾也是日浦，十多年的单恋修成正果，是很幸福的事。\n\n后面理沙子和哲朗还是分开了，关于大学最后一场比赛输了，理由是因为哲朗左眼视力不好导致丢球，但是这个原因他从来没有对大家说过，只有中尾和早田知道，甚至是最亲密的伴侣他的妻子理沙子，他也不曾开口，后面理沙子说的“<u>你是不是决定到死也不让我进入你的世界，也就是所谓的男人的世界？那个世界有多夸张？是圣地？女人进入那个世界，对男人来说有那么严重吗？</u>”，太过鲜明地划分男人和女人的世界了。理沙子和哲朗这一对校园恋人走进婚姻八年最终还是分手收场，让我想起最近火热的电影《前任3》，讲的是错过了就回不去了，但我是想为什么在这个错过形成之前不把问题解决了呢，恋人间不是应该多沟通吗，有什么就讲清楚然后再一起去解决，而不是一直等对方开口，最后这样错过。\n\n最后很意外的是早田帮助哲朗他们逃跑，一开始觉得早田很在意他的工作虽不会给他们添麻烦但也不至于帮忙，但是最后的举动让人很意外，原来近端锋不仅要接好传过来的球，为了保护四分位还需要参与防守。\n\n第一次看关于性别探讨的的书籍，类似影视作品也看过，但是第一次对性别有个深刻的认识还是看完《单恋》以后。我想我们不应该为了性别而去烦恼，因为自己有个异性的心就一定要变成异性去生活，就应该像书中的相川冬纪和末永睦美一样，男的女的好的坏的都是自己，应该学会去接受自己。\n\n我就是我，不一样的烟火。","slug":"danlian","published":1,"updated":"2018-08-17T07:35:36.757Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18guy0011oaqod9xjrrge","content":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/danlian.png\" alt=\"单恋人物图\"></p>\n<p>《单恋》主要是围绕一个杀人事件展开调查最后牵出因性别而烦恼的一个特殊人群。</p>\n<h2 id=\"故事梗概\"><a href=\"#故事梗概\" class=\"headerlink\" title=\"故事梗概\"></a>故事梗概</h2><p>中尾功辅、西胁哲朗、高仓理沙子还有日浦美月都是大学时代美式橄榄球队的成员，中尾毕业以后入赘高城家，因为有一个内心是男人的母亲而研究起性别差异并与嵯峨正道创办了金童剧团来为因性别而烦恼的人群解决身份户籍问题。日浦美月患有性别识别障碍，时而是女性时而是男性，顺应父母做一个正常的女孩子而相亲结婚并且生下一个孩子，但是想做男人的愿望特别强烈所以还是离开了家，去寻找自己想要的生活。</p>\n<p>在佐伯香里的介绍下进入了猫眼工作，户仓明雄跟踪佐伯香里，为了保护香里日浦形影不离地保护她，户仓明雄很生气调查到日浦其实是个女人，为了羞辱她进而对她施暴，还好中尾及时赶到施暴未遂，中尾因为愤怒杀死了户仓明雄。</p>\n<p>美月想要顶替中尾去自首，但是很舍不得昔日的好友，便决定先去见一见哲朗他们，这一次的相见引发了大家的想追寻真想的好奇心，哲朗和理沙子围绕美月杀人以及美月失踪展开了调查然后慢慢接近了真相，原来中尾和美月的背后有着一群因为性别而烦恼的人，他们有些是生来是女儿身但是却有着男儿心，有些事男人的身体却想以女人的身份去生活，想真正以异性的身份去生活户籍是个大问题，中尾和嵯峨就致力于帮助他们过上自己想要的生活而努力。想要保护好友而终止调查的时候却发现事情失去了控制。</p>\n<p>若因杀人事件而使这一特殊人群曝光，之前所做的努力就会付之东流，这时已经身怀而哲朗、理沙子还有早田也以自己的方式帮助着他们。</p>\n<p>结局的最后是一切尘埃落定，因为中尾的牺牲那个特殊人群得以平静地生活。</p>\n<h2 id=\"想说几句\"><a href=\"#想说几句\" class=\"headerlink\" title=\"想说几句\"></a>想说几句</h2><p>对于性别的解释，书中用麦比乌斯环来做比喻。“<u>如果是一张普通的纸，那么反面永远是反面，正面永远是正面，两者没有交会的机会。但若换成麦比乌斯环，正面却会在不知不觉间成了反面。正反面紧密相连。这个世界上所有的人都在这麦比乌斯环上，不存在完全的女人，也不存在完全的男人。</u>”</p>\n<p>这其中的代表就是日浦美月，美月说自己的内心是个男人，至少在丈夫和外人面前是，但是在中尾交往的时候，和哲朗发生关系的时候，拍成人礼照片的时候透露出来的都是不折不扣的女人，她的父亲、中尾和哲朗都是这样坚信，但是和理沙子在一起的时候，理沙子却说感受到她是以男人方式存在的，最后她和中尾一体同心，她既是中尾也是日浦，十多年的单恋修成正果，是很幸福的事。</p>\n<p>后面理沙子和哲朗还是分开了，关于大学最后一场比赛输了，理由是因为哲朗左眼视力不好导致丢球，但是这个原因他从来没有对大家说过，只有中尾和早田知道，甚至是最亲密的伴侣他的妻子理沙子，他也不曾开口，后面理沙子说的“<u>你是不是决定到死也不让我进入你的世界，也就是所谓的男人的世界？那个世界有多夸张？是圣地？女人进入那个世界，对男人来说有那么严重吗？</u>”，太过鲜明地划分男人和女人的世界了。理沙子和哲朗这一对校园恋人走进婚姻八年最终还是分手收场，让我想起最近火热的电影《前任3》，讲的是错过了就回不去了，但我是想为什么在这个错过形成之前不把问题解决了呢，恋人间不是应该多沟通吗，有什么就讲清楚然后再一起去解决，而不是一直等对方开口，最后这样错过。</p>\n<p>最后很意外的是早田帮助哲朗他们逃跑，一开始觉得早田很在意他的工作虽不会给他们添麻烦但也不至于帮忙，但是最后的举动让人很意外，原来近端锋不仅要接好传过来的球，为了保护四分位还需要参与防守。</p>\n<p>第一次看关于性别探讨的的书籍，类似影视作品也看过，但是第一次对性别有个深刻的认识还是看完《单恋》以后。我想我们不应该为了性别而去烦恼，因为自己有个异性的心就一定要变成异性去生活，就应该像书中的相川冬纪和末永睦美一样，男的女的好的坏的都是自己，应该学会去接受自己。</p>\n<p>我就是我，不一样的烟火。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/danlian.png\" alt=\"单恋人物图\"></p>\n<p>《单恋》主要是围绕一个杀人事件展开调查最后牵出因性别而烦恼的一个特殊人群。</p>\n<h2 id=\"故事梗概\"><a href=\"#故事梗概\" class=\"headerlink\" title=\"故事梗概\"></a>故事梗概</h2><p>中尾功辅、西胁哲朗、高仓理沙子还有日浦美月都是大学时代美式橄榄球队的成员，中尾毕业以后入赘高城家，因为有一个内心是男人的母亲而研究起性别差异并与嵯峨正道创办了金童剧团来为因性别而烦恼的人群解决身份户籍问题。日浦美月患有性别识别障碍，时而是女性时而是男性，顺应父母做一个正常的女孩子而相亲结婚并且生下一个孩子，但是想做男人的愿望特别强烈所以还是离开了家，去寻找自己想要的生活。</p>\n<p>在佐伯香里的介绍下进入了猫眼工作，户仓明雄跟踪佐伯香里，为了保护香里日浦形影不离地保护她，户仓明雄很生气调查到日浦其实是个女人，为了羞辱她进而对她施暴，还好中尾及时赶到施暴未遂，中尾因为愤怒杀死了户仓明雄。</p>\n<p>美月想要顶替中尾去自首，但是很舍不得昔日的好友，便决定先去见一见哲朗他们，这一次的相见引发了大家的想追寻真想的好奇心，哲朗和理沙子围绕美月杀人以及美月失踪展开了调查然后慢慢接近了真相，原来中尾和美月的背后有着一群因为性别而烦恼的人，他们有些是生来是女儿身但是却有着男儿心，有些事男人的身体却想以女人的身份去生活，想真正以异性的身份去生活户籍是个大问题，中尾和嵯峨就致力于帮助他们过上自己想要的生活而努力。想要保护好友而终止调查的时候却发现事情失去了控制。</p>\n<p>若因杀人事件而使这一特殊人群曝光，之前所做的努力就会付之东流，这时已经身怀而哲朗、理沙子还有早田也以自己的方式帮助着他们。</p>\n<p>结局的最后是一切尘埃落定，因为中尾的牺牲那个特殊人群得以平静地生活。</p>\n<h2 id=\"想说几句\"><a href=\"#想说几句\" class=\"headerlink\" title=\"想说几句\"></a>想说几句</h2><p>对于性别的解释，书中用麦比乌斯环来做比喻。“<u>如果是一张普通的纸，那么反面永远是反面，正面永远是正面，两者没有交会的机会。但若换成麦比乌斯环，正面却会在不知不觉间成了反面。正反面紧密相连。这个世界上所有的人都在这麦比乌斯环上，不存在完全的女人，也不存在完全的男人。</u>”</p>\n<p>这其中的代表就是日浦美月，美月说自己的内心是个男人，至少在丈夫和外人面前是，但是在中尾交往的时候，和哲朗发生关系的时候，拍成人礼照片的时候透露出来的都是不折不扣的女人，她的父亲、中尾和哲朗都是这样坚信，但是和理沙子在一起的时候，理沙子却说感受到她是以男人方式存在的，最后她和中尾一体同心，她既是中尾也是日浦，十多年的单恋修成正果，是很幸福的事。</p>\n<p>后面理沙子和哲朗还是分开了，关于大学最后一场比赛输了，理由是因为哲朗左眼视力不好导致丢球，但是这个原因他从来没有对大家说过，只有中尾和早田知道，甚至是最亲密的伴侣他的妻子理沙子，他也不曾开口，后面理沙子说的“<u>你是不是决定到死也不让我进入你的世界，也就是所谓的男人的世界？那个世界有多夸张？是圣地？女人进入那个世界，对男人来说有那么严重吗？</u>”，太过鲜明地划分男人和女人的世界了。理沙子和哲朗这一对校园恋人走进婚姻八年最终还是分手收场，让我想起最近火热的电影《前任3》，讲的是错过了就回不去了，但我是想为什么在这个错过形成之前不把问题解决了呢，恋人间不是应该多沟通吗，有什么就讲清楚然后再一起去解决，而不是一直等对方开口，最后这样错过。</p>\n<p>最后很意外的是早田帮助哲朗他们逃跑，一开始觉得早田很在意他的工作虽不会给他们添麻烦但也不至于帮忙，但是最后的举动让人很意外，原来近端锋不仅要接好传过来的球，为了保护四分位还需要参与防守。</p>\n<p>第一次看关于性别探讨的的书籍，类似影视作品也看过，但是第一次对性别有个深刻的认识还是看完《单恋》以后。我想我们不应该为了性别而去烦恼，因为自己有个异性的心就一定要变成异性去生活，就应该像书中的相川冬纪和末永睦美一样，男的女的好的坏的都是自己，应该学会去接受自己。</p>\n<p>我就是我，不一样的烟火。</p>\n"},{"title":"饿了么element表单验证插件","date":"2018-01-20T07:24:03.000Z","_content":"\n![插图](http://p1cjg886l.bkt.clouddn.com/ele5.jpg)\n\n\n\n## 背景\n\n为什么又换表单验证插件，记得上一次是[Vuelidate](https://evey-huang.github.io./2017/12/12/vuelidate/)。emm,没错，我们项目重构了，前端组件库从[quasar](http://quasar-framework.org/)换成了[element](http://element.eleme.io/#/zh-CN)，相应的，把表单验证插件也从`vuelidate`换成了element支持的校验规则[async-validator](https://github.com/yiminghe/async-validator)。\n\n## 介绍\n\nelement表单校验规则很简单，只需要通过 `rules` 属性传入约定的验证规则，并把 Form-Item 的 `prop` 属性设置为需校验的字段名即可，官网写得很详细，很容易上手，传送门—>[表单验证](http://element.eleme.io/#/zh-CN/component/form)\n\n内置的校验规则肯定满足不了工作需求，所以`自定义校验`显得尤为重要，这里主要写自定义规则和内置规则如何搭配使用。\n\n## 开始\n\n### HTML\n\n新建一个表单`Form`包含两个`input`，分别为用户名和密码\n\n```html\n<script src=\"//unpkg.com/vue/dist/vue.js\"></script>\n<script src=\"//unpkg.com/element-ui@2.0.11/lib/index.js\"></script>\n<div id=\"app\">\n<el-form :model=\"ruleForm2\" status-icon :rules=\"rules2\" ref=\"ruleForm2\" label-width=\"100px\" class=\"demo-ruleForm\">\n\n  <el-form-item label=\"用户名\" prop=\"username\">\n    <el-input type=\"text\" v-model=\"ruleForm2.username\" auto-complete=\"off\"></el-input>\n  </el-form-item>\n  \n  <el-form-item label=\"密码\" prop=\"pass\">\n    <el-input type=\"password\" v-model=\"ruleForm2.pass\" auto-complete=\"off\"></el-input>\n  </el-form-item>\n\n  <el-form-item>\n    <el-button type=\"primary\" @click=\"submitForm('ruleForm2')\">登录</el-button>\n    <el-button @click=\"resetForm('ruleForm2')\">重置</el-button>\n  </el-form-item>\n</el-form>\n</div>\n```\n\n### JS\n\n用户名校验规则为：\n\n- 必填，不能为空\n- 最长为5个字符（写的数比较小是为了用于测试）\n- 由字母数字下划线还有短横线组成\n\n密码校验规则为：\n\n- 必填，不能为空\n- 最长6个字符（同上）\n- 由字母数字下划线组成\n\n```js\nvar Main = {\n    data() {\n      var validateUser = (rule, value, callback) => {\n        if (value === '') {\n          return callback(new Error('用户名不能为空'));\n        }\n        if (!/^[\\w-]+$/.test(value)) {\n          callback(new Error('用户名由字母、数字及下划线或者短横线组成'))\n        } else {\n          callback()\n        }\n      };\n      var validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入密码'))\n        }\n        if (!/^\\w+$/.test(value)) {\n          callback(new Error('密码由字母、数字及下划线组成'))\n        } else {\n          callback()\n        }\n      };\n      return {\n        ruleForm2: {\n          pass: '',\n          username: ''\n        },\n        rules2: {\n          pass: [\n            { required: true，validator: validatePass, trigger: 'blur' },\n            { max: 6, message: '密码最多为6个字符', trigger: 'blur' }\n            \n          ],\n          username: [\n            { required: true，validator: validateUser, trigger: 'blur' },\n            { max: 5, message: '用户名最多为5个字符', trigger: 'blur' }\n          ]\n        }\n      };\n    },\n    methods: {\n      // 点击登录时触发\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert('submit!');\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n      },\n      // 对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n  }\nvar Ctor = Vue.extend(Main)\nnew Ctor().$mount('#app')\n```\n\n### CSS\n\n因为懒得写`css`所以引的`element-ui`自带css样式\n\n```css\n@import url(\"//unpkg.com/element-ui@2.0.11/lib/theme-chalk/index.css\");\n```\n\n\n\n### 传送门\n\n戳这里[在线运行](https://jsfiddle.net/eveyyyy/3m5zx8ou/4/)代码\n\n\n\n### 效果图\n\n原始样式\n\n![原始样式](http://p1cjg886l.bkt.clouddn.com/ele1.png)\n\n\n\n当input输入框为空时点击登录或者离开输入框都会提示`不能为空`\n\n![不为空](http://p1cjg886l.bkt.clouddn.com/ele2.png)\n\n\n\n当输入字符超过限定时会提示`最多为xxx字符`\n\n![max](http://p1cjg886l.bkt.clouddn.com/ele3.png)\n\n\n\n当出现非法字符串比如\"?\"也会提醒\n\n![非法字符](http://p1cjg886l.bkt.clouddn.com/ele4.png)\n\n\n\n### 小结\n\n总的来说这个验证插件要比`vuelidate`好用，在当前页面就可以完成验证工作，而vuelidate还需要依赖很多文件，要自定义一个校验方法需要改好几个文件。\n\n最后，校验插件好上手，难的是校验规则，要想校验好正则少不了~","source":"_posts/elemeValidate.md","raw":"---\ntitle: 饿了么element表单验证插件\ndate: 2018-01-20 15:24:03\ntags: [element, 表单验证]\ncategories: validate\n---\n\n![插图](http://p1cjg886l.bkt.clouddn.com/ele5.jpg)\n\n\n\n## 背景\n\n为什么又换表单验证插件，记得上一次是[Vuelidate](https://evey-huang.github.io./2017/12/12/vuelidate/)。emm,没错，我们项目重构了，前端组件库从[quasar](http://quasar-framework.org/)换成了[element](http://element.eleme.io/#/zh-CN)，相应的，把表单验证插件也从`vuelidate`换成了element支持的校验规则[async-validator](https://github.com/yiminghe/async-validator)。\n\n## 介绍\n\nelement表单校验规则很简单，只需要通过 `rules` 属性传入约定的验证规则，并把 Form-Item 的 `prop` 属性设置为需校验的字段名即可，官网写得很详细，很容易上手，传送门—>[表单验证](http://element.eleme.io/#/zh-CN/component/form)\n\n内置的校验规则肯定满足不了工作需求，所以`自定义校验`显得尤为重要，这里主要写自定义规则和内置规则如何搭配使用。\n\n## 开始\n\n### HTML\n\n新建一个表单`Form`包含两个`input`，分别为用户名和密码\n\n```html\n<script src=\"//unpkg.com/vue/dist/vue.js\"></script>\n<script src=\"//unpkg.com/element-ui@2.0.11/lib/index.js\"></script>\n<div id=\"app\">\n<el-form :model=\"ruleForm2\" status-icon :rules=\"rules2\" ref=\"ruleForm2\" label-width=\"100px\" class=\"demo-ruleForm\">\n\n  <el-form-item label=\"用户名\" prop=\"username\">\n    <el-input type=\"text\" v-model=\"ruleForm2.username\" auto-complete=\"off\"></el-input>\n  </el-form-item>\n  \n  <el-form-item label=\"密码\" prop=\"pass\">\n    <el-input type=\"password\" v-model=\"ruleForm2.pass\" auto-complete=\"off\"></el-input>\n  </el-form-item>\n\n  <el-form-item>\n    <el-button type=\"primary\" @click=\"submitForm('ruleForm2')\">登录</el-button>\n    <el-button @click=\"resetForm('ruleForm2')\">重置</el-button>\n  </el-form-item>\n</el-form>\n</div>\n```\n\n### JS\n\n用户名校验规则为：\n\n- 必填，不能为空\n- 最长为5个字符（写的数比较小是为了用于测试）\n- 由字母数字下划线还有短横线组成\n\n密码校验规则为：\n\n- 必填，不能为空\n- 最长6个字符（同上）\n- 由字母数字下划线组成\n\n```js\nvar Main = {\n    data() {\n      var validateUser = (rule, value, callback) => {\n        if (value === '') {\n          return callback(new Error('用户名不能为空'));\n        }\n        if (!/^[\\w-]+$/.test(value)) {\n          callback(new Error('用户名由字母、数字及下划线或者短横线组成'))\n        } else {\n          callback()\n        }\n      };\n      var validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入密码'))\n        }\n        if (!/^\\w+$/.test(value)) {\n          callback(new Error('密码由字母、数字及下划线组成'))\n        } else {\n          callback()\n        }\n      };\n      return {\n        ruleForm2: {\n          pass: '',\n          username: ''\n        },\n        rules2: {\n          pass: [\n            { required: true，validator: validatePass, trigger: 'blur' },\n            { max: 6, message: '密码最多为6个字符', trigger: 'blur' }\n            \n          ],\n          username: [\n            { required: true，validator: validateUser, trigger: 'blur' },\n            { max: 5, message: '用户名最多为5个字符', trigger: 'blur' }\n          ]\n        }\n      };\n    },\n    methods: {\n      // 点击登录时触发\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert('submit!');\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n      },\n      // 对整个表单进行重置，将所有字段值重置为初始值并移除校验结果\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n  }\nvar Ctor = Vue.extend(Main)\nnew Ctor().$mount('#app')\n```\n\n### CSS\n\n因为懒得写`css`所以引的`element-ui`自带css样式\n\n```css\n@import url(\"//unpkg.com/element-ui@2.0.11/lib/theme-chalk/index.css\");\n```\n\n\n\n### 传送门\n\n戳这里[在线运行](https://jsfiddle.net/eveyyyy/3m5zx8ou/4/)代码\n\n\n\n### 效果图\n\n原始样式\n\n![原始样式](http://p1cjg886l.bkt.clouddn.com/ele1.png)\n\n\n\n当input输入框为空时点击登录或者离开输入框都会提示`不能为空`\n\n![不为空](http://p1cjg886l.bkt.clouddn.com/ele2.png)\n\n\n\n当输入字符超过限定时会提示`最多为xxx字符`\n\n![max](http://p1cjg886l.bkt.clouddn.com/ele3.png)\n\n\n\n当出现非法字符串比如\"?\"也会提醒\n\n![非法字符](http://p1cjg886l.bkt.clouddn.com/ele4.png)\n\n\n\n### 小结\n\n总的来说这个验证插件要比`vuelidate`好用，在当前页面就可以完成验证工作，而vuelidate还需要依赖很多文件，要自定义一个校验方法需要改好几个文件。\n\n最后，校验插件好上手，难的是校验规则，要想校验好正则少不了~","slug":"elemeValidate","published":1,"updated":"2018-08-17T07:35:36.758Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18guz0013oaqo71zrzd00","content":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/ele5.jpg\" alt=\"插图\"></p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>为什么又换表单验证插件，记得上一次是<a href=\"https://evey-huang.github.io./2017/12/12/vuelidate/\" target=\"_blank\" rel=\"noopener\">Vuelidate</a>。emm,没错，我们项目重构了，前端组件库从<a href=\"http://quasar-framework.org/\" target=\"_blank\" rel=\"noopener\">quasar</a>换成了<a href=\"http://element.eleme.io/#/zh-CN\" target=\"_blank\" rel=\"noopener\">element</a>，相应的，把表单验证插件也从<code>vuelidate</code>换成了element支持的校验规则<a href=\"https://github.com/yiminghe/async-validator\" target=\"_blank\" rel=\"noopener\">async-validator</a>。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>element表单校验规则很简单，只需要通过 <code>rules</code> 属性传入约定的验证规则，并把 Form-Item 的 <code>prop</code> 属性设置为需校验的字段名即可，官网写得很详细，很容易上手，传送门—&gt;<a href=\"http://element.eleme.io/#/zh-CN/component/form\" target=\"_blank\" rel=\"noopener\">表单验证</a></p>\n<p>内置的校验规则肯定满足不了工作需求，所以<code>自定义校验</code>显得尤为重要，这里主要写自定义规则和内置规则如何搭配使用。</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>新建一个表单<code>Form</code>包含两个<code>input</code>，分别为用户名和密码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//unpkg.com/vue/dist/vue.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//unpkg.com/element-ui@2.0.11/lib/index.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:model</span>=<span class=\"string\">\"ruleForm2\"</span> <span class=\"attr\">status-icon</span> <span class=\"attr\">:rules</span>=<span class=\"string\">\"rules2\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"ruleForm2\"</span> <span class=\"attr\">label-width</span>=<span class=\"string\">\"100px\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo-ruleForm\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">\"用户名\"</span> <span class=\"attr\">prop</span>=<span class=\"string\">\"username\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"ruleForm2.username\"</span> <span class=\"attr\">auto-complete</span>=<span class=\"string\">\"off\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">\"密码\"</span> <span class=\"attr\">prop</span>=<span class=\"string\">\"pass\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"ruleForm2.pass\"</span> <span class=\"attr\">auto-complete</span>=<span class=\"string\">\"off\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"primary\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"submitForm('ruleForm2')\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"resetForm('ruleForm2')\"</span>&gt;</span>重置<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h3><p>用户名校验规则为：</p>\n<ul>\n<li>必填，不能为空</li>\n<li>最长为5个字符（写的数比较小是为了用于测试）</li>\n<li>由字母数字下划线还有短横线组成</li>\n</ul>\n<p>密码校验规则为：</p>\n<ul>\n<li>必填，不能为空</li>\n<li>最长6个字符（同上）</li>\n<li>由字母数字下划线组成</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Main = &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> validateUser = <span class=\"function\">(<span class=\"params\">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'用户名不能为空'</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"regexp\">/^[\\w-]+$/</span>.test(value)) &#123;</span><br><span class=\"line\">          callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'用户名由字母、数字及下划线或者短横线组成'</span>))</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          callback()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> validatePass = <span class=\"function\">(<span class=\"params\">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">          callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'请输入密码'</span>))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"regexp\">/^\\w+$/</span>.test(value)) &#123;</span><br><span class=\"line\">          callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'密码由字母、数字及下划线组成'</span>))</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          callback()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ruleForm2: &#123;</span><br><span class=\"line\">          pass: <span class=\"string\">''</span>,</span><br><span class=\"line\">          username: <span class=\"string\">''</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        rules2: &#123;</span><br><span class=\"line\">          pass: [</span><br><span class=\"line\">            &#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>，validator: validatePass, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">max</span>: <span class=\"number\">6</span>, <span class=\"attr\">message</span>: <span class=\"string\">'密码最多为6个字符'</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">          ],</span><br><span class=\"line\">          username: [</span><br><span class=\"line\">            &#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>，validator: validateUser, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">max</span>: <span class=\"number\">5</span>, <span class=\"attr\">message</span>: <span class=\"string\">'用户名最多为5个字符'</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 点击登录时触发</span></span><br><span class=\"line\">      submitForm(formName) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$refs[formName].validate(<span class=\"function\">(<span class=\"params\">valid</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">            alert(<span class=\"string\">'submit!'</span>);</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'error submit!!'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 对整个表单进行重置，将所有字段值重置为初始值并移除校验结果</span></span><br><span class=\"line\">      resetForm(formName) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$refs[formName].resetFields();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> Ctor = Vue.extend(Main)</span><br><span class=\"line\"><span class=\"keyword\">new</span> Ctor().$mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><p>因为懒得写<code>css</code>所以引的<code>element-ui</code>自带css样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">import</span> url(<span class=\"string\">\"//unpkg.com/element-ui@2.0.11/lib/theme-chalk/index.css\"</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"传送门\"><a href=\"#传送门\" class=\"headerlink\" title=\"传送门\"></a>传送门</h3><p>戳这里<a href=\"https://jsfiddle.net/eveyyyy/3m5zx8ou/4/\" target=\"_blank\" rel=\"noopener\">在线运行</a>代码</p>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>原始样式</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/ele1.png\" alt=\"原始样式\"></p>\n<p>当input输入框为空时点击登录或者离开输入框都会提示<code>不能为空</code></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/ele2.png\" alt=\"不为空\"></p>\n<p>当输入字符超过限定时会提示<code>最多为xxx字符</code></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/ele3.png\" alt=\"max\"></p>\n<p>当出现非法字符串比如”?”也会提醒</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/ele4.png\" alt=\"非法字符\"></p>\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>总的来说这个验证插件要比<code>vuelidate</code>好用，在当前页面就可以完成验证工作，而vuelidate还需要依赖很多文件，要自定义一个校验方法需要改好几个文件。</p>\n<p>最后，校验插件好上手，难的是校验规则，要想校验好正则少不了~</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/ele5.jpg\" alt=\"插图\"></p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>为什么又换表单验证插件，记得上一次是<a href=\"https://evey-huang.github.io./2017/12/12/vuelidate/\" target=\"_blank\" rel=\"noopener\">Vuelidate</a>。emm,没错，我们项目重构了，前端组件库从<a href=\"http://quasar-framework.org/\" target=\"_blank\" rel=\"noopener\">quasar</a>换成了<a href=\"http://element.eleme.io/#/zh-CN\" target=\"_blank\" rel=\"noopener\">element</a>，相应的，把表单验证插件也从<code>vuelidate</code>换成了element支持的校验规则<a href=\"https://github.com/yiminghe/async-validator\" target=\"_blank\" rel=\"noopener\">async-validator</a>。</p>\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>element表单校验规则很简单，只需要通过 <code>rules</code> 属性传入约定的验证规则，并把 Form-Item 的 <code>prop</code> 属性设置为需校验的字段名即可，官网写得很详细，很容易上手，传送门—&gt;<a href=\"http://element.eleme.io/#/zh-CN/component/form\" target=\"_blank\" rel=\"noopener\">表单验证</a></p>\n<p>内置的校验规则肯定满足不了工作需求，所以<code>自定义校验</code>显得尤为重要，这里主要写自定义规则和内置规则如何搭配使用。</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3><p>新建一个表单<code>Form</code>包含两个<code>input</code>，分别为用户名和密码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//unpkg.com/vue/dist/vue.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//unpkg.com/element-ui@2.0.11/lib/index.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">el-form</span> <span class=\"attr\">:model</span>=<span class=\"string\">\"ruleForm2\"</span> <span class=\"attr\">status-icon</span> <span class=\"attr\">:rules</span>=<span class=\"string\">\"rules2\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"ruleForm2\"</span> <span class=\"attr\">label-width</span>=<span class=\"string\">\"100px\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo-ruleForm\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">\"用户名\"</span> <span class=\"attr\">prop</span>=<span class=\"string\">\"username\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"ruleForm2.username\"</span> <span class=\"attr\">auto-complete</span>=<span class=\"string\">\"off\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span> <span class=\"attr\">label</span>=<span class=\"string\">\"密码\"</span> <span class=\"attr\">prop</span>=<span class=\"string\">\"pass\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"ruleForm2.pass\"</span> <span class=\"attr\">auto-complete</span>=<span class=\"string\">\"off\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">el-input</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"primary\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"submitForm('ruleForm2')\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">el-button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"resetForm('ruleForm2')\"</span>&gt;</span>重置<span class=\"tag\">&lt;/<span class=\"name\">el-button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">el-form-item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">el-form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h3><p>用户名校验规则为：</p>\n<ul>\n<li>必填，不能为空</li>\n<li>最长为5个字符（写的数比较小是为了用于测试）</li>\n<li>由字母数字下划线还有短横线组成</li>\n</ul>\n<p>密码校验规则为：</p>\n<ul>\n<li>必填，不能为空</li>\n<li>最长6个字符（同上）</li>\n<li>由字母数字下划线组成</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Main = &#123;</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> validateUser = <span class=\"function\">(<span class=\"params\">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'用户名不能为空'</span>));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"regexp\">/^[\\w-]+$/</span>.test(value)) &#123;</span><br><span class=\"line\">          callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'用户名由字母、数字及下划线或者短横线组成'</span>))</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          callback()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> validatePass = <span class=\"function\">(<span class=\"params\">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value === <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">          callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'请输入密码'</span>))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"regexp\">/^\\w+$/</span>.test(value)) &#123;</span><br><span class=\"line\">          callback(<span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">'密码由字母、数字及下划线组成'</span>))</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          callback()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        ruleForm2: &#123;</span><br><span class=\"line\">          pass: <span class=\"string\">''</span>,</span><br><span class=\"line\">          username: <span class=\"string\">''</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        rules2: &#123;</span><br><span class=\"line\">          pass: [</span><br><span class=\"line\">            &#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>，validator: validatePass, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">max</span>: <span class=\"number\">6</span>, <span class=\"attr\">message</span>: <span class=\"string\">'密码最多为6个字符'</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">          ],</span><br><span class=\"line\">          username: [</span><br><span class=\"line\">            &#123; <span class=\"attr\">required</span>: <span class=\"literal\">true</span>，validator: validateUser, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;,</span><br><span class=\"line\">            &#123; <span class=\"attr\">max</span>: <span class=\"number\">5</span>, <span class=\"attr\">message</span>: <span class=\"string\">'用户名最多为5个字符'</span>, <span class=\"attr\">trigger</span>: <span class=\"string\">'blur'</span> &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 点击登录时触发</span></span><br><span class=\"line\">      submitForm(formName) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$refs[formName].validate(<span class=\"function\">(<span class=\"params\">valid</span>) =&gt;</span> &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (valid) &#123;</span><br><span class=\"line\">            alert(<span class=\"string\">'submit!'</span>);</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">'error submit!!'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 对整个表单进行重置，将所有字段值重置为初始值并移除校验结果</span></span><br><span class=\"line\">      resetForm(formName) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$refs[formName].resetFields();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> Ctor = Vue.extend(Main)</span><br><span class=\"line\"><span class=\"keyword\">new</span> Ctor().$mount(<span class=\"string\">'#app'</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3><p>因为懒得写<code>css</code>所以引的<code>element-ui</code>自带css样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">import</span> url(<span class=\"string\">\"//unpkg.com/element-ui@2.0.11/lib/theme-chalk/index.css\"</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"传送门\"><a href=\"#传送门\" class=\"headerlink\" title=\"传送门\"></a>传送门</h3><p>戳这里<a href=\"https://jsfiddle.net/eveyyyy/3m5zx8ou/4/\" target=\"_blank\" rel=\"noopener\">在线运行</a>代码</p>\n<h3 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h3><p>原始样式</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/ele1.png\" alt=\"原始样式\"></p>\n<p>当input输入框为空时点击登录或者离开输入框都会提示<code>不能为空</code></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/ele2.png\" alt=\"不为空\"></p>\n<p>当输入字符超过限定时会提示<code>最多为xxx字符</code></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/ele3.png\" alt=\"max\"></p>\n<p>当出现非法字符串比如”?”也会提醒</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/ele4.png\" alt=\"非法字符\"></p>\n<h3 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h3><p>总的来说这个验证插件要比<code>vuelidate</code>好用，在当前页面就可以完成验证工作，而vuelidate还需要依赖很多文件，要自定义一个校验方法需要改好几个文件。</p>\n<p>最后，校验插件好上手，难的是校验规则，要想校验好正则少不了~</p>\n"},{"title":"《恶意》读后感","date":"2017-12-25T08:29:43.000Z","_content":"\n![恶意封面](http://p1cjg886l.bkt.clouddn.com/eyi.jpg)\n\n\n\n“也没有什么特别的原因，就是看他不爽！”\n\n《恶意》中的野野口修，只是出于根本说不清道不明、不知从何而起却无法终止的恶意，精心设计了一场谋杀。更让人可怕的，不是他所杀害的是一直帮助自己的好朋友日高邦彦，而是他穷尽最后的岁月也要玷污日高的整个人生。甚至，杀害他都只不过是一个开始步骤。\n\n日高和野野口从小学就是形影不离，直到高中开始疏远，当他们再次相遇时日高已经是一个小有成就的作家而野野口仍然籍籍无名，虽一心想成为作家但这条路走的并不顺畅。在日高的帮助下，野野口修成为了一位专门写儿童读物的作家。\n\n但是野野口却杀了如恩人一般的日高，作案动机不明。\n\n野野口把日高塑造成一个伪善的变态的形象。他将野野口的作品占为己有还借此成为畅销书作家，他还拍下野野口想要刺杀自己的录像，收藏好留有野野口指纹的凶器，野野口与日高的前妻初美产生了一个暧昧的关系，这一切都成为日高要挟野野口成为日高的影子作家的条件。\n\n加之身患绝症时日不多，野野口成为了让人同情的杀手，觉得日高的死是咎由自取。但是在加贺警官的坚持不懈下，真相一点一点地浮出水面。\n\n这一切都是阴谋，没有婚外情，没有代笔，没有威胁。这只是野野口精心策划的阴谋，这样的费尽心思，昭示着结束日高的生命只是一个开始，野野口真正想要的是谋杀他的一生。拍好录像带，藏好刀具，收好初美的照片，抄好日高写过的每一本书，他用了整整一年的时间，以一个创作者的想象力和营造力，缓慢而又孜孜不倦地进行着剧情的设计和完善。他甚至提前毒死了日高隔壁邻居的猫，只为了让大家相信，日高本就是一个视生命如草芥，残忍暴戾的人。\n\n日高已经死去，但这却无法消磨野野口在黑暗肆虐生长的恶意。\n\n“即使赌上自己所剩无几的人生，也要贬低对方的人格，这是怎样一种心态啊？”\n\n看似很难理解，但是联系起校园暴力好像又能理解了。记得看过一期《今日说法》一群问题少年少女肆意地对弱小的同龄人施暴，问及为什么要这么做的时候他们的回答大同小异“没什么，就是看他们不爽啊”。看似很任性的话却让人毛骨悚然不寒而栗。\n\n但从人物关系看日高简直是野野口的救世主。他们住在一个街区，上了同一所小学和初中，野野口因为校园暴力不想上学，是日高天天找他结伴去上学。日高为人谦和乐于助人而且有正义感敢于直面校园暴力而野野口胆小、内向，为了逃避被暴力主动去做了恶人的跟班还参与欺负日高的行动。即便如此日高在成为畅销书作家后仍然想着提携野野口，甚至在得到野野口参与校园暴力的证据后还帮助他隐瞒事实。可惜，恨意却早已深植，圣经说，人生下来就带有原罪，即七宗罪，“嫉妒”就是之一。大概野野口的作案动机来自嫉妒吧。\n\n为什么日高能成为畅销书作家而不是我？\n\n为什么他握着关系我名誉的证据？\n\n为什么。。\n\n不甘与嫉妒让他的心理最终变得畸形，恨意疯狂地生长就像野野口体内的癌细胞一样，最终让他失去了自己。\n\n无法想象说不清道不明的恶意可以这么可怕。其实，生活中的我们可能更甚于此。毫无来由地讨厌一个热，也许仅仅是一句话一个动作甚至是气味又或许他什么也没有做但就是讨厌他。上天从来没有赋予我们判断一个人的权利，上天也没有给予我们任何优于其他人的特质。虽然我们总是在标榜着人人平等，可是现实中我们却没有做到，我们冷漠的眼神，小小掩鼻的动作，不经意的话，无不透露着内心微小的恶意。\n\n\n\n\n\n愿这种无来由的恶意越来越少。\n\n\n\n","source":"_posts/eyi.md","raw":"---\ntitle: 《恶意》读后感\ndate: 2017-12-25 16:29:43\ntags: [东野圭吾, 恶意]\ncategories: 读书\n---\n\n![恶意封面](http://p1cjg886l.bkt.clouddn.com/eyi.jpg)\n\n\n\n“也没有什么特别的原因，就是看他不爽！”\n\n《恶意》中的野野口修，只是出于根本说不清道不明、不知从何而起却无法终止的恶意，精心设计了一场谋杀。更让人可怕的，不是他所杀害的是一直帮助自己的好朋友日高邦彦，而是他穷尽最后的岁月也要玷污日高的整个人生。甚至，杀害他都只不过是一个开始步骤。\n\n日高和野野口从小学就是形影不离，直到高中开始疏远，当他们再次相遇时日高已经是一个小有成就的作家而野野口仍然籍籍无名，虽一心想成为作家但这条路走的并不顺畅。在日高的帮助下，野野口修成为了一位专门写儿童读物的作家。\n\n但是野野口却杀了如恩人一般的日高，作案动机不明。\n\n野野口把日高塑造成一个伪善的变态的形象。他将野野口的作品占为己有还借此成为畅销书作家，他还拍下野野口想要刺杀自己的录像，收藏好留有野野口指纹的凶器，野野口与日高的前妻初美产生了一个暧昧的关系，这一切都成为日高要挟野野口成为日高的影子作家的条件。\n\n加之身患绝症时日不多，野野口成为了让人同情的杀手，觉得日高的死是咎由自取。但是在加贺警官的坚持不懈下，真相一点一点地浮出水面。\n\n这一切都是阴谋，没有婚外情，没有代笔，没有威胁。这只是野野口精心策划的阴谋，这样的费尽心思，昭示着结束日高的生命只是一个开始，野野口真正想要的是谋杀他的一生。拍好录像带，藏好刀具，收好初美的照片，抄好日高写过的每一本书，他用了整整一年的时间，以一个创作者的想象力和营造力，缓慢而又孜孜不倦地进行着剧情的设计和完善。他甚至提前毒死了日高隔壁邻居的猫，只为了让大家相信，日高本就是一个视生命如草芥，残忍暴戾的人。\n\n日高已经死去，但这却无法消磨野野口在黑暗肆虐生长的恶意。\n\n“即使赌上自己所剩无几的人生，也要贬低对方的人格，这是怎样一种心态啊？”\n\n看似很难理解，但是联系起校园暴力好像又能理解了。记得看过一期《今日说法》一群问题少年少女肆意地对弱小的同龄人施暴，问及为什么要这么做的时候他们的回答大同小异“没什么，就是看他们不爽啊”。看似很任性的话却让人毛骨悚然不寒而栗。\n\n但从人物关系看日高简直是野野口的救世主。他们住在一个街区，上了同一所小学和初中，野野口因为校园暴力不想上学，是日高天天找他结伴去上学。日高为人谦和乐于助人而且有正义感敢于直面校园暴力而野野口胆小、内向，为了逃避被暴力主动去做了恶人的跟班还参与欺负日高的行动。即便如此日高在成为畅销书作家后仍然想着提携野野口，甚至在得到野野口参与校园暴力的证据后还帮助他隐瞒事实。可惜，恨意却早已深植，圣经说，人生下来就带有原罪，即七宗罪，“嫉妒”就是之一。大概野野口的作案动机来自嫉妒吧。\n\n为什么日高能成为畅销书作家而不是我？\n\n为什么他握着关系我名誉的证据？\n\n为什么。。\n\n不甘与嫉妒让他的心理最终变得畸形，恨意疯狂地生长就像野野口体内的癌细胞一样，最终让他失去了自己。\n\n无法想象说不清道不明的恶意可以这么可怕。其实，生活中的我们可能更甚于此。毫无来由地讨厌一个热，也许仅仅是一句话一个动作甚至是气味又或许他什么也没有做但就是讨厌他。上天从来没有赋予我们判断一个人的权利，上天也没有给予我们任何优于其他人的特质。虽然我们总是在标榜着人人平等，可是现实中我们却没有做到，我们冷漠的眼神，小小掩鼻的动作，不经意的话，无不透露着内心微小的恶意。\n\n\n\n\n\n愿这种无来由的恶意越来越少。\n\n\n\n","slug":"eyi","published":1,"updated":"2018-08-17T07:35:36.759Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gv00015oaqolns1ae4s","content":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/eyi.jpg\" alt=\"恶意封面\"></p>\n<p>“也没有什么特别的原因，就是看他不爽！”</p>\n<p>《恶意》中的野野口修，只是出于根本说不清道不明、不知从何而起却无法终止的恶意，精心设计了一场谋杀。更让人可怕的，不是他所杀害的是一直帮助自己的好朋友日高邦彦，而是他穷尽最后的岁月也要玷污日高的整个人生。甚至，杀害他都只不过是一个开始步骤。</p>\n<p>日高和野野口从小学就是形影不离，直到高中开始疏远，当他们再次相遇时日高已经是一个小有成就的作家而野野口仍然籍籍无名，虽一心想成为作家但这条路走的并不顺畅。在日高的帮助下，野野口修成为了一位专门写儿童读物的作家。</p>\n<p>但是野野口却杀了如恩人一般的日高，作案动机不明。</p>\n<p>野野口把日高塑造成一个伪善的变态的形象。他将野野口的作品占为己有还借此成为畅销书作家，他还拍下野野口想要刺杀自己的录像，收藏好留有野野口指纹的凶器，野野口与日高的前妻初美产生了一个暧昧的关系，这一切都成为日高要挟野野口成为日高的影子作家的条件。</p>\n<p>加之身患绝症时日不多，野野口成为了让人同情的杀手，觉得日高的死是咎由自取。但是在加贺警官的坚持不懈下，真相一点一点地浮出水面。</p>\n<p>这一切都是阴谋，没有婚外情，没有代笔，没有威胁。这只是野野口精心策划的阴谋，这样的费尽心思，昭示着结束日高的生命只是一个开始，野野口真正想要的是谋杀他的一生。拍好录像带，藏好刀具，收好初美的照片，抄好日高写过的每一本书，他用了整整一年的时间，以一个创作者的想象力和营造力，缓慢而又孜孜不倦地进行着剧情的设计和完善。他甚至提前毒死了日高隔壁邻居的猫，只为了让大家相信，日高本就是一个视生命如草芥，残忍暴戾的人。</p>\n<p>日高已经死去，但这却无法消磨野野口在黑暗肆虐生长的恶意。</p>\n<p>“即使赌上自己所剩无几的人生，也要贬低对方的人格，这是怎样一种心态啊？”</p>\n<p>看似很难理解，但是联系起校园暴力好像又能理解了。记得看过一期《今日说法》一群问题少年少女肆意地对弱小的同龄人施暴，问及为什么要这么做的时候他们的回答大同小异“没什么，就是看他们不爽啊”。看似很任性的话却让人毛骨悚然不寒而栗。</p>\n<p>但从人物关系看日高简直是野野口的救世主。他们住在一个街区，上了同一所小学和初中，野野口因为校园暴力不想上学，是日高天天找他结伴去上学。日高为人谦和乐于助人而且有正义感敢于直面校园暴力而野野口胆小、内向，为了逃避被暴力主动去做了恶人的跟班还参与欺负日高的行动。即便如此日高在成为畅销书作家后仍然想着提携野野口，甚至在得到野野口参与校园暴力的证据后还帮助他隐瞒事实。可惜，恨意却早已深植，圣经说，人生下来就带有原罪，即七宗罪，“嫉妒”就是之一。大概野野口的作案动机来自嫉妒吧。</p>\n<p>为什么日高能成为畅销书作家而不是我？</p>\n<p>为什么他握着关系我名誉的证据？</p>\n<p>为什么。。</p>\n<p>不甘与嫉妒让他的心理最终变得畸形，恨意疯狂地生长就像野野口体内的癌细胞一样，最终让他失去了自己。</p>\n<p>无法想象说不清道不明的恶意可以这么可怕。其实，生活中的我们可能更甚于此。毫无来由地讨厌一个热，也许仅仅是一句话一个动作甚至是气味又或许他什么也没有做但就是讨厌他。上天从来没有赋予我们判断一个人的权利，上天也没有给予我们任何优于其他人的特质。虽然我们总是在标榜着人人平等，可是现实中我们却没有做到，我们冷漠的眼神，小小掩鼻的动作，不经意的话，无不透露着内心微小的恶意。</p>\n<p>愿这种无来由的恶意越来越少。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/eyi.jpg\" alt=\"恶意封面\"></p>\n<p>“也没有什么特别的原因，就是看他不爽！”</p>\n<p>《恶意》中的野野口修，只是出于根本说不清道不明、不知从何而起却无法终止的恶意，精心设计了一场谋杀。更让人可怕的，不是他所杀害的是一直帮助自己的好朋友日高邦彦，而是他穷尽最后的岁月也要玷污日高的整个人生。甚至，杀害他都只不过是一个开始步骤。</p>\n<p>日高和野野口从小学就是形影不离，直到高中开始疏远，当他们再次相遇时日高已经是一个小有成就的作家而野野口仍然籍籍无名，虽一心想成为作家但这条路走的并不顺畅。在日高的帮助下，野野口修成为了一位专门写儿童读物的作家。</p>\n<p>但是野野口却杀了如恩人一般的日高，作案动机不明。</p>\n<p>野野口把日高塑造成一个伪善的变态的形象。他将野野口的作品占为己有还借此成为畅销书作家，他还拍下野野口想要刺杀自己的录像，收藏好留有野野口指纹的凶器，野野口与日高的前妻初美产生了一个暧昧的关系，这一切都成为日高要挟野野口成为日高的影子作家的条件。</p>\n<p>加之身患绝症时日不多，野野口成为了让人同情的杀手，觉得日高的死是咎由自取。但是在加贺警官的坚持不懈下，真相一点一点地浮出水面。</p>\n<p>这一切都是阴谋，没有婚外情，没有代笔，没有威胁。这只是野野口精心策划的阴谋，这样的费尽心思，昭示着结束日高的生命只是一个开始，野野口真正想要的是谋杀他的一生。拍好录像带，藏好刀具，收好初美的照片，抄好日高写过的每一本书，他用了整整一年的时间，以一个创作者的想象力和营造力，缓慢而又孜孜不倦地进行着剧情的设计和完善。他甚至提前毒死了日高隔壁邻居的猫，只为了让大家相信，日高本就是一个视生命如草芥，残忍暴戾的人。</p>\n<p>日高已经死去，但这却无法消磨野野口在黑暗肆虐生长的恶意。</p>\n<p>“即使赌上自己所剩无几的人生，也要贬低对方的人格，这是怎样一种心态啊？”</p>\n<p>看似很难理解，但是联系起校园暴力好像又能理解了。记得看过一期《今日说法》一群问题少年少女肆意地对弱小的同龄人施暴，问及为什么要这么做的时候他们的回答大同小异“没什么，就是看他们不爽啊”。看似很任性的话却让人毛骨悚然不寒而栗。</p>\n<p>但从人物关系看日高简直是野野口的救世主。他们住在一个街区，上了同一所小学和初中，野野口因为校园暴力不想上学，是日高天天找他结伴去上学。日高为人谦和乐于助人而且有正义感敢于直面校园暴力而野野口胆小、内向，为了逃避被暴力主动去做了恶人的跟班还参与欺负日高的行动。即便如此日高在成为畅销书作家后仍然想着提携野野口，甚至在得到野野口参与校园暴力的证据后还帮助他隐瞒事实。可惜，恨意却早已深植，圣经说，人生下来就带有原罪，即七宗罪，“嫉妒”就是之一。大概野野口的作案动机来自嫉妒吧。</p>\n<p>为什么日高能成为畅销书作家而不是我？</p>\n<p>为什么他握着关系我名誉的证据？</p>\n<p>为什么。。</p>\n<p>不甘与嫉妒让他的心理最终变得畸形，恨意疯狂地生长就像野野口体内的癌细胞一样，最终让他失去了自己。</p>\n<p>无法想象说不清道不明的恶意可以这么可怕。其实，生活中的我们可能更甚于此。毫无来由地讨厌一个热，也许仅仅是一句话一个动作甚至是气味又或许他什么也没有做但就是讨厌他。上天从来没有赋予我们判断一个人的权利，上天也没有给予我们任何优于其他人的特质。虽然我们总是在标榜着人人平等，可是现实中我们却没有做到，我们冷漠的眼神，小小掩鼻的动作，不经意的话，无不透露着内心微小的恶意。</p>\n<p>愿这种无来由的恶意越来越少。</p>\n"},{"title":"动画封装之字体动画","date":"2018-04-25T05:08:10.000Z","_content":"\n### 背景\n\n早上看到这个动画觉得好奇妙，然后官网又需要做优化，于是想想能不能封装起来用到官网乃至以后的项目中去。\n\n![](http://p1cjg886l.bkt.clouddn.com/animation1.gif)\n\n### 难点所在\n\n一般来讲hover就是从哪里来，回哪里去，比如：\n\n![](http://p1cjg886l.bkt.clouddn.com/animation2.gif)\n\n现在的难点在于如何在hover离开的时候改变动画行进的方向。\n\nhover动画可以分解为三个部分：\n\n- hover进入状态\n- hover停留状态\n- hover离开状态\n\n一般来说hover transition动画只有两种状态即正常状态和hover状态：正常状态->hover状态->正常状态\n\n>div {\n>\n>…….\n>\n>}\n>\n>div:hover {\n>\n>…..\n>\n>}\n\n**所以，必须要有一种方法能够使得hover动画进入与离开的状态产生两种不同的效果，实现：状态1->hover状态->状态2**\n\n\n\n### 解决关键\n\n实现本文开头的动画的关键点在于**使得hover动画的进入与离开产生不一样的效果**。使用`transform:scale()`和`transform-origin`可以实现这个效果。\n\n#### transform:scale()实现线条运动\n\ntransform:scale()通俗来说是用于缩放，用官方的话说就是：\n\n>CSS 函数 `scale()` 用于修改元素的大小。可以通过向量形式定义的缩放值来放大或缩小元素，同时可以在不同的方向设置不同的缩放值。\n\n我们这里使用`transform: scaleX(0) `与 `transform: scaleX(1)`来改变线条的显示与隐藏。\n\n\n\n#### transform-origin实现线条运动方向\n\n官方解释：\n\n>`transform-origin`属性可以使用一个，两个或三个值来指定，其中每个值都表示一个偏移量。 没有明确定义的偏移将重置为其对应的[初始值](https://developer.mozilla.org/zh-CN/docs/Web/CSS/initial_value)。\n>\n>如果定义了两个或更多值并且没有值的关键字，或者唯一使用的关键字是`center`，则第一个值表示水平偏移量，第二个值表示垂直偏移量。\n\n我们给线条设置一个默认的transform-origin 记为状态1，hover时设置另一个不同的transform-origin 记为状态2，所以当我们hover时，会读取状态2的transform-origin，从原点放大至scaleX(1)，hover离开的时候读取状态1的transform-origin，从scaleX(1)状态缩小至该原点。\n\n\n\n### 动画封装\n\n**HTML**\n\n```html\n<div class=\"a\">Hover Me</div>\n```\n\n**CSS(SCSS)**\n\n```css\n@mixin font-animation($color: #666, $border-color: #999) {\n    position: relative;\n    display: inline-block;\n    cursor: pointer;\n    color: rgba($color, .7);\n    transition: all .5s;\n    &::before {\n      content: \"\";\n      position: absolute;\n      left: -5%;\n      bottom: 0;\n      width: 110%;\n      transform: scaleX(0);\n      height: 2px;\n      background: $border-color;\n      z-index: -1;\n      transition: transform .5s;\n      transform-origin: 100% 0;\n    }\n    &:hover {\n      margin-left: .5em;\n      color: $color;\n      &::before {\n        transform: scaleX(1);\n        transform-origin: 0 0;\n      }\n  }\n}\n.a {\n    @include font-animation\n}\n```\n\n### 最后\n\n可以感受一下`transition: transform .5s;`和`transition: all .5s;`的区别。\n\n[demo戳这里](https://codepen.io/evey-huang/pen/OZXPQy)\n\n","source":"_posts/font-animation.md","raw":"---\ntitle: 动画封装之字体动画\ndate: 2018-04-25 13:08:10\ntags: [animation, 动画, css]\ncategories: css\n---\n\n### 背景\n\n早上看到这个动画觉得好奇妙，然后官网又需要做优化，于是想想能不能封装起来用到官网乃至以后的项目中去。\n\n![](http://p1cjg886l.bkt.clouddn.com/animation1.gif)\n\n### 难点所在\n\n一般来讲hover就是从哪里来，回哪里去，比如：\n\n![](http://p1cjg886l.bkt.clouddn.com/animation2.gif)\n\n现在的难点在于如何在hover离开的时候改变动画行进的方向。\n\nhover动画可以分解为三个部分：\n\n- hover进入状态\n- hover停留状态\n- hover离开状态\n\n一般来说hover transition动画只有两种状态即正常状态和hover状态：正常状态->hover状态->正常状态\n\n>div {\n>\n>…….\n>\n>}\n>\n>div:hover {\n>\n>…..\n>\n>}\n\n**所以，必须要有一种方法能够使得hover动画进入与离开的状态产生两种不同的效果，实现：状态1->hover状态->状态2**\n\n\n\n### 解决关键\n\n实现本文开头的动画的关键点在于**使得hover动画的进入与离开产生不一样的效果**。使用`transform:scale()`和`transform-origin`可以实现这个效果。\n\n#### transform:scale()实现线条运动\n\ntransform:scale()通俗来说是用于缩放，用官方的话说就是：\n\n>CSS 函数 `scale()` 用于修改元素的大小。可以通过向量形式定义的缩放值来放大或缩小元素，同时可以在不同的方向设置不同的缩放值。\n\n我们这里使用`transform: scaleX(0) `与 `transform: scaleX(1)`来改变线条的显示与隐藏。\n\n\n\n#### transform-origin实现线条运动方向\n\n官方解释：\n\n>`transform-origin`属性可以使用一个，两个或三个值来指定，其中每个值都表示一个偏移量。 没有明确定义的偏移将重置为其对应的[初始值](https://developer.mozilla.org/zh-CN/docs/Web/CSS/initial_value)。\n>\n>如果定义了两个或更多值并且没有值的关键字，或者唯一使用的关键字是`center`，则第一个值表示水平偏移量，第二个值表示垂直偏移量。\n\n我们给线条设置一个默认的transform-origin 记为状态1，hover时设置另一个不同的transform-origin 记为状态2，所以当我们hover时，会读取状态2的transform-origin，从原点放大至scaleX(1)，hover离开的时候读取状态1的transform-origin，从scaleX(1)状态缩小至该原点。\n\n\n\n### 动画封装\n\n**HTML**\n\n```html\n<div class=\"a\">Hover Me</div>\n```\n\n**CSS(SCSS)**\n\n```css\n@mixin font-animation($color: #666, $border-color: #999) {\n    position: relative;\n    display: inline-block;\n    cursor: pointer;\n    color: rgba($color, .7);\n    transition: all .5s;\n    &::before {\n      content: \"\";\n      position: absolute;\n      left: -5%;\n      bottom: 0;\n      width: 110%;\n      transform: scaleX(0);\n      height: 2px;\n      background: $border-color;\n      z-index: -1;\n      transition: transform .5s;\n      transform-origin: 100% 0;\n    }\n    &:hover {\n      margin-left: .5em;\n      color: $color;\n      &::before {\n        transform: scaleX(1);\n        transform-origin: 0 0;\n      }\n  }\n}\n.a {\n    @include font-animation\n}\n```\n\n### 最后\n\n可以感受一下`transition: transform .5s;`和`transition: all .5s;`的区别。\n\n[demo戳这里](https://codepen.io/evey-huang/pen/OZXPQy)\n\n","slug":"font-animation","published":1,"updated":"2018-08-17T07:35:36.759Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gv10018oaqovwjsf3r8","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>早上看到这个动画觉得好奇妙，然后官网又需要做优化，于是想想能不能封装起来用到官网乃至以后的项目中去。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/animation1.gif\" alt=\"\"></p>\n<h3 id=\"难点所在\"><a href=\"#难点所在\" class=\"headerlink\" title=\"难点所在\"></a>难点所在</h3><p>一般来讲hover就是从哪里来，回哪里去，比如：</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/animation2.gif\" alt=\"\"></p>\n<p>现在的难点在于如何在hover离开的时候改变动画行进的方向。</p>\n<p>hover动画可以分解为三个部分：</p>\n<ul>\n<li>hover进入状态</li>\n<li>hover停留状态</li>\n<li>hover离开状态</li>\n</ul>\n<p>一般来说hover transition动画只有两种状态即正常状态和hover状态：正常状态-&gt;hover状态-&gt;正常状态</p>\n<blockquote>\n<p>div {</p>\n<p>…….</p>\n<p>}</p>\n<p>div:hover {</p>\n<p>…..</p>\n<p>}</p>\n</blockquote>\n<p><strong>所以，必须要有一种方法能够使得hover动画进入与离开的状态产生两种不同的效果，实现：状态1-&gt;hover状态-&gt;状态2</strong></p>\n<h3 id=\"解决关键\"><a href=\"#解决关键\" class=\"headerlink\" title=\"解决关键\"></a>解决关键</h3><p>实现本文开头的动画的关键点在于<strong>使得hover动画的进入与离开产生不一样的效果</strong>。使用<code>transform:scale()</code>和<code>transform-origin</code>可以实现这个效果。</p>\n<h4 id=\"transform-scale-实现线条运动\"><a href=\"#transform-scale-实现线条运动\" class=\"headerlink\" title=\"transform:scale()实现线条运动\"></a>transform:scale()实现线条运动</h4><p>transform:scale()通俗来说是用于缩放，用官方的话说就是：</p>\n<blockquote>\n<p>CSS 函数 <code>scale()</code> 用于修改元素的大小。可以通过向量形式定义的缩放值来放大或缩小元素，同时可以在不同的方向设置不同的缩放值。</p>\n</blockquote>\n<p>我们这里使用<code>transform: scaleX(0)</code>与 <code>transform: scaleX(1)</code>来改变线条的显示与隐藏。</p>\n<h4 id=\"transform-origin实现线条运动方向\"><a href=\"#transform-origin实现线条运动方向\" class=\"headerlink\" title=\"transform-origin实现线条运动方向\"></a>transform-origin实现线条运动方向</h4><p>官方解释：</p>\n<blockquote>\n<p><code>transform-origin</code>属性可以使用一个，两个或三个值来指定，其中每个值都表示一个偏移量。 没有明确定义的偏移将重置为其对应的<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/initial_value\" target=\"_blank\" rel=\"noopener\">初始值</a>。</p>\n<p>如果定义了两个或更多值并且没有值的关键字，或者唯一使用的关键字是<code>center</code>，则第一个值表示水平偏移量，第二个值表示垂直偏移量。</p>\n</blockquote>\n<p>我们给线条设置一个默认的transform-origin 记为状态1，hover时设置另一个不同的transform-origin 记为状态2，所以当我们hover时，会读取状态2的transform-origin，从原点放大至scaleX(1)，hover离开的时候读取状态1的transform-origin，从scaleX(1)状态缩小至该原点。</p>\n<h3 id=\"动画封装\"><a href=\"#动画封装\" class=\"headerlink\" title=\"动画封装\"></a>动画封装</h3><p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"a\"</span>&gt;</span>Hover Me<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>CSS(SCSS)</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">mixin</span> font-animation($color: #<span class=\"number\">666</span>, $border-color: #<span class=\"number\">999</span>) &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">inline-block</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">    color: rgba($color, .7);</span><br><span class=\"line\">    <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> <span class=\"selector-class\">.5s</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: -<span class=\"number\">5%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">110%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">scaleX</span>(0);</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: $border-color;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transition</span>: transform .<span class=\"number\">5s</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transform-origin</span>: <span class=\"number\">100%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">margin-left</span>: .<span class=\"number\">5em</span>;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: $color;</span><br><span class=\"line\">      &amp;::before &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">scaleX</span>(1);</span><br><span class=\"line\">        <span class=\"selector-tag\">transform-origin</span>: 0 0;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.a</span> &#123;</span><br><span class=\"line\">    @include font-animation</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>可以感受一下<code>transition: transform .5s;</code>和<code>transition: all .5s;</code>的区别。</p>\n<p><a href=\"https://codepen.io/evey-huang/pen/OZXPQy\" target=\"_blank\" rel=\"noopener\">demo戳这里</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>早上看到这个动画觉得好奇妙，然后官网又需要做优化，于是想想能不能封装起来用到官网乃至以后的项目中去。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/animation1.gif\" alt=\"\"></p>\n<h3 id=\"难点所在\"><a href=\"#难点所在\" class=\"headerlink\" title=\"难点所在\"></a>难点所在</h3><p>一般来讲hover就是从哪里来，回哪里去，比如：</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/animation2.gif\" alt=\"\"></p>\n<p>现在的难点在于如何在hover离开的时候改变动画行进的方向。</p>\n<p>hover动画可以分解为三个部分：</p>\n<ul>\n<li>hover进入状态</li>\n<li>hover停留状态</li>\n<li>hover离开状态</li>\n</ul>\n<p>一般来说hover transition动画只有两种状态即正常状态和hover状态：正常状态-&gt;hover状态-&gt;正常状态</p>\n<blockquote>\n<p>div {</p>\n<p>…….</p>\n<p>}</p>\n<p>div:hover {</p>\n<p>…..</p>\n<p>}</p>\n</blockquote>\n<p><strong>所以，必须要有一种方法能够使得hover动画进入与离开的状态产生两种不同的效果，实现：状态1-&gt;hover状态-&gt;状态2</strong></p>\n<h3 id=\"解决关键\"><a href=\"#解决关键\" class=\"headerlink\" title=\"解决关键\"></a>解决关键</h3><p>实现本文开头的动画的关键点在于<strong>使得hover动画的进入与离开产生不一样的效果</strong>。使用<code>transform:scale()</code>和<code>transform-origin</code>可以实现这个效果。</p>\n<h4 id=\"transform-scale-实现线条运动\"><a href=\"#transform-scale-实现线条运动\" class=\"headerlink\" title=\"transform:scale()实现线条运动\"></a>transform:scale()实现线条运动</h4><p>transform:scale()通俗来说是用于缩放，用官方的话说就是：</p>\n<blockquote>\n<p>CSS 函数 <code>scale()</code> 用于修改元素的大小。可以通过向量形式定义的缩放值来放大或缩小元素，同时可以在不同的方向设置不同的缩放值。</p>\n</blockquote>\n<p>我们这里使用<code>transform: scaleX(0)</code>与 <code>transform: scaleX(1)</code>来改变线条的显示与隐藏。</p>\n<h4 id=\"transform-origin实现线条运动方向\"><a href=\"#transform-origin实现线条运动方向\" class=\"headerlink\" title=\"transform-origin实现线条运动方向\"></a>transform-origin实现线条运动方向</h4><p>官方解释：</p>\n<blockquote>\n<p><code>transform-origin</code>属性可以使用一个，两个或三个值来指定，其中每个值都表示一个偏移量。 没有明确定义的偏移将重置为其对应的<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/initial_value\" target=\"_blank\" rel=\"noopener\">初始值</a>。</p>\n<p>如果定义了两个或更多值并且没有值的关键字，或者唯一使用的关键字是<code>center</code>，则第一个值表示水平偏移量，第二个值表示垂直偏移量。</p>\n</blockquote>\n<p>我们给线条设置一个默认的transform-origin 记为状态1，hover时设置另一个不同的transform-origin 记为状态2，所以当我们hover时，会读取状态2的transform-origin，从原点放大至scaleX(1)，hover离开的时候读取状态1的transform-origin，从scaleX(1)状态缩小至该原点。</p>\n<h3 id=\"动画封装\"><a href=\"#动画封装\" class=\"headerlink\" title=\"动画封装\"></a>动画封装</h3><p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"a\"</span>&gt;</span>Hover Me<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>CSS(SCSS)</strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">mixin</span> font-animation($color: #<span class=\"number\">666</span>, $border-color: #<span class=\"number\">999</span>) &#123;</span><br><span class=\"line\">    <span class=\"selector-tag\">position</span>: <span class=\"selector-tag\">relative</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">display</span>: <span class=\"selector-tag\">inline-block</span>;</span><br><span class=\"line\">    <span class=\"selector-tag\">cursor</span>: <span class=\"selector-tag\">pointer</span>;</span><br><span class=\"line\">    color: rgba($color, .7);</span><br><span class=\"line\">    <span class=\"selector-tag\">transition</span>: <span class=\"selector-tag\">all</span> <span class=\"selector-class\">.5s</span>;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">      <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">      <span class=\"attribute\">left</span>: -<span class=\"number\">5%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">width</span>: <span class=\"number\">110%</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: <span class=\"built_in\">scaleX</span>(0);</span><br><span class=\"line\">      <span class=\"attribute\">height</span>: <span class=\"number\">2px</span>;</span><br><span class=\"line\">      <span class=\"attribute\">background</span>: $border-color;</span><br><span class=\"line\">      <span class=\"attribute\">z-index</span>: -<span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transition</span>: transform .<span class=\"number\">5s</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transform-origin</span>: <span class=\"number\">100%</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">      <span class=\"attribute\">margin-left</span>: .<span class=\"number\">5em</span>;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>: $color;</span><br><span class=\"line\">      &amp;::before &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">transform</span>: <span class=\"selector-tag\">scaleX</span>(1);</span><br><span class=\"line\">        <span class=\"selector-tag\">transform-origin</span>: 0 0;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.a</span> &#123;</span><br><span class=\"line\">    @include font-animation</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>可以感受一下<code>transition: transform .5s;</code>和<code>transition: all .5s;</code>的区别。</p>\n<p><a href=\"https://codepen.io/evey-huang/pen/OZXPQy\" target=\"_blank\" rel=\"noopener\">demo戳这里</a></p>\n"},{"title":"将本地项目上传到github","date":"2017-12-10T14:31:25.000Z","_content":"\n#### 本地创建一个项目\n\n比如我本地新建了一个项目，名为myBlog\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/github1-1.png)\n\n#### 建立本地仓库\n\n###### 初始化\n\n进入myBlog文件夹执行\n\n```\ngit init\n```\n\n初始化项目成功后文件夹下会新增`.git`隐藏文件夹\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/github1-2.png)\n\n###### 添加到仓库\n\n执行指令\n\n```\ngit add .\n```\n\n将项目添加到版本库\n\n###### 生成commit\n\n执行指令\n\n```\ngit commit -m \"myblog\"\n```\n\n#### 关联github仓库\n\n在github新建一个仓库\n\n###### 添加github远程仓库地址\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/github1-3.png)\n\n执行指令\n\n```\ngit remote add origin https://github.com/Evey-huang/myBlog.git\n```\n\n###### 上传本地代码\n\n```\ngit push -u origin master\n```\n\n###### Fix Bug\n\n在上传代码的时候出了点错误提示“Pushing to Git returning Error Code 403 fatal: HTTP request failed”\n\n解决办法是修改.git/config文件\n\n执行指令\n\n```\nvim .git/config\n```\n\n将\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/github1-5.png)\n\n修改为\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/github1-4.png)\n\n\n\n再次执行\n\n```\ngit push -u origin master\n```\n\n即可上传成功，去github就可以看到提交记录啦~","source":"_posts/github1.md","raw":"---\ntitle: 将本地项目上传到github\ndate: 2017-12-10 22:31:25\ntags: github\ncategories: git\n---\n\n#### 本地创建一个项目\n\n比如我本地新建了一个项目，名为myBlog\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/github1-1.png)\n\n#### 建立本地仓库\n\n###### 初始化\n\n进入myBlog文件夹执行\n\n```\ngit init\n```\n\n初始化项目成功后文件夹下会新增`.git`隐藏文件夹\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/github1-2.png)\n\n###### 添加到仓库\n\n执行指令\n\n```\ngit add .\n```\n\n将项目添加到版本库\n\n###### 生成commit\n\n执行指令\n\n```\ngit commit -m \"myblog\"\n```\n\n#### 关联github仓库\n\n在github新建一个仓库\n\n###### 添加github远程仓库地址\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/github1-3.png)\n\n执行指令\n\n```\ngit remote add origin https://github.com/Evey-huang/myBlog.git\n```\n\n###### 上传本地代码\n\n```\ngit push -u origin master\n```\n\n###### Fix Bug\n\n在上传代码的时候出了点错误提示“Pushing to Git returning Error Code 403 fatal: HTTP request failed”\n\n解决办法是修改.git/config文件\n\n执行指令\n\n```\nvim .git/config\n```\n\n将\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/github1-5.png)\n\n修改为\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/github1-4.png)\n\n\n\n再次执行\n\n```\ngit push -u origin master\n```\n\n即可上传成功，去github就可以看到提交记录啦~","slug":"github1","published":1,"updated":"2018-08-17T07:35:36.759Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gv2001aoaqow9gk8anb","content":"<h4 id=\"本地创建一个项目\"><a href=\"#本地创建一个项目\" class=\"headerlink\" title=\"本地创建一个项目\"></a>本地创建一个项目</h4><p>比如我本地新建了一个项目，名为myBlog</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/github1-1.png\" alt=\"PNG\"></p>\n<h4 id=\"建立本地仓库\"><a href=\"#建立本地仓库\" class=\"headerlink\" title=\"建立本地仓库\"></a>建立本地仓库</h4><h6 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h6><p>进入myBlog文件夹执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<p>初始化项目成功后文件夹下会新增<code>.git</code>隐藏文件夹</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/github1-2.png\" alt=\"PNG\"></p>\n<h6 id=\"添加到仓库\"><a href=\"#添加到仓库\" class=\"headerlink\" title=\"添加到仓库\"></a>添加到仓库</h6><p>执行指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<p>将项目添加到版本库</p>\n<h6 id=\"生成commit\"><a href=\"#生成commit\" class=\"headerlink\" title=\"生成commit\"></a>生成commit</h6><p>执行指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &quot;myblog&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"关联github仓库\"><a href=\"#关联github仓库\" class=\"headerlink\" title=\"关联github仓库\"></a>关联github仓库</h4><p>在github新建一个仓库</p>\n<h6 id=\"添加github远程仓库地址\"><a href=\"#添加github远程仓库地址\" class=\"headerlink\" title=\"添加github远程仓库地址\"></a>添加github远程仓库地址</h6><p><img src=\"http://p1cjg886l.bkt.clouddn.com/github1-3.png\" alt=\"PNG\"></p>\n<p>执行指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/Evey-huang/myBlog.git</span><br></pre></td></tr></table></figure>\n<h6 id=\"上传本地代码\"><a href=\"#上传本地代码\" class=\"headerlink\" title=\"上传本地代码\"></a>上传本地代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<h6 id=\"Fix-Bug\"><a href=\"#Fix-Bug\" class=\"headerlink\" title=\"Fix Bug\"></a>Fix Bug</h6><p>在上传代码的时候出了点错误提示“Pushing to Git returning Error Code 403 fatal: HTTP request failed”</p>\n<p>解决办法是修改.git/config文件</p>\n<p>执行指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .git/config</span><br></pre></td></tr></table></figure>\n<p>将</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/github1-5.png\" alt=\"PNG\"></p>\n<p>修改为</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/github1-4.png\" alt=\"PNG\"></p>\n<p>再次执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<p>即可上传成功，去github就可以看到提交记录啦~</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"本地创建一个项目\"><a href=\"#本地创建一个项目\" class=\"headerlink\" title=\"本地创建一个项目\"></a>本地创建一个项目</h4><p>比如我本地新建了一个项目，名为myBlog</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/github1-1.png\" alt=\"PNG\"></p>\n<h4 id=\"建立本地仓库\"><a href=\"#建立本地仓库\" class=\"headerlink\" title=\"建立本地仓库\"></a>建立本地仓库</h4><h6 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h6><p>进入myBlog文件夹执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n<p>初始化项目成功后文件夹下会新增<code>.git</code>隐藏文件夹</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/github1-2.png\" alt=\"PNG\"></p>\n<h6 id=\"添加到仓库\"><a href=\"#添加到仓库\" class=\"headerlink\" title=\"添加到仓库\"></a>添加到仓库</h6><p>执行指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n<p>将项目添加到版本库</p>\n<h6 id=\"生成commit\"><a href=\"#生成commit\" class=\"headerlink\" title=\"生成commit\"></a>生成commit</h6><p>执行指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m &quot;myblog&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"关联github仓库\"><a href=\"#关联github仓库\" class=\"headerlink\" title=\"关联github仓库\"></a>关联github仓库</h4><p>在github新建一个仓库</p>\n<h6 id=\"添加github远程仓库地址\"><a href=\"#添加github远程仓库地址\" class=\"headerlink\" title=\"添加github远程仓库地址\"></a>添加github远程仓库地址</h6><p><img src=\"http://p1cjg886l.bkt.clouddn.com/github1-3.png\" alt=\"PNG\"></p>\n<p>执行指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin https://github.com/Evey-huang/myBlog.git</span><br></pre></td></tr></table></figure>\n<h6 id=\"上传本地代码\"><a href=\"#上传本地代码\" class=\"headerlink\" title=\"上传本地代码\"></a>上传本地代码</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<h6 id=\"Fix-Bug\"><a href=\"#Fix-Bug\" class=\"headerlink\" title=\"Fix Bug\"></a>Fix Bug</h6><p>在上传代码的时候出了点错误提示“Pushing to Git returning Error Code 403 fatal: HTTP request failed”</p>\n<p>解决办法是修改.git/config文件</p>\n<p>执行指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim .git/config</span><br></pre></td></tr></table></figure>\n<p>将</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/github1-5.png\" alt=\"PNG\"></p>\n<p>修改为</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/github1-4.png\" alt=\"PNG\"></p>\n<p>再次执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<p>即可上传成功，去github就可以看到提交记录啦~</p>\n"},{"title":"求两数最大公约数","date":"2018-08-21T02:19:08.000Z","_content":"\n\n\n#### 方法一\n\n- 初始除数为2，最大公约数为1\n- 如果a、b两数中其中一个为1或者0，则最大公约数为1\n- 如果a、b两数均大于2，a、b均能整除2，则最大公约数为2；否则最大公约数为1\n\n\n\n```js\nfunction greatestCommonDivisor(a, b){\n  var divisor = 2, \n      greatestDivisor = 1;\n\n  //if u pass a -ve number this will not work. fix it dude!!\n  if (a < 2 || b < 2)\n     return 1;\n  \n  while(a >= divisor && b >= divisor){\n   if(a %divisor == 0 && b% divisor ==0){\n      greatestDivisor = divisor;      \n    }\n   divisor++;\n  }\n  return greatestDivisor;\n}\n\n// console.log(greatestCommonDivisor(14, 21)) => 7 \n// console.log(greatestCommonDivisor(1, 7)) => 1\n```\n\n\n\n#### 方法二\n\n```js\nfunction greatestCommonDivisor(a, b){\n   if(b == 0)\n     return a;\n   else \n     return greatestCommonDivisor(b, a%b);\n}\n// console.log(greatestCommonDivisor(5,7)) => 1\n```\n\n例如：\n\n求5和7的最大公约数，a=5,b=7\n\n1. return greatestCommonDivisor(7, 5%7) => a=7,b=1\n2. return greatestCommonDivisor(7, 7%1) => a=7,b=0\n3. b==0 return a=1\n\n所以5和7最大公约数为1","source":"_posts/greatestCommonDivisor.md","raw":"---\ntitle: 求两数最大公约数\ndate: 2018-08-21 10:19:08\ntags: [greatestCommonDivisor, 最大公约数]\ncategories: JS\n---\n\n\n\n#### 方法一\n\n- 初始除数为2，最大公约数为1\n- 如果a、b两数中其中一个为1或者0，则最大公约数为1\n- 如果a、b两数均大于2，a、b均能整除2，则最大公约数为2；否则最大公约数为1\n\n\n\n```js\nfunction greatestCommonDivisor(a, b){\n  var divisor = 2, \n      greatestDivisor = 1;\n\n  //if u pass a -ve number this will not work. fix it dude!!\n  if (a < 2 || b < 2)\n     return 1;\n  \n  while(a >= divisor && b >= divisor){\n   if(a %divisor == 0 && b% divisor ==0){\n      greatestDivisor = divisor;      \n    }\n   divisor++;\n  }\n  return greatestDivisor;\n}\n\n// console.log(greatestCommonDivisor(14, 21)) => 7 \n// console.log(greatestCommonDivisor(1, 7)) => 1\n```\n\n\n\n#### 方法二\n\n```js\nfunction greatestCommonDivisor(a, b){\n   if(b == 0)\n     return a;\n   else \n     return greatestCommonDivisor(b, a%b);\n}\n// console.log(greatestCommonDivisor(5,7)) => 1\n```\n\n例如：\n\n求5和7的最大公约数，a=5,b=7\n\n1. return greatestCommonDivisor(7, 5%7) => a=7,b=1\n2. return greatestCommonDivisor(7, 7%1) => a=7,b=0\n3. b==0 return a=1\n\n所以5和7最大公约数为1","slug":"greatestCommonDivisor","published":1,"updated":"2018-08-21T02:20:33.271Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gv3001foaqordbj8m5j","content":"<h4 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h4><ul>\n<li>初始除数为2，最大公约数为1</li>\n<li>如果a、b两数中其中一个为1或者0，则最大公约数为1</li>\n<li>如果a、b两数均大于2，a、b均能整除2，则最大公约数为2；否则最大公约数为1</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">greatestCommonDivisor</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> divisor = <span class=\"number\">2</span>, </span><br><span class=\"line\">      greatestDivisor = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//if u pass a -ve number this will not work. fix it dude!!</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a &lt; <span class=\"number\">2</span> || b &lt; <span class=\"number\">2</span>)</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">while</span>(a &gt;= divisor &amp;&amp; b &gt;= divisor)&#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(a %divisor == <span class=\"number\">0</span> &amp;&amp; b% divisor ==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      greatestDivisor = divisor;      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   divisor++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> greatestDivisor;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// console.log(greatestCommonDivisor(14, 21)) =&gt; 7 </span></span><br><span class=\"line\"><span class=\"comment\">// console.log(greatestCommonDivisor(1, 7)) =&gt; 1</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">greatestCommonDivisor</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(b == <span class=\"number\">0</span>)</span><br><span class=\"line\">     <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">   <span class=\"keyword\">else</span> </span><br><span class=\"line\">     <span class=\"keyword\">return</span> greatestCommonDivisor(b, a%b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// console.log(greatestCommonDivisor(5,7)) =&gt; 1</span></span><br></pre></td></tr></table></figure>\n<p>例如：</p>\n<p>求5和7的最大公约数，a=5,b=7</p>\n<ol>\n<li>return greatestCommonDivisor(7, 5%7) =&gt; a=7,b=1</li>\n<li>return greatestCommonDivisor(7, 7%1) =&gt; a=7,b=0</li>\n<li>b==0 return a=1</li>\n</ol>\n<p>所以5和7最大公约数为1</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h4><ul>\n<li>初始除数为2，最大公约数为1</li>\n<li>如果a、b两数中其中一个为1或者0，则最大公约数为1</li>\n<li>如果a、b两数均大于2，a、b均能整除2，则最大公约数为2；否则最大公约数为1</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">greatestCommonDivisor</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> divisor = <span class=\"number\">2</span>, </span><br><span class=\"line\">      greatestDivisor = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//if u pass a -ve number this will not work. fix it dude!!</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a &lt; <span class=\"number\">2</span> || b &lt; <span class=\"number\">2</span>)</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">while</span>(a &gt;= divisor &amp;&amp; b &gt;= divisor)&#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(a %divisor == <span class=\"number\">0</span> &amp;&amp; b% divisor ==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      greatestDivisor = divisor;      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   divisor++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> greatestDivisor;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// console.log(greatestCommonDivisor(14, 21)) =&gt; 7 </span></span><br><span class=\"line\"><span class=\"comment\">// console.log(greatestCommonDivisor(1, 7)) =&gt; 1</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">greatestCommonDivisor</span>(<span class=\"params\">a, b</span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span>(b == <span class=\"number\">0</span>)</span><br><span class=\"line\">     <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">   <span class=\"keyword\">else</span> </span><br><span class=\"line\">     <span class=\"keyword\">return</span> greatestCommonDivisor(b, a%b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// console.log(greatestCommonDivisor(5,7)) =&gt; 1</span></span><br></pre></td></tr></table></figure>\n<p>例如：</p>\n<p>求5和7的最大公约数，a=5,b=7</p>\n<ol>\n<li>return greatestCommonDivisor(7, 5%7) =&gt; a=7,b=1</li>\n<li>return greatestCommonDivisor(7, 7%1) =&gt; a=7,b=0</li>\n<li>b==0 return a=1</li>\n</ol>\n<p>所以5和7最大公约数为1</p>\n"},{"title":"Next主题添加站内搜索","date":"2018-08-29T10:23:51.000Z","_content":"\n## 背景\n\n随着文章的增多，标签和归档已经不能满足要求了，想要快速查找文章需要一个搜索功能。Next主题支持集成`Swiftype`、`微搜索`、`Local Search`和`Algolia`，我选择的是Hexo提供的`Local Search`，原理是通过`hexo-generator-search`插件在本地生成一个`search.xml`文件，搜索时从这个文件中根据关键字检索出相应的链接。\n\n## 安装\n\n安装[hexo-generator-searchdb](https://github.com/theme-next/hexo-generator-searchdb)插件\n\n```shell\nnpm install hexo-generator-searchdb --save\n```\n\n## 修改配置文件\n\n#### 修改站点配置文件_config.yml\n\n```\n# search\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n\n#### 修改Next主题配置文件_config.yml\n\n```\n# Local search\nlocal_search:\n  enable: true\n```\n\n","source":"_posts/hexo-next.md","raw":"---\ntitle: Next主题添加站内搜索\ndate: 2018-08-29 18:23:51\ntags: [Hexo, Next, 搜索]\ncategories: Hexo\n---\n\n## 背景\n\n随着文章的增多，标签和归档已经不能满足要求了，想要快速查找文章需要一个搜索功能。Next主题支持集成`Swiftype`、`微搜索`、`Local Search`和`Algolia`，我选择的是Hexo提供的`Local Search`，原理是通过`hexo-generator-search`插件在本地生成一个`search.xml`文件，搜索时从这个文件中根据关键字检索出相应的链接。\n\n## 安装\n\n安装[hexo-generator-searchdb](https://github.com/theme-next/hexo-generator-searchdb)插件\n\n```shell\nnpm install hexo-generator-searchdb --save\n```\n\n## 修改配置文件\n\n#### 修改站点配置文件_config.yml\n\n```\n# search\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n\n#### 修改Next主题配置文件_config.yml\n\n```\n# Local search\nlocal_search:\n  enable: true\n```\n\n","slug":"hexo-next","published":1,"updated":"2018-08-29T10:43:14.960Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gv4001goaqonc0c7eku","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>随着文章的增多，标签和归档已经不能满足要求了，想要快速查找文章需要一个搜索功能。Next主题支持集成<code>Swiftype</code>、<code>微搜索</code>、<code>Local Search</code>和<code>Algolia</code>，我选择的是Hexo提供的<code>Local Search</code>，原理是通过<code>hexo-generator-search</code>插件在本地生成一个<code>search.xml</code>文件，搜索时从这个文件中根据关键字检索出相应的链接。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>安装<a href=\"https://github.com/theme-next/hexo-generator-searchdb\" target=\"_blank\" rel=\"noopener\">hexo-generator-searchdb</a>插件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h2><h4 id=\"修改站点配置文件-config-yml\"><a href=\"#修改站点配置文件-config-yml\" class=\"headerlink\" title=\"修改站点配置文件_config.yml\"></a>修改站点配置文件_config.yml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># search</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改Next主题配置文件-config-yml\"><a href=\"#修改Next主题配置文件-config-yml\" class=\"headerlink\" title=\"修改Next主题配置文件_config.yml\"></a>修改Next主题配置文件_config.yml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Local search</span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>随着文章的增多，标签和归档已经不能满足要求了，想要快速查找文章需要一个搜索功能。Next主题支持集成<code>Swiftype</code>、<code>微搜索</code>、<code>Local Search</code>和<code>Algolia</code>，我选择的是Hexo提供的<code>Local Search</code>，原理是通过<code>hexo-generator-search</code>插件在本地生成一个<code>search.xml</code>文件，搜索时从这个文件中根据关键字检索出相应的链接。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>安装<a href=\"https://github.com/theme-next/hexo-generator-searchdb\" target=\"_blank\" rel=\"noopener\">hexo-generator-searchdb</a>插件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改配置文件\"><a href=\"#修改配置文件\" class=\"headerlink\" title=\"修改配置文件\"></a>修改配置文件</h2><h4 id=\"修改站点配置文件-config-yml\"><a href=\"#修改站点配置文件-config-yml\" class=\"headerlink\" title=\"修改站点配置文件_config.yml\"></a>修改站点配置文件_config.yml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># search</span><br><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改Next主题配置文件-config-yml\"><a href=\"#修改Next主题配置文件-config-yml\" class=\"headerlink\" title=\"修改Next主题配置文件_config.yml\"></a>修改Next主题配置文件_config.yml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Local search</span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n"},{"title":"Hexo配置动态背景","date":"2018-08-29T10:55:52.000Z","_content":"\n#### 修改Next主题配置文件_config.yml\n\n```\n# Canvas-nest\ncanvas_next: true\n```\n\n","source":"_posts/hexo-canvas.md","raw":"---\ntitle: Hexo配置动态背景\ndate: 2018-08-29 18:55:52\ntags: [hexo, 动态背景]\ncategories: Hexo\n---\n\n#### 修改Next主题配置文件_config.yml\n\n```\n# Canvas-nest\ncanvas_next: true\n```\n\n","slug":"hexo-canvas","published":1,"updated":"2018-08-29T10:58:46.754Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gv6001koaqop37ublnt","content":"<h4 id=\"修改Next主题配置文件-config-yml\"><a href=\"#修改Next主题配置文件-config-yml\" class=\"headerlink\" title=\"修改Next主题配置文件_config.yml\"></a>修改Next主题配置文件_config.yml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Canvas-nest</span><br><span class=\"line\">canvas_next: true</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"修改Next主题配置文件-config-yml\"><a href=\"#修改Next主题配置文件-config-yml\" class=\"headerlink\" title=\"修改Next主题配置文件_config.yml\"></a>修改Next主题配置文件_config.yml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Canvas-nest</span><br><span class=\"line\">canvas_next: true</span><br></pre></td></tr></table></figure>\n"},{"title":"Hexo","date":"2018-08-29T08:41:25.000Z","_content":"\n[Hexo](https://hexo.io/zh-cn/)是一个快速、简洁且高效的博客框架，拥有以下特点：\n\n- 超快生成速度\n- 支持Markdown所有功能\n- 一键部署\n- 提供丰富的插件\n\n#### 安装前提\n\n- Node.js\n- Git\n\n#### 安装Hexo\n\n```shell\n$ npm install -g hexo-cli\n```\n\n#### 建站\n\n```shell\n# 新建一个网站\n$ hexo init blog\n# 进入博客文件夹\n$ cd blog\n# 安装依赖\n$ npm install\n# 启动服务器\n$ hexo server\n```\n\n#### 其他指令\n\n```shell\n# 部署网站\n$ hexo deploy 等于$ hexo d\n# 生成静态文件\n$ hexo generate 等于 $ hexo g\n# 新建文章\n$ hexo new title\n```\n\n\n\n","source":"_posts/hexo1.md","raw":"---\ntitle: Hexo\ndate: 2018-08-29 16:41:25\ntags: hexo\ncategories: Hexo\n---\n\n[Hexo](https://hexo.io/zh-cn/)是一个快速、简洁且高效的博客框架，拥有以下特点：\n\n- 超快生成速度\n- 支持Markdown所有功能\n- 一键部署\n- 提供丰富的插件\n\n#### 安装前提\n\n- Node.js\n- Git\n\n#### 安装Hexo\n\n```shell\n$ npm install -g hexo-cli\n```\n\n#### 建站\n\n```shell\n# 新建一个网站\n$ hexo init blog\n# 进入博客文件夹\n$ cd blog\n# 安装依赖\n$ npm install\n# 启动服务器\n$ hexo server\n```\n\n#### 其他指令\n\n```shell\n# 部署网站\n$ hexo deploy 等于$ hexo d\n# 生成静态文件\n$ hexo generate 等于 $ hexo g\n# 新建文章\n$ hexo new title\n```\n\n\n\n","slug":"hexo1","published":1,"updated":"2018-08-29T08:43:18.810Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gv6001moaqousrkq3qu","content":"<p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a>是一个快速、简洁且高效的博客框架，拥有以下特点：</p>\n<ul>\n<li>超快生成速度</li>\n<li>支持Markdown所有功能</li>\n<li>一键部署</li>\n<li>提供丰富的插件</li>\n</ul>\n<h4 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h4><ul>\n<li>Node.js</li>\n<li>Git</li>\n</ul>\n<h4 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h4 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 新建一个网站</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo init blog</span><br><span class=\"line\"><span class=\"meta\">#</span> 进入博客文件夹</span><br><span class=\"line\"><span class=\"meta\">$</span> cd blog</span><br><span class=\"line\"><span class=\"meta\">#</span> 安装依赖</span><br><span class=\"line\"><span class=\"meta\">$</span> npm install</span><br><span class=\"line\"><span class=\"meta\">#</span> 启动服务器</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo server</span><br></pre></td></tr></table></figure>\n<h4 id=\"其他指令\"><a href=\"#其他指令\" class=\"headerlink\" title=\"其他指令\"></a>其他指令</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 部署网站</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo deploy 等于$ hexo d</span><br><span class=\"line\"><span class=\"meta\">#</span> 生成静态文件</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo generate 等于 $ hexo g</span><br><span class=\"line\"><span class=\"meta\">#</span> 新建文章</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo new title</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo</a>是一个快速、简洁且高效的博客框架，拥有以下特点：</p>\n<ul>\n<li>超快生成速度</li>\n<li>支持Markdown所有功能</li>\n<li>一键部署</li>\n<li>提供丰富的插件</li>\n</ul>\n<h4 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h4><ul>\n<li>Node.js</li>\n<li>Git</li>\n</ul>\n<h4 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h4 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 新建一个网站</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo init blog</span><br><span class=\"line\"><span class=\"meta\">#</span> 进入博客文件夹</span><br><span class=\"line\"><span class=\"meta\">$</span> cd blog</span><br><span class=\"line\"><span class=\"meta\">#</span> 安装依赖</span><br><span class=\"line\"><span class=\"meta\">$</span> npm install</span><br><span class=\"line\"><span class=\"meta\">#</span> 启动服务器</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo server</span><br></pre></td></tr></table></figure>\n<h4 id=\"其他指令\"><a href=\"#其他指令\" class=\"headerlink\" title=\"其他指令\"></a>其他指令</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 部署网站</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo deploy 等于$ hexo d</span><br><span class=\"line\"><span class=\"meta\">#</span> 生成静态文件</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo generate 等于 $ hexo g</span><br><span class=\"line\"><span class=\"meta\">#</span> 新建文章</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo new title</span><br></pre></td></tr></table></figure>\n"},{"title":"谈谈2017-12读书","date":"2018-01-04T10:31:15.000Z","_content":"\n![十二月读书](http://p1cjg886l.bkt.clouddn.com/read-12.png)\n\n最近看了六本书，也就是封面的这六本，说好的看《南京大屠杀》也是没看几页，光是看个序都泪眼朦胧分分钟要决堤那种。\n\n## 当你的才华还撑不起你的梦想时\n\n这本书光看题目就知道是鸡汤类型的了，作者是`特立独行的猫`，反正没听过，据说是微博大V可惜我不玩微博。整体来说还算正能量吧，但是来来去去都是讲的那几个故事，实在没新意，而且别人的人生别人的成功是不可复制的，还是少看这类书好了。\n\n## 老了依旧可以谈谈未来\n\n蔡澜老先生的书，无处不透露着他的洒脱。很稀松平常的家常话但又透露着人生哲理，值得思考。[老了依然可以谈未来读后感](https://evey-huang.github.io./2017/12/14/cailan/#more)\n\n## 恶意\n\n恶意总是让我想起有校园暴力的青少年们，总是不能理解他们怎么可以狠得下心去欺负那些无辜的人，也许是我没有经历他们所经历的，我的愿望是世界和平。[恶意读后感](https://evey-huang.github.io./2017/12/25/eyi/#more)\n\n## 白夜行\n\n白夜行这本书看了蛮久了大概有一周多的时间，人物网拉得很大错综复杂。看完这本书五味杂陈，既为亮司和雪穗之间的爱情故事感到惋惜——他们最终没有在一起。也为他们所犯下的罪行感到愤怒——这19年间为了“扫除障碍”不断地杀人，而他们杀的第一个人就是他们的父母。如果不耐心看下去，了解这些背景，可能会觉得他们就是十恶不赦的人，了解了背景以后又开始心疼他们。我也有去看一些书评，很多都在批判他们两个人罪大恶极，视人命为草芥，我自己也和朋友交流了一下感想，最终结论就是保留自己的看法也不拒绝其他看法。\n\n\n\n## 看见\n\n看这本书是哭得最多次的，从非典那一段开始哭，在地铁上哭得跟傻逼一样。看这本书思考很多，年轻时候的柴静让我想到了现在的自己，很菜鸟，初入职场，会怀疑自己的能力也会自信心爆棚，有听不进别人的建议的时候也有跪求建议的时候，总之这本书让我受益良多，看完以后跟销售一样跟周围朋友使劲安利这本书，不知道有多少个会去看，但是就是忍不住hh。\n\n## 愿你成为最好的女子\n\n这本书跳着看的，觉得还好吧，实在无聊可以看，但是不怎么推荐看。","source":"_posts/kanjian.md","raw":"---\ntitle: 谈谈2017-12读书\ndate: 2018-01-04 18:31:15\ntags: [读书, 柴静 ]\ncategories: 读书\n---\n\n![十二月读书](http://p1cjg886l.bkt.clouddn.com/read-12.png)\n\n最近看了六本书，也就是封面的这六本，说好的看《南京大屠杀》也是没看几页，光是看个序都泪眼朦胧分分钟要决堤那种。\n\n## 当你的才华还撑不起你的梦想时\n\n这本书光看题目就知道是鸡汤类型的了，作者是`特立独行的猫`，反正没听过，据说是微博大V可惜我不玩微博。整体来说还算正能量吧，但是来来去去都是讲的那几个故事，实在没新意，而且别人的人生别人的成功是不可复制的，还是少看这类书好了。\n\n## 老了依旧可以谈谈未来\n\n蔡澜老先生的书，无处不透露着他的洒脱。很稀松平常的家常话但又透露着人生哲理，值得思考。[老了依然可以谈未来读后感](https://evey-huang.github.io./2017/12/14/cailan/#more)\n\n## 恶意\n\n恶意总是让我想起有校园暴力的青少年们，总是不能理解他们怎么可以狠得下心去欺负那些无辜的人，也许是我没有经历他们所经历的，我的愿望是世界和平。[恶意读后感](https://evey-huang.github.io./2017/12/25/eyi/#more)\n\n## 白夜行\n\n白夜行这本书看了蛮久了大概有一周多的时间，人物网拉得很大错综复杂。看完这本书五味杂陈，既为亮司和雪穗之间的爱情故事感到惋惜——他们最终没有在一起。也为他们所犯下的罪行感到愤怒——这19年间为了“扫除障碍”不断地杀人，而他们杀的第一个人就是他们的父母。如果不耐心看下去，了解这些背景，可能会觉得他们就是十恶不赦的人，了解了背景以后又开始心疼他们。我也有去看一些书评，很多都在批判他们两个人罪大恶极，视人命为草芥，我自己也和朋友交流了一下感想，最终结论就是保留自己的看法也不拒绝其他看法。\n\n\n\n## 看见\n\n看这本书是哭得最多次的，从非典那一段开始哭，在地铁上哭得跟傻逼一样。看这本书思考很多，年轻时候的柴静让我想到了现在的自己，很菜鸟，初入职场，会怀疑自己的能力也会自信心爆棚，有听不进别人的建议的时候也有跪求建议的时候，总之这本书让我受益良多，看完以后跟销售一样跟周围朋友使劲安利这本书，不知道有多少个会去看，但是就是忍不住hh。\n\n## 愿你成为最好的女子\n\n这本书跳着看的，觉得还好吧，实在无聊可以看，但是不怎么推荐看。","slug":"kanjian","published":1,"updated":"2018-08-17T07:35:36.760Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gv8001poaqoonylbb64","content":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/read-12.png\" alt=\"十二月读书\"></p>\n<p>最近看了六本书，也就是封面的这六本，说好的看《南京大屠杀》也是没看几页，光是看个序都泪眼朦胧分分钟要决堤那种。</p>\n<h2 id=\"当你的才华还撑不起你的梦想时\"><a href=\"#当你的才华还撑不起你的梦想时\" class=\"headerlink\" title=\"当你的才华还撑不起你的梦想时\"></a>当你的才华还撑不起你的梦想时</h2><p>这本书光看题目就知道是鸡汤类型的了，作者是<code>特立独行的猫</code>，反正没听过，据说是微博大V可惜我不玩微博。整体来说还算正能量吧，但是来来去去都是讲的那几个故事，实在没新意，而且别人的人生别人的成功是不可复制的，还是少看这类书好了。</p>\n<h2 id=\"老了依旧可以谈谈未来\"><a href=\"#老了依旧可以谈谈未来\" class=\"headerlink\" title=\"老了依旧可以谈谈未来\"></a>老了依旧可以谈谈未来</h2><p>蔡澜老先生的书，无处不透露着他的洒脱。很稀松平常的家常话但又透露着人生哲理，值得思考。<a href=\"https://evey-huang.github.io./2017/12/14/cailan/#more\" target=\"_blank\" rel=\"noopener\">老了依然可以谈未来读后感</a></p>\n<h2 id=\"恶意\"><a href=\"#恶意\" class=\"headerlink\" title=\"恶意\"></a>恶意</h2><p>恶意总是让我想起有校园暴力的青少年们，总是不能理解他们怎么可以狠得下心去欺负那些无辜的人，也许是我没有经历他们所经历的，我的愿望是世界和平。<a href=\"https://evey-huang.github.io./2017/12/25/eyi/#more\" target=\"_blank\" rel=\"noopener\">恶意读后感</a></p>\n<h2 id=\"白夜行\"><a href=\"#白夜行\" class=\"headerlink\" title=\"白夜行\"></a>白夜行</h2><p>白夜行这本书看了蛮久了大概有一周多的时间，人物网拉得很大错综复杂。看完这本书五味杂陈，既为亮司和雪穗之间的爱情故事感到惋惜——他们最终没有在一起。也为他们所犯下的罪行感到愤怒——这19年间为了“扫除障碍”不断地杀人，而他们杀的第一个人就是他们的父母。如果不耐心看下去，了解这些背景，可能会觉得他们就是十恶不赦的人，了解了背景以后又开始心疼他们。我也有去看一些书评，很多都在批判他们两个人罪大恶极，视人命为草芥，我自己也和朋友交流了一下感想，最终结论就是保留自己的看法也不拒绝其他看法。</p>\n<h2 id=\"看见\"><a href=\"#看见\" class=\"headerlink\" title=\"看见\"></a>看见</h2><p>看这本书是哭得最多次的，从非典那一段开始哭，在地铁上哭得跟傻逼一样。看这本书思考很多，年轻时候的柴静让我想到了现在的自己，很菜鸟，初入职场，会怀疑自己的能力也会自信心爆棚，有听不进别人的建议的时候也有跪求建议的时候，总之这本书让我受益良多，看完以后跟销售一样跟周围朋友使劲安利这本书，不知道有多少个会去看，但是就是忍不住hh。</p>\n<h2 id=\"愿你成为最好的女子\"><a href=\"#愿你成为最好的女子\" class=\"headerlink\" title=\"愿你成为最好的女子\"></a>愿你成为最好的女子</h2><p>这本书跳着看的，觉得还好吧，实在无聊可以看，但是不怎么推荐看。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/read-12.png\" alt=\"十二月读书\"></p>\n<p>最近看了六本书，也就是封面的这六本，说好的看《南京大屠杀》也是没看几页，光是看个序都泪眼朦胧分分钟要决堤那种。</p>\n<h2 id=\"当你的才华还撑不起你的梦想时\"><a href=\"#当你的才华还撑不起你的梦想时\" class=\"headerlink\" title=\"当你的才华还撑不起你的梦想时\"></a>当你的才华还撑不起你的梦想时</h2><p>这本书光看题目就知道是鸡汤类型的了，作者是<code>特立独行的猫</code>，反正没听过，据说是微博大V可惜我不玩微博。整体来说还算正能量吧，但是来来去去都是讲的那几个故事，实在没新意，而且别人的人生别人的成功是不可复制的，还是少看这类书好了。</p>\n<h2 id=\"老了依旧可以谈谈未来\"><a href=\"#老了依旧可以谈谈未来\" class=\"headerlink\" title=\"老了依旧可以谈谈未来\"></a>老了依旧可以谈谈未来</h2><p>蔡澜老先生的书，无处不透露着他的洒脱。很稀松平常的家常话但又透露着人生哲理，值得思考。<a href=\"https://evey-huang.github.io./2017/12/14/cailan/#more\" target=\"_blank\" rel=\"noopener\">老了依然可以谈未来读后感</a></p>\n<h2 id=\"恶意\"><a href=\"#恶意\" class=\"headerlink\" title=\"恶意\"></a>恶意</h2><p>恶意总是让我想起有校园暴力的青少年们，总是不能理解他们怎么可以狠得下心去欺负那些无辜的人，也许是我没有经历他们所经历的，我的愿望是世界和平。<a href=\"https://evey-huang.github.io./2017/12/25/eyi/#more\" target=\"_blank\" rel=\"noopener\">恶意读后感</a></p>\n<h2 id=\"白夜行\"><a href=\"#白夜行\" class=\"headerlink\" title=\"白夜行\"></a>白夜行</h2><p>白夜行这本书看了蛮久了大概有一周多的时间，人物网拉得很大错综复杂。看完这本书五味杂陈，既为亮司和雪穗之间的爱情故事感到惋惜——他们最终没有在一起。也为他们所犯下的罪行感到愤怒——这19年间为了“扫除障碍”不断地杀人，而他们杀的第一个人就是他们的父母。如果不耐心看下去，了解这些背景，可能会觉得他们就是十恶不赦的人，了解了背景以后又开始心疼他们。我也有去看一些书评，很多都在批判他们两个人罪大恶极，视人命为草芥，我自己也和朋友交流了一下感想，最终结论就是保留自己的看法也不拒绝其他看法。</p>\n<h2 id=\"看见\"><a href=\"#看见\" class=\"headerlink\" title=\"看见\"></a>看见</h2><p>看这本书是哭得最多次的，从非典那一段开始哭，在地铁上哭得跟傻逼一样。看这本书思考很多，年轻时候的柴静让我想到了现在的自己，很菜鸟，初入职场，会怀疑自己的能力也会自信心爆棚，有听不进别人的建议的时候也有跪求建议的时候，总之这本书让我受益良多，看完以后跟销售一样跟周围朋友使劲安利这本书，不知道有多少个会去看，但是就是忍不住hh。</p>\n<h2 id=\"愿你成为最好的女子\"><a href=\"#愿你成为最好的女子\" class=\"headerlink\" title=\"愿你成为最好的女子\"></a>愿你成为最好的女子</h2><p>这本书跳着看的，觉得还好吧，实在无聊可以看，但是不怎么推荐看。</p>\n"},{"title":"如何正确“反孔”","date":"2018-01-04T10:53:44.000Z","_content":"\n## 写这篇文章的起因\n\n今天朋友问有什么好的化妆棉推荐（女孩子最喜欢吃安利）。我说看是有什么用途咯，不同用途都有不同的化妆棉推荐，比如卸妆用一般化妆随便什么都无所谓啦，湿敷的话只用过一款就是尤妮佳省水1/2那一款。朋友就说用来敷城野医生控油收缩毛孔化妆水，觉得这个可以收缩毛孔，而且觉得毛孔好像真的变小了（都是假象！），听到这里我按捺不住跳起来就是一波科普，我要让我的朋友们科学护肤。\n\n## 什么才是毛孔粗大的真正原因\n\n我对毛孔很关心的一大原因在于我也受困于毛孔粗大问题，没错！就是小时候不懂事仗着有大把胶原蛋白使劲折腾什么也敢往脸上呼还使劲晒太阳把脸折腾坏了，靠近鼻子的脸颊毛孔比较粗大。再加上身边朋友的吐槽，让我知道我不是一个人，有很多人很在意毛孔粗大问题，而且！很多人对毛孔都没有正确的认识，不从根本去解决而采用简单粗暴的方法——化妆，使用厚厚的粉底遮住了毛孔，但是素颜的时候毛孔还是这么粗大。（废话讲的有点多）\n\n毛孔粗大的原因不外乎有三：\n\n- 皮脂分泌旺盛\n- 日光照射\n- 老化\n\n### 皮脂分泌旺盛\n\n皮脂分泌旺盛讲大白话就是出油多。\n\n我们每个毛孔里面不仅只有一根汗毛，它的侧壁上面往往连接着一个`皮脂腺`。皮脂腺最重要的作用是分泌`皮脂`（皮脂是皮肤屏障功能的重要组成），这些`皮脂`会从皮脂腺中流到毛囊的管道中，然后一路向上到达皮肤表面。均匀分布在皮肤表面的`皮脂`不仅仅能够润泽皮肤还有一定抗菌作用。\n\n![插皮脂图](http://p1cjg886l.bkt.clouddn.com/maokong3.jpg)\n\n#### 皮脂分泌旺盛为什么导致毛孔粗大\n\n`毛孔粗大`的原因，很大程度上是由于`皮脂`量大，来不及流出被堵住，原来排列得很紧致均匀的胶原蛋白队列，长期被一颗堵在毛孔里面的油脂挤压之后变性无法复原，然后毛孔就变大了。\n\n至于为什么会导致皮脂分泌量大，原因可能是多种的，有可能是激素原因，也有可能是由于不正当地使用产品导致，还有可能是因为身体疾病。\n\n#### 如何控制皮脂分泌\n\n想要控制油脂分泌达到控制毛孔的目的，一方面是注意身体健康和饮食均衡（很多皮肤问题这条都适用），另一方面可以通过护肤品来实现，比如`维A醇（醛）`、`果酸`、`水杨酸`、`烟酰胺`和`PCA锌`。目前只用过`烟酰胺`和`PCA锌`，对应的产品是ISDIN怡思丁控油调理乳液和OLAY小绿瓶（没有广告费没有广告费！！）个人体验，PCA锌见效快，烟酰胺就走温和持续路线，要坚持用很久才能见效。\n\n### 日光照射\n\n除了堵塞的油脂能伤害胶原蛋白之外，日光是另一个真正的杀手。日光中的紫外线激发出来的大量`氧自由基`不停进攻胶原蛋白，这样会造成大面积的皮肤松弛，而松弛的结果之一就是毛孔粗大。\n\nSo！！要注意防晒！！要防晒！！要防晒！！（重要的事情说三遍），听说我朋友从来不涂防晒霜老衲的心里一阵痛。\n\n### 老化\n\n基于以上两条，如果没有皮脂分泌过量和阳光照射，毛孔是不是不会粗大？想得美！！\n\n随着年龄的增长，我们终究是要老去的，我们慢慢地会失去皮肤的弹性，新生的胶原蛋白也没有原来的那么规整（胶原蛋白更新的周期是十年，可不可怕），这样毛孔就会慢慢变粗大。\n\nSo！使用抗老化的产品也可以缓解毛孔粗大的问题。抗老化的成分比如有`维生素C`、维A醇等。\n\n## 已经形成的粗大毛孔\n\n对于已经形成的粗大毛孔该怎么办？没什么办法，只有医美了。所以预防很重要！\n\n回到最初朋友讲的城野医生控油收缩毛孔化妆水可以收缩毛孔，其实这个产品主要是用`酸`来作为主要的功能支撑。\n\n![城野医生](http://p1cjg886l.bkt.clouddn.com/maokong.png)\n\n`乳酸`和`苹果酸`可以加快最表层皮肤老化角质层脱落过程，某种程度上缩小毛孔（已经被撑大了的毛孔是很难通过护肤品达到真正的缩小）。\n\n还有`薄荷氧基丙二醇`和`辣薄荷提取物`，这两个的主要功能就和`冰敷`差不多，有清凉感，让你在使用后能够短暂地感觉到效果，觉得毛孔有变小（醒醒吧，别骗自己了！！）\n\n\n\n讲这么多就是想让姑娘们理性护肤，别听微博大V安利了你就屁颠屁颠也去买来用，把脸作坏了不说，主要是我心疼钱啊。\n\n![](http://p1cjg886l.bkt.clouddn.com/maokong2.png)","source":"_posts/maokong.md","raw":"---\ntitle: 如何正确“反孔”\ndate: 2018-01-04 18:53:44\ntags: [毛孔, 护肤]\ncategories: 护肤\n---\n\n## 写这篇文章的起因\n\n今天朋友问有什么好的化妆棉推荐（女孩子最喜欢吃安利）。我说看是有什么用途咯，不同用途都有不同的化妆棉推荐，比如卸妆用一般化妆随便什么都无所谓啦，湿敷的话只用过一款就是尤妮佳省水1/2那一款。朋友就说用来敷城野医生控油收缩毛孔化妆水，觉得这个可以收缩毛孔，而且觉得毛孔好像真的变小了（都是假象！），听到这里我按捺不住跳起来就是一波科普，我要让我的朋友们科学护肤。\n\n## 什么才是毛孔粗大的真正原因\n\n我对毛孔很关心的一大原因在于我也受困于毛孔粗大问题，没错！就是小时候不懂事仗着有大把胶原蛋白使劲折腾什么也敢往脸上呼还使劲晒太阳把脸折腾坏了，靠近鼻子的脸颊毛孔比较粗大。再加上身边朋友的吐槽，让我知道我不是一个人，有很多人很在意毛孔粗大问题，而且！很多人对毛孔都没有正确的认识，不从根本去解决而采用简单粗暴的方法——化妆，使用厚厚的粉底遮住了毛孔，但是素颜的时候毛孔还是这么粗大。（废话讲的有点多）\n\n毛孔粗大的原因不外乎有三：\n\n- 皮脂分泌旺盛\n- 日光照射\n- 老化\n\n### 皮脂分泌旺盛\n\n皮脂分泌旺盛讲大白话就是出油多。\n\n我们每个毛孔里面不仅只有一根汗毛，它的侧壁上面往往连接着一个`皮脂腺`。皮脂腺最重要的作用是分泌`皮脂`（皮脂是皮肤屏障功能的重要组成），这些`皮脂`会从皮脂腺中流到毛囊的管道中，然后一路向上到达皮肤表面。均匀分布在皮肤表面的`皮脂`不仅仅能够润泽皮肤还有一定抗菌作用。\n\n![插皮脂图](http://p1cjg886l.bkt.clouddn.com/maokong3.jpg)\n\n#### 皮脂分泌旺盛为什么导致毛孔粗大\n\n`毛孔粗大`的原因，很大程度上是由于`皮脂`量大，来不及流出被堵住，原来排列得很紧致均匀的胶原蛋白队列，长期被一颗堵在毛孔里面的油脂挤压之后变性无法复原，然后毛孔就变大了。\n\n至于为什么会导致皮脂分泌量大，原因可能是多种的，有可能是激素原因，也有可能是由于不正当地使用产品导致，还有可能是因为身体疾病。\n\n#### 如何控制皮脂分泌\n\n想要控制油脂分泌达到控制毛孔的目的，一方面是注意身体健康和饮食均衡（很多皮肤问题这条都适用），另一方面可以通过护肤品来实现，比如`维A醇（醛）`、`果酸`、`水杨酸`、`烟酰胺`和`PCA锌`。目前只用过`烟酰胺`和`PCA锌`，对应的产品是ISDIN怡思丁控油调理乳液和OLAY小绿瓶（没有广告费没有广告费！！）个人体验，PCA锌见效快，烟酰胺就走温和持续路线，要坚持用很久才能见效。\n\n### 日光照射\n\n除了堵塞的油脂能伤害胶原蛋白之外，日光是另一个真正的杀手。日光中的紫外线激发出来的大量`氧自由基`不停进攻胶原蛋白，这样会造成大面积的皮肤松弛，而松弛的结果之一就是毛孔粗大。\n\nSo！！要注意防晒！！要防晒！！要防晒！！（重要的事情说三遍），听说我朋友从来不涂防晒霜老衲的心里一阵痛。\n\n### 老化\n\n基于以上两条，如果没有皮脂分泌过量和阳光照射，毛孔是不是不会粗大？想得美！！\n\n随着年龄的增长，我们终究是要老去的，我们慢慢地会失去皮肤的弹性，新生的胶原蛋白也没有原来的那么规整（胶原蛋白更新的周期是十年，可不可怕），这样毛孔就会慢慢变粗大。\n\nSo！使用抗老化的产品也可以缓解毛孔粗大的问题。抗老化的成分比如有`维生素C`、维A醇等。\n\n## 已经形成的粗大毛孔\n\n对于已经形成的粗大毛孔该怎么办？没什么办法，只有医美了。所以预防很重要！\n\n回到最初朋友讲的城野医生控油收缩毛孔化妆水可以收缩毛孔，其实这个产品主要是用`酸`来作为主要的功能支撑。\n\n![城野医生](http://p1cjg886l.bkt.clouddn.com/maokong.png)\n\n`乳酸`和`苹果酸`可以加快最表层皮肤老化角质层脱落过程，某种程度上缩小毛孔（已经被撑大了的毛孔是很难通过护肤品达到真正的缩小）。\n\n还有`薄荷氧基丙二醇`和`辣薄荷提取物`，这两个的主要功能就和`冰敷`差不多，有清凉感，让你在使用后能够短暂地感觉到效果，觉得毛孔有变小（醒醒吧，别骗自己了！！）\n\n\n\n讲这么多就是想让姑娘们理性护肤，别听微博大V安利了你就屁颠屁颠也去买来用，把脸作坏了不说，主要是我心疼钱啊。\n\n![](http://p1cjg886l.bkt.clouddn.com/maokong2.png)","slug":"maokong","published":1,"updated":"2018-08-17T07:35:36.760Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gva001toaqo06pszz4p","content":"<h2 id=\"写这篇文章的起因\"><a href=\"#写这篇文章的起因\" class=\"headerlink\" title=\"写这篇文章的起因\"></a>写这篇文章的起因</h2><p>今天朋友问有什么好的化妆棉推荐（女孩子最喜欢吃安利）。我说看是有什么用途咯，不同用途都有不同的化妆棉推荐，比如卸妆用一般化妆随便什么都无所谓啦，湿敷的话只用过一款就是尤妮佳省水1/2那一款。朋友就说用来敷城野医生控油收缩毛孔化妆水，觉得这个可以收缩毛孔，而且觉得毛孔好像真的变小了（都是假象！），听到这里我按捺不住跳起来就是一波科普，我要让我的朋友们科学护肤。</p>\n<h2 id=\"什么才是毛孔粗大的真正原因\"><a href=\"#什么才是毛孔粗大的真正原因\" class=\"headerlink\" title=\"什么才是毛孔粗大的真正原因\"></a>什么才是毛孔粗大的真正原因</h2><p>我对毛孔很关心的一大原因在于我也受困于毛孔粗大问题，没错！就是小时候不懂事仗着有大把胶原蛋白使劲折腾什么也敢往脸上呼还使劲晒太阳把脸折腾坏了，靠近鼻子的脸颊毛孔比较粗大。再加上身边朋友的吐槽，让我知道我不是一个人，有很多人很在意毛孔粗大问题，而且！很多人对毛孔都没有正确的认识，不从根本去解决而采用简单粗暴的方法——化妆，使用厚厚的粉底遮住了毛孔，但是素颜的时候毛孔还是这么粗大。（废话讲的有点多）</p>\n<p>毛孔粗大的原因不外乎有三：</p>\n<ul>\n<li>皮脂分泌旺盛</li>\n<li>日光照射</li>\n<li>老化</li>\n</ul>\n<h3 id=\"皮脂分泌旺盛\"><a href=\"#皮脂分泌旺盛\" class=\"headerlink\" title=\"皮脂分泌旺盛\"></a>皮脂分泌旺盛</h3><p>皮脂分泌旺盛讲大白话就是出油多。</p>\n<p>我们每个毛孔里面不仅只有一根汗毛，它的侧壁上面往往连接着一个<code>皮脂腺</code>。皮脂腺最重要的作用是分泌<code>皮脂</code>（皮脂是皮肤屏障功能的重要组成），这些<code>皮脂</code>会从皮脂腺中流到毛囊的管道中，然后一路向上到达皮肤表面。均匀分布在皮肤表面的<code>皮脂</code>不仅仅能够润泽皮肤还有一定抗菌作用。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/maokong3.jpg\" alt=\"插皮脂图\"></p>\n<h4 id=\"皮脂分泌旺盛为什么导致毛孔粗大\"><a href=\"#皮脂分泌旺盛为什么导致毛孔粗大\" class=\"headerlink\" title=\"皮脂分泌旺盛为什么导致毛孔粗大\"></a>皮脂分泌旺盛为什么导致毛孔粗大</h4><p><code>毛孔粗大</code>的原因，很大程度上是由于<code>皮脂</code>量大，来不及流出被堵住，原来排列得很紧致均匀的胶原蛋白队列，长期被一颗堵在毛孔里面的油脂挤压之后变性无法复原，然后毛孔就变大了。</p>\n<p>至于为什么会导致皮脂分泌量大，原因可能是多种的，有可能是激素原因，也有可能是由于不正当地使用产品导致，还有可能是因为身体疾病。</p>\n<h4 id=\"如何控制皮脂分泌\"><a href=\"#如何控制皮脂分泌\" class=\"headerlink\" title=\"如何控制皮脂分泌\"></a>如何控制皮脂分泌</h4><p>想要控制油脂分泌达到控制毛孔的目的，一方面是注意身体健康和饮食均衡（很多皮肤问题这条都适用），另一方面可以通过护肤品来实现，比如<code>维A醇（醛）</code>、<code>果酸</code>、<code>水杨酸</code>、<code>烟酰胺</code>和<code>PCA锌</code>。目前只用过<code>烟酰胺</code>和<code>PCA锌</code>，对应的产品是ISDIN怡思丁控油调理乳液和OLAY小绿瓶（没有广告费没有广告费！！）个人体验，PCA锌见效快，烟酰胺就走温和持续路线，要坚持用很久才能见效。</p>\n<h3 id=\"日光照射\"><a href=\"#日光照射\" class=\"headerlink\" title=\"日光照射\"></a>日光照射</h3><p>除了堵塞的油脂能伤害胶原蛋白之外，日光是另一个真正的杀手。日光中的紫外线激发出来的大量<code>氧自由基</code>不停进攻胶原蛋白，这样会造成大面积的皮肤松弛，而松弛的结果之一就是毛孔粗大。</p>\n<p>So！！要注意防晒！！要防晒！！要防晒！！（重要的事情说三遍），听说我朋友从来不涂防晒霜老衲的心里一阵痛。</p>\n<h3 id=\"老化\"><a href=\"#老化\" class=\"headerlink\" title=\"老化\"></a>老化</h3><p>基于以上两条，如果没有皮脂分泌过量和阳光照射，毛孔是不是不会粗大？想得美！！</p>\n<p>随着年龄的增长，我们终究是要老去的，我们慢慢地会失去皮肤的弹性，新生的胶原蛋白也没有原来的那么规整（胶原蛋白更新的周期是十年，可不可怕），这样毛孔就会慢慢变粗大。</p>\n<p>So！使用抗老化的产品也可以缓解毛孔粗大的问题。抗老化的成分比如有<code>维生素C</code>、维A醇等。</p>\n<h2 id=\"已经形成的粗大毛孔\"><a href=\"#已经形成的粗大毛孔\" class=\"headerlink\" title=\"已经形成的粗大毛孔\"></a>已经形成的粗大毛孔</h2><p>对于已经形成的粗大毛孔该怎么办？没什么办法，只有医美了。所以预防很重要！</p>\n<p>回到最初朋友讲的城野医生控油收缩毛孔化妆水可以收缩毛孔，其实这个产品主要是用<code>酸</code>来作为主要的功能支撑。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/maokong.png\" alt=\"城野医生\"></p>\n<p><code>乳酸</code>和<code>苹果酸</code>可以加快最表层皮肤老化角质层脱落过程，某种程度上缩小毛孔（已经被撑大了的毛孔是很难通过护肤品达到真正的缩小）。</p>\n<p>还有<code>薄荷氧基丙二醇</code>和<code>辣薄荷提取物</code>，这两个的主要功能就和<code>冰敷</code>差不多，有清凉感，让你在使用后能够短暂地感觉到效果，觉得毛孔有变小（醒醒吧，别骗自己了！！）</p>\n<p>讲这么多就是想让姑娘们理性护肤，别听微博大V安利了你就屁颠屁颠也去买来用，把脸作坏了不说，主要是我心疼钱啊。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/maokong2.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"写这篇文章的起因\"><a href=\"#写这篇文章的起因\" class=\"headerlink\" title=\"写这篇文章的起因\"></a>写这篇文章的起因</h2><p>今天朋友问有什么好的化妆棉推荐（女孩子最喜欢吃安利）。我说看是有什么用途咯，不同用途都有不同的化妆棉推荐，比如卸妆用一般化妆随便什么都无所谓啦，湿敷的话只用过一款就是尤妮佳省水1/2那一款。朋友就说用来敷城野医生控油收缩毛孔化妆水，觉得这个可以收缩毛孔，而且觉得毛孔好像真的变小了（都是假象！），听到这里我按捺不住跳起来就是一波科普，我要让我的朋友们科学护肤。</p>\n<h2 id=\"什么才是毛孔粗大的真正原因\"><a href=\"#什么才是毛孔粗大的真正原因\" class=\"headerlink\" title=\"什么才是毛孔粗大的真正原因\"></a>什么才是毛孔粗大的真正原因</h2><p>我对毛孔很关心的一大原因在于我也受困于毛孔粗大问题，没错！就是小时候不懂事仗着有大把胶原蛋白使劲折腾什么也敢往脸上呼还使劲晒太阳把脸折腾坏了，靠近鼻子的脸颊毛孔比较粗大。再加上身边朋友的吐槽，让我知道我不是一个人，有很多人很在意毛孔粗大问题，而且！很多人对毛孔都没有正确的认识，不从根本去解决而采用简单粗暴的方法——化妆，使用厚厚的粉底遮住了毛孔，但是素颜的时候毛孔还是这么粗大。（废话讲的有点多）</p>\n<p>毛孔粗大的原因不外乎有三：</p>\n<ul>\n<li>皮脂分泌旺盛</li>\n<li>日光照射</li>\n<li>老化</li>\n</ul>\n<h3 id=\"皮脂分泌旺盛\"><a href=\"#皮脂分泌旺盛\" class=\"headerlink\" title=\"皮脂分泌旺盛\"></a>皮脂分泌旺盛</h3><p>皮脂分泌旺盛讲大白话就是出油多。</p>\n<p>我们每个毛孔里面不仅只有一根汗毛，它的侧壁上面往往连接着一个<code>皮脂腺</code>。皮脂腺最重要的作用是分泌<code>皮脂</code>（皮脂是皮肤屏障功能的重要组成），这些<code>皮脂</code>会从皮脂腺中流到毛囊的管道中，然后一路向上到达皮肤表面。均匀分布在皮肤表面的<code>皮脂</code>不仅仅能够润泽皮肤还有一定抗菌作用。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/maokong3.jpg\" alt=\"插皮脂图\"></p>\n<h4 id=\"皮脂分泌旺盛为什么导致毛孔粗大\"><a href=\"#皮脂分泌旺盛为什么导致毛孔粗大\" class=\"headerlink\" title=\"皮脂分泌旺盛为什么导致毛孔粗大\"></a>皮脂分泌旺盛为什么导致毛孔粗大</h4><p><code>毛孔粗大</code>的原因，很大程度上是由于<code>皮脂</code>量大，来不及流出被堵住，原来排列得很紧致均匀的胶原蛋白队列，长期被一颗堵在毛孔里面的油脂挤压之后变性无法复原，然后毛孔就变大了。</p>\n<p>至于为什么会导致皮脂分泌量大，原因可能是多种的，有可能是激素原因，也有可能是由于不正当地使用产品导致，还有可能是因为身体疾病。</p>\n<h4 id=\"如何控制皮脂分泌\"><a href=\"#如何控制皮脂分泌\" class=\"headerlink\" title=\"如何控制皮脂分泌\"></a>如何控制皮脂分泌</h4><p>想要控制油脂分泌达到控制毛孔的目的，一方面是注意身体健康和饮食均衡（很多皮肤问题这条都适用），另一方面可以通过护肤品来实现，比如<code>维A醇（醛）</code>、<code>果酸</code>、<code>水杨酸</code>、<code>烟酰胺</code>和<code>PCA锌</code>。目前只用过<code>烟酰胺</code>和<code>PCA锌</code>，对应的产品是ISDIN怡思丁控油调理乳液和OLAY小绿瓶（没有广告费没有广告费！！）个人体验，PCA锌见效快，烟酰胺就走温和持续路线，要坚持用很久才能见效。</p>\n<h3 id=\"日光照射\"><a href=\"#日光照射\" class=\"headerlink\" title=\"日光照射\"></a>日光照射</h3><p>除了堵塞的油脂能伤害胶原蛋白之外，日光是另一个真正的杀手。日光中的紫外线激发出来的大量<code>氧自由基</code>不停进攻胶原蛋白，这样会造成大面积的皮肤松弛，而松弛的结果之一就是毛孔粗大。</p>\n<p>So！！要注意防晒！！要防晒！！要防晒！！（重要的事情说三遍），听说我朋友从来不涂防晒霜老衲的心里一阵痛。</p>\n<h3 id=\"老化\"><a href=\"#老化\" class=\"headerlink\" title=\"老化\"></a>老化</h3><p>基于以上两条，如果没有皮脂分泌过量和阳光照射，毛孔是不是不会粗大？想得美！！</p>\n<p>随着年龄的增长，我们终究是要老去的，我们慢慢地会失去皮肤的弹性，新生的胶原蛋白也没有原来的那么规整（胶原蛋白更新的周期是十年，可不可怕），这样毛孔就会慢慢变粗大。</p>\n<p>So！使用抗老化的产品也可以缓解毛孔粗大的问题。抗老化的成分比如有<code>维生素C</code>、维A醇等。</p>\n<h2 id=\"已经形成的粗大毛孔\"><a href=\"#已经形成的粗大毛孔\" class=\"headerlink\" title=\"已经形成的粗大毛孔\"></a>已经形成的粗大毛孔</h2><p>对于已经形成的粗大毛孔该怎么办？没什么办法，只有医美了。所以预防很重要！</p>\n<p>回到最初朋友讲的城野医生控油收缩毛孔化妆水可以收缩毛孔，其实这个产品主要是用<code>酸</code>来作为主要的功能支撑。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/maokong.png\" alt=\"城野医生\"></p>\n<p><code>乳酸</code>和<code>苹果酸</code>可以加快最表层皮肤老化角质层脱落过程，某种程度上缩小毛孔（已经被撑大了的毛孔是很难通过护肤品达到真正的缩小）。</p>\n<p>还有<code>薄荷氧基丙二醇</code>和<code>辣薄荷提取物</code>，这两个的主要功能就和<code>冰敷</code>差不多，有清凉感，让你在使用后能够短暂地感觉到效果，觉得毛孔有变小（醒醒吧，别骗自己了！！）</p>\n<p>讲这么多就是想让姑娘们理性护肤，别听微博大V安利了你就屁颠屁颠也去买来用，把脸作坏了不说，主要是我心疼钱啊。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/maokong2.png\" alt=\"\"></p>\n"},{"title":"从自动化测试到持续集成","date":"2017-12-20T08:53:47.000Z","_content":"\n## 背景\n\n简单直接点，这篇文章就是写如何将自动化测试跟持续集成挂钩起来，怎么将单元测试在jenkins上跑起来。\n\n持续集成整个过程大概是这样：\n\ndeveloper在本地工作，将本地工作push到代码仓库（可以是github公有仓库也可以是bitbucket私有仓库），然后会触发CI服务器（CI即持续集成服务器，CI服务器有很多，这里以jenkins做例子。）事先写好的脚本，脚本可以完成编译、单元测试等工作。最后如果代码没有问题则部署到开发环境。\n\n![JPG](http://p1cjg886l.bkt.clouddn.com/jenkins13.jpg)\n\n\n\n## 过程\n\n### 准备\n\n1. 在本地安装好jenkins并顺利跑起来\n2. 有jenkins账号\n\n### 创建jenkins项目\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins1.png)\n\n\n\n新建一个pipeline风格的项目，名称为unit-test\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins2.png)\n\n\n\n### Jenkins Job的基本配置\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins3.png)\n\n\n\npipeline script写的是需要执行的脚本，`git branch`是指要拉取的测试分支，`credentialsId`指拉取代码时需要的密钥，`url`指存放代码的仓库地址。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins4.png)\n\n点击`pipeline syntax`进入添加插件的页面\n\n### 如何配置在jenkins生成测试覆盖率报告\n\n进入添加插件页面后，选择`publish HTML reports`插件\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins5.png)\n\n填写单元测试覆盖率报告路径和jenkins生成测试报告存放路径，点击`代码段生成器`按钮生成代码\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins6.png)\n\n\n\n将代码生成器生成的代码粘贴到`pipeline script`\n\n```shell\npipeline {\n    agent { label 'slave0' }\n    stages {\n        stage('prepare') {\n            steps {\n                git branch: '需要测试的分支', credentialsId: '用于拉取代码的密钥', url: 'ssh://代码仓库地址'\n            }\n        }\n        stage('build') {\n            steps {\n                sh 'cnpm install'\n                sh 'npm run test' // 执行单元测试\n                publishHTML (target: [\n                  allowMissing: false,\n                  alwaysLinkToLastBuild: false,\n                  keepAll: true,\n                  reportDir: 'test/unit/coverage/lcov-report', // 项目单元测试覆盖率报告存放路径\n                  reportFiles: 'index.html', // 项目单元测试覆盖率报告文件\n                  reportName: \"RCov Report\" // 在jenkins生成的测试报告\n                ])\n            }\n        }\n    }\n}\n```\n\n\n\n### 执行pipeline脚本\n\n保存后点击`立即构建`开始执行pipeline脚本。若是pipeline脚本有变动则需点`立即构建`，如果只是测试代码有变动则点`Replay`即可。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins9.png)\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins10.png)\n\n不管构建成不成功都会有一个日志`Logs`。若成功点开可查看测试结果，若失败可以查看失败原因然后调整再次进行构建。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins11.png)\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins12.png)\n\n\n\n### 查看测试报告\n\n构建成功后会生成测试报告，点击`RCov Report`查看单元测试覆盖率。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins7.png)\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins8.png)\n\n\n\n## 最后\n\n写了这么多，又是自动化测试又是持续集成什么的看似很高大上，但是做完这些也仅仅是入门而已，没错就是入门。离真正做到自动化还远着呢。私以为，搭环境这些都不难，难的是如何把单元测试用例写好，如何坚持下去。","source":"_posts/jenkins.md","raw":"---\ntitle: 从自动化测试到持续集成\ndate: 2017-12-20 16:53:47\ntags: [jenkins, 持续集成, 自动化测试]\ncategories: 测试\n---\n\n## 背景\n\n简单直接点，这篇文章就是写如何将自动化测试跟持续集成挂钩起来，怎么将单元测试在jenkins上跑起来。\n\n持续集成整个过程大概是这样：\n\ndeveloper在本地工作，将本地工作push到代码仓库（可以是github公有仓库也可以是bitbucket私有仓库），然后会触发CI服务器（CI即持续集成服务器，CI服务器有很多，这里以jenkins做例子。）事先写好的脚本，脚本可以完成编译、单元测试等工作。最后如果代码没有问题则部署到开发环境。\n\n![JPG](http://p1cjg886l.bkt.clouddn.com/jenkins13.jpg)\n\n\n\n## 过程\n\n### 准备\n\n1. 在本地安装好jenkins并顺利跑起来\n2. 有jenkins账号\n\n### 创建jenkins项目\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins1.png)\n\n\n\n新建一个pipeline风格的项目，名称为unit-test\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins2.png)\n\n\n\n### Jenkins Job的基本配置\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins3.png)\n\n\n\npipeline script写的是需要执行的脚本，`git branch`是指要拉取的测试分支，`credentialsId`指拉取代码时需要的密钥，`url`指存放代码的仓库地址。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins4.png)\n\n点击`pipeline syntax`进入添加插件的页面\n\n### 如何配置在jenkins生成测试覆盖率报告\n\n进入添加插件页面后，选择`publish HTML reports`插件\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins5.png)\n\n填写单元测试覆盖率报告路径和jenkins生成测试报告存放路径，点击`代码段生成器`按钮生成代码\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins6.png)\n\n\n\n将代码生成器生成的代码粘贴到`pipeline script`\n\n```shell\npipeline {\n    agent { label 'slave0' }\n    stages {\n        stage('prepare') {\n            steps {\n                git branch: '需要测试的分支', credentialsId: '用于拉取代码的密钥', url: 'ssh://代码仓库地址'\n            }\n        }\n        stage('build') {\n            steps {\n                sh 'cnpm install'\n                sh 'npm run test' // 执行单元测试\n                publishHTML (target: [\n                  allowMissing: false,\n                  alwaysLinkToLastBuild: false,\n                  keepAll: true,\n                  reportDir: 'test/unit/coverage/lcov-report', // 项目单元测试覆盖率报告存放路径\n                  reportFiles: 'index.html', // 项目单元测试覆盖率报告文件\n                  reportName: \"RCov Report\" // 在jenkins生成的测试报告\n                ])\n            }\n        }\n    }\n}\n```\n\n\n\n### 执行pipeline脚本\n\n保存后点击`立即构建`开始执行pipeline脚本。若是pipeline脚本有变动则需点`立即构建`，如果只是测试代码有变动则点`Replay`即可。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins9.png)\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins10.png)\n\n不管构建成不成功都会有一个日志`Logs`。若成功点开可查看测试结果，若失败可以查看失败原因然后调整再次进行构建。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins11.png)\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins12.png)\n\n\n\n### 查看测试报告\n\n构建成功后会生成测试报告，点击`RCov Report`查看单元测试覆盖率。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins7.png)\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/jenkins8.png)\n\n\n\n## 最后\n\n写了这么多，又是自动化测试又是持续集成什么的看似很高大上，但是做完这些也仅仅是入门而已，没错就是入门。离真正做到自动化还远着呢。私以为，搭环境这些都不难，难的是如何把单元测试用例写好，如何坚持下去。","slug":"jenkins","published":1,"updated":"2018-08-17T07:35:36.760Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvb001woaqo8n2gw919","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>简单直接点，这篇文章就是写如何将自动化测试跟持续集成挂钩起来，怎么将单元测试在jenkins上跑起来。</p>\n<p>持续集成整个过程大概是这样：</p>\n<p>developer在本地工作，将本地工作push到代码仓库（可以是github公有仓库也可以是bitbucket私有仓库），然后会触发CI服务器（CI即持续集成服务器，CI服务器有很多，这里以jenkins做例子。）事先写好的脚本，脚本可以完成编译、单元测试等工作。最后如果代码没有问题则部署到开发环境。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins13.jpg\" alt=\"JPG\"></p>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><ol>\n<li>在本地安装好jenkins并顺利跑起来</li>\n<li>有jenkins账号</li>\n</ol>\n<h3 id=\"创建jenkins项目\"><a href=\"#创建jenkins项目\" class=\"headerlink\" title=\"创建jenkins项目\"></a>创建jenkins项目</h3><p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins1.png\" alt=\"PNG\"></p>\n<p>新建一个pipeline风格的项目，名称为unit-test</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins2.png\" alt=\"PNG\"></p>\n<h3 id=\"Jenkins-Job的基本配置\"><a href=\"#Jenkins-Job的基本配置\" class=\"headerlink\" title=\"Jenkins Job的基本配置\"></a>Jenkins Job的基本配置</h3><p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins3.png\" alt=\"PNG\"></p>\n<p>pipeline script写的是需要执行的脚本，<code>git branch</code>是指要拉取的测试分支，<code>credentialsId</code>指拉取代码时需要的密钥，<code>url</code>指存放代码的仓库地址。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins4.png\" alt=\"PNG\"></p>\n<p>点击<code>pipeline syntax</code>进入添加插件的页面</p>\n<h3 id=\"如何配置在jenkins生成测试覆盖率报告\"><a href=\"#如何配置在jenkins生成测试覆盖率报告\" class=\"headerlink\" title=\"如何配置在jenkins生成测试覆盖率报告\"></a>如何配置在jenkins生成测试覆盖率报告</h3><p>进入添加插件页面后，选择<code>publish HTML reports</code>插件</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins5.png\" alt=\"PNG\"></p>\n<p>填写单元测试覆盖率报告路径和jenkins生成测试报告存放路径，点击<code>代码段生成器</code>按钮生成代码</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins6.png\" alt=\"PNG\"></p>\n<p>将代码生成器生成的代码粘贴到<code>pipeline script</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipeline &#123;</span><br><span class=\"line\">    agent &#123; label 'slave0' &#125;</span><br><span class=\"line\">    stages &#123;</span><br><span class=\"line\">        stage('prepare') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                git branch: '需要测试的分支', credentialsId: '用于拉取代码的密钥', url: 'ssh://代码仓库地址'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage('build') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                sh 'cnpm install'</span><br><span class=\"line\">                sh 'npm run test' // 执行单元测试</span><br><span class=\"line\">                publishHTML (target: [</span><br><span class=\"line\">                  allowMissing: false,</span><br><span class=\"line\">                  alwaysLinkToLastBuild: false,</span><br><span class=\"line\">                  keepAll: true,</span><br><span class=\"line\">                  reportDir: 'test/unit/coverage/lcov-report', // 项目单元测试覆盖率报告存放路径</span><br><span class=\"line\">                  reportFiles: 'index.html', // 项目单元测试覆盖率报告文件</span><br><span class=\"line\">                  reportName: \"RCov Report\" // 在jenkins生成的测试报告</span><br><span class=\"line\">                ])</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"执行pipeline脚本\"><a href=\"#执行pipeline脚本\" class=\"headerlink\" title=\"执行pipeline脚本\"></a>执行pipeline脚本</h3><p>保存后点击<code>立即构建</code>开始执行pipeline脚本。若是pipeline脚本有变动则需点<code>立即构建</code>，如果只是测试代码有变动则点<code>Replay</code>即可。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins9.png\" alt=\"PNG\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins10.png\" alt=\"PNG\"></p>\n<p>不管构建成不成功都会有一个日志<code>Logs</code>。若成功点开可查看测试结果，若失败可以查看失败原因然后调整再次进行构建。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins11.png\" alt=\"PNG\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins12.png\" alt=\"PNG\"></p>\n<h3 id=\"查看测试报告\"><a href=\"#查看测试报告\" class=\"headerlink\" title=\"查看测试报告\"></a>查看测试报告</h3><p>构建成功后会生成测试报告，点击<code>RCov Report</code>查看单元测试覆盖率。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins7.png\" alt=\"PNG\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins8.png\" alt=\"PNG\"></p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>写了这么多，又是自动化测试又是持续集成什么的看似很高大上，但是做完这些也仅仅是入门而已，没错就是入门。离真正做到自动化还远着呢。私以为，搭环境这些都不难，难的是如何把单元测试用例写好，如何坚持下去。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>简单直接点，这篇文章就是写如何将自动化测试跟持续集成挂钩起来，怎么将单元测试在jenkins上跑起来。</p>\n<p>持续集成整个过程大概是这样：</p>\n<p>developer在本地工作，将本地工作push到代码仓库（可以是github公有仓库也可以是bitbucket私有仓库），然后会触发CI服务器（CI即持续集成服务器，CI服务器有很多，这里以jenkins做例子。）事先写好的脚本，脚本可以完成编译、单元测试等工作。最后如果代码没有问题则部署到开发环境。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins13.jpg\" alt=\"JPG\"></p>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><ol>\n<li>在本地安装好jenkins并顺利跑起来</li>\n<li>有jenkins账号</li>\n</ol>\n<h3 id=\"创建jenkins项目\"><a href=\"#创建jenkins项目\" class=\"headerlink\" title=\"创建jenkins项目\"></a>创建jenkins项目</h3><p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins1.png\" alt=\"PNG\"></p>\n<p>新建一个pipeline风格的项目，名称为unit-test</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins2.png\" alt=\"PNG\"></p>\n<h3 id=\"Jenkins-Job的基本配置\"><a href=\"#Jenkins-Job的基本配置\" class=\"headerlink\" title=\"Jenkins Job的基本配置\"></a>Jenkins Job的基本配置</h3><p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins3.png\" alt=\"PNG\"></p>\n<p>pipeline script写的是需要执行的脚本，<code>git branch</code>是指要拉取的测试分支，<code>credentialsId</code>指拉取代码时需要的密钥，<code>url</code>指存放代码的仓库地址。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins4.png\" alt=\"PNG\"></p>\n<p>点击<code>pipeline syntax</code>进入添加插件的页面</p>\n<h3 id=\"如何配置在jenkins生成测试覆盖率报告\"><a href=\"#如何配置在jenkins生成测试覆盖率报告\" class=\"headerlink\" title=\"如何配置在jenkins生成测试覆盖率报告\"></a>如何配置在jenkins生成测试覆盖率报告</h3><p>进入添加插件页面后，选择<code>publish HTML reports</code>插件</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins5.png\" alt=\"PNG\"></p>\n<p>填写单元测试覆盖率报告路径和jenkins生成测试报告存放路径，点击<code>代码段生成器</code>按钮生成代码</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins6.png\" alt=\"PNG\"></p>\n<p>将代码生成器生成的代码粘贴到<code>pipeline script</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipeline &#123;</span><br><span class=\"line\">    agent &#123; label 'slave0' &#125;</span><br><span class=\"line\">    stages &#123;</span><br><span class=\"line\">        stage('prepare') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                git branch: '需要测试的分支', credentialsId: '用于拉取代码的密钥', url: 'ssh://代码仓库地址'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage('build') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                sh 'cnpm install'</span><br><span class=\"line\">                sh 'npm run test' // 执行单元测试</span><br><span class=\"line\">                publishHTML (target: [</span><br><span class=\"line\">                  allowMissing: false,</span><br><span class=\"line\">                  alwaysLinkToLastBuild: false,</span><br><span class=\"line\">                  keepAll: true,</span><br><span class=\"line\">                  reportDir: 'test/unit/coverage/lcov-report', // 项目单元测试覆盖率报告存放路径</span><br><span class=\"line\">                  reportFiles: 'index.html', // 项目单元测试覆盖率报告文件</span><br><span class=\"line\">                  reportName: \"RCov Report\" // 在jenkins生成的测试报告</span><br><span class=\"line\">                ])</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"执行pipeline脚本\"><a href=\"#执行pipeline脚本\" class=\"headerlink\" title=\"执行pipeline脚本\"></a>执行pipeline脚本</h3><p>保存后点击<code>立即构建</code>开始执行pipeline脚本。若是pipeline脚本有变动则需点<code>立即构建</code>，如果只是测试代码有变动则点<code>Replay</code>即可。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins9.png\" alt=\"PNG\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins10.png\" alt=\"PNG\"></p>\n<p>不管构建成不成功都会有一个日志<code>Logs</code>。若成功点开可查看测试结果，若失败可以查看失败原因然后调整再次进行构建。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins11.png\" alt=\"PNG\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins12.png\" alt=\"PNG\"></p>\n<h3 id=\"查看测试报告\"><a href=\"#查看测试报告\" class=\"headerlink\" title=\"查看测试报告\"></a>查看测试报告</h3><p>构建成功后会生成测试报告，点击<code>RCov Report</code>查看单元测试覆盖率。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins7.png\" alt=\"PNG\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/jenkins8.png\" alt=\"PNG\"></p>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>写了这么多，又是自动化测试又是持续集成什么的看似很高大上，但是做完这些也仅仅是入门而已，没错就是入门。离真正做到自动化还远着呢。私以为，搭环境这些都不难，难的是如何把单元测试用例写好，如何坚持下去。</p>\n"},{"title":"回顾2017","date":"2017-12-14T15:18:38.000Z","_content":"\n2017年快结束了，觉得今年特别值得写一写。\n\n\n\n#### 关于工作\n\n工作有3个月了，这期间学到了很多也认识了很多人。离开象牙塔步入社会让我知道自己有很多不足之处，需要学习的东西特别多。这几个月迷茫的时候沮丧的时候特别多，好在身边的人都没有放弃自己，千言万语说不出，希望自己2018年可以做的更好。\n\n#### 关于生死\n\n明天和意外你不知道哪一个先来。从前只是觉得这是一句很鸡汤的话而已，但是外婆的去世让我渐渐理解这句话。回乡下参加葬礼，很多繁冗的规矩让我觉得反感，逝者已逝哪里知道这些，后面看了蔡澜先生的书才理解，生者是想用这种方式让逝者永远活着，活在我们的脑海里，坚信逝者是有灵魂能看得到我们在用这种方式缅怀他们。就像我时常恍惚爷爷并没有走，脑子里有他鲜活的模样，这次轮到外婆也活在了我的脑海里。珍惜当下，活得开心。\n\n#### 关于2018\n\n这几个月的经历让我回首望去觉得我这大学虚度了，当初在学校信誓旦旦地说我不会怀念在学校的日子，现在我反悔了，我很怀念，让我再回到大一，我决不会过得浑浑噩噩，学习前端也不会只停留在表面，要把基础学扎实，很多很多想法，但回不去了，我们只能往前走。\n\n2018，定个小目标：\n\n- 好好完成毕业设计，开开心心毕业，给大学生涯画个圆满的句号\n- 努力成为一名合格的前端人，好好赚钱\n- 培养一个兴趣，比如射箭比如游泳比如书法\n- 多陪家人\n- 多去看看世界，2018年一定要去趟越南","source":"_posts/newyears.md","raw":"---\ntitle: 回顾2017\ndate: 2017-12-14 23:18:38\ntags: 2017\ncategories: 总结\n---\n\n2017年快结束了，觉得今年特别值得写一写。\n\n\n\n#### 关于工作\n\n工作有3个月了，这期间学到了很多也认识了很多人。离开象牙塔步入社会让我知道自己有很多不足之处，需要学习的东西特别多。这几个月迷茫的时候沮丧的时候特别多，好在身边的人都没有放弃自己，千言万语说不出，希望自己2018年可以做的更好。\n\n#### 关于生死\n\n明天和意外你不知道哪一个先来。从前只是觉得这是一句很鸡汤的话而已，但是外婆的去世让我渐渐理解这句话。回乡下参加葬礼，很多繁冗的规矩让我觉得反感，逝者已逝哪里知道这些，后面看了蔡澜先生的书才理解，生者是想用这种方式让逝者永远活着，活在我们的脑海里，坚信逝者是有灵魂能看得到我们在用这种方式缅怀他们。就像我时常恍惚爷爷并没有走，脑子里有他鲜活的模样，这次轮到外婆也活在了我的脑海里。珍惜当下，活得开心。\n\n#### 关于2018\n\n这几个月的经历让我回首望去觉得我这大学虚度了，当初在学校信誓旦旦地说我不会怀念在学校的日子，现在我反悔了，我很怀念，让我再回到大一，我决不会过得浑浑噩噩，学习前端也不会只停留在表面，要把基础学扎实，很多很多想法，但回不去了，我们只能往前走。\n\n2018，定个小目标：\n\n- 好好完成毕业设计，开开心心毕业，给大学生涯画个圆满的句号\n- 努力成为一名合格的前端人，好好赚钱\n- 培养一个兴趣，比如射箭比如游泳比如书法\n- 多陪家人\n- 多去看看世界，2018年一定要去趟越南","slug":"newyears","published":1,"updated":"2018-08-17T07:35:36.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvc0020oaqo4hgaoax2","content":"<p>2017年快结束了，觉得今年特别值得写一写。</p>\n<h4 id=\"关于工作\"><a href=\"#关于工作\" class=\"headerlink\" title=\"关于工作\"></a>关于工作</h4><p>工作有3个月了，这期间学到了很多也认识了很多人。离开象牙塔步入社会让我知道自己有很多不足之处，需要学习的东西特别多。这几个月迷茫的时候沮丧的时候特别多，好在身边的人都没有放弃自己，千言万语说不出，希望自己2018年可以做的更好。</p>\n<h4 id=\"关于生死\"><a href=\"#关于生死\" class=\"headerlink\" title=\"关于生死\"></a>关于生死</h4><p>明天和意外你不知道哪一个先来。从前只是觉得这是一句很鸡汤的话而已，但是外婆的去世让我渐渐理解这句话。回乡下参加葬礼，很多繁冗的规矩让我觉得反感，逝者已逝哪里知道这些，后面看了蔡澜先生的书才理解，生者是想用这种方式让逝者永远活着，活在我们的脑海里，坚信逝者是有灵魂能看得到我们在用这种方式缅怀他们。就像我时常恍惚爷爷并没有走，脑子里有他鲜活的模样，这次轮到外婆也活在了我的脑海里。珍惜当下，活得开心。</p>\n<h4 id=\"关于2018\"><a href=\"#关于2018\" class=\"headerlink\" title=\"关于2018\"></a>关于2018</h4><p>这几个月的经历让我回首望去觉得我这大学虚度了，当初在学校信誓旦旦地说我不会怀念在学校的日子，现在我反悔了，我很怀念，让我再回到大一，我决不会过得浑浑噩噩，学习前端也不会只停留在表面，要把基础学扎实，很多很多想法，但回不去了，我们只能往前走。</p>\n<p>2018，定个小目标：</p>\n<ul>\n<li>好好完成毕业设计，开开心心毕业，给大学生涯画个圆满的句号</li>\n<li>努力成为一名合格的前端人，好好赚钱</li>\n<li>培养一个兴趣，比如射箭比如游泳比如书法</li>\n<li>多陪家人</li>\n<li>多去看看世界，2018年一定要去趟越南</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>2017年快结束了，觉得今年特别值得写一写。</p>\n<h4 id=\"关于工作\"><a href=\"#关于工作\" class=\"headerlink\" title=\"关于工作\"></a>关于工作</h4><p>工作有3个月了，这期间学到了很多也认识了很多人。离开象牙塔步入社会让我知道自己有很多不足之处，需要学习的东西特别多。这几个月迷茫的时候沮丧的时候特别多，好在身边的人都没有放弃自己，千言万语说不出，希望自己2018年可以做的更好。</p>\n<h4 id=\"关于生死\"><a href=\"#关于生死\" class=\"headerlink\" title=\"关于生死\"></a>关于生死</h4><p>明天和意外你不知道哪一个先来。从前只是觉得这是一句很鸡汤的话而已，但是外婆的去世让我渐渐理解这句话。回乡下参加葬礼，很多繁冗的规矩让我觉得反感，逝者已逝哪里知道这些，后面看了蔡澜先生的书才理解，生者是想用这种方式让逝者永远活着，活在我们的脑海里，坚信逝者是有灵魂能看得到我们在用这种方式缅怀他们。就像我时常恍惚爷爷并没有走，脑子里有他鲜活的模样，这次轮到外婆也活在了我的脑海里。珍惜当下，活得开心。</p>\n<h4 id=\"关于2018\"><a href=\"#关于2018\" class=\"headerlink\" title=\"关于2018\"></a>关于2018</h4><p>这几个月的经历让我回首望去觉得我这大学虚度了，当初在学校信誓旦旦地说我不会怀念在学校的日子，现在我反悔了，我很怀念，让我再回到大一，我决不会过得浑浑噩噩，学习前端也不会只停留在表面，要把基础学扎实，很多很多想法，但回不去了，我们只能往前走。</p>\n<p>2018，定个小目标：</p>\n<ul>\n<li>好好完成毕业设计，开开心心毕业，给大学生涯画个圆满的句号</li>\n<li>努力成为一名合格的前端人，好好赚钱</li>\n<li>培养一个兴趣，比如射箭比如游泳比如书法</li>\n<li>多陪家人</li>\n<li>多去看看世界，2018年一定要去趟越南</li>\n</ul>\n"},{"title":"详解object.is()与比较操作符“===”和“==”","date":"2018-06-28T10:43:54.000Z","_content":"\n`==`操作在需要的情况下自动进行类型转换，`===`操作不会执行任何转换。\n\n例如：\n\n> - [10] == 10  // true,自动转换为相同类型\n> - [10] === 10 // false，不会进行类型转换\n> - [] == 0 // true\n> - [] === 0 //false\n> - ' ' == false // true\n> - ' ' === false // false\n\n\n\n在ES6中，`Object.is()`类似与 `===`，但是在`===`基础上特别处理了`NaN`、`-0`、和`+0`，保证`+0`和`-0`不再相等，但`NaN`和`NaN`相等，即`Object.is(NaN, NaN)会返回true`。\n\n以下情况为`true`\n\n> - Object.is(undefined, undefined)\n> - Object.is(null, null)\n> - Object.is(true, true)\n> - Object.is(false, false)\n> - Object.is(+0, -0)\n> - Object.is(NaN, NaN)\n> - 两个值是由相同个数的字符按照相同的顺序组成的字符串\n> - 两个值指向同一个对象\n> - 两个值都是数字并且都是除零和 NaN 外的其它同一个数字\n\n","source":"_posts/object.md","raw":"---\ntitle: 详解object.is()与比较操作符“===”和“==”\ndate: 2018-06-28 18:43:54\ntags: [Object.is()]\ncategories: JS\n---\n\n`==`操作在需要的情况下自动进行类型转换，`===`操作不会执行任何转换。\n\n例如：\n\n> - [10] == 10  // true,自动转换为相同类型\n> - [10] === 10 // false，不会进行类型转换\n> - [] == 0 // true\n> - [] === 0 //false\n> - ' ' == false // true\n> - ' ' === false // false\n\n\n\n在ES6中，`Object.is()`类似与 `===`，但是在`===`基础上特别处理了`NaN`、`-0`、和`+0`，保证`+0`和`-0`不再相等，但`NaN`和`NaN`相等，即`Object.is(NaN, NaN)会返回true`。\n\n以下情况为`true`\n\n> - Object.is(undefined, undefined)\n> - Object.is(null, null)\n> - Object.is(true, true)\n> - Object.is(false, false)\n> - Object.is(+0, -0)\n> - Object.is(NaN, NaN)\n> - 两个值是由相同个数的字符按照相同的顺序组成的字符串\n> - 两个值指向同一个对象\n> - 两个值都是数字并且都是除零和 NaN 外的其它同一个数字\n\n","slug":"object","published":1,"updated":"2018-08-17T07:35:36.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvd0022oaqoi8khrjx7","content":"<p><code>==</code>操作在需要的情况下自动进行类型转换，<code>===</code>操作不会执行任何转换。</p>\n<p>例如：</p>\n<blockquote>\n<ul>\n<li>[10] == 10  // true,自动转换为相同类型</li>\n<li>[10] === 10 // false，不会进行类型转换</li>\n<li>[] == 0 // true</li>\n<li>[] === 0 //false</li>\n<li>‘ ‘ == false // true</li>\n<li>‘ ‘ === false // false</li>\n</ul>\n</blockquote>\n<p>在ES6中，<code>Object.is()</code>类似与 <code>===</code>，但是在<code>===</code>基础上特别处理了<code>NaN</code>、<code>-0</code>、和<code>+0</code>，保证<code>+0</code>和<code>-0</code>不再相等，但<code>NaN</code>和<code>NaN</code>相等，即<code>Object.is(NaN, NaN)会返回true</code>。</p>\n<p>以下情况为<code>true</code></p>\n<blockquote>\n<ul>\n<li>Object.is(undefined, undefined)</li>\n<li>Object.is(null, null)</li>\n<li>Object.is(true, true)</li>\n<li>Object.is(false, false)</li>\n<li>Object.is(+0, -0)</li>\n<li>Object.is(NaN, NaN)</li>\n<li>两个值是由相同个数的字符按照相同的顺序组成的字符串</li>\n<li>两个值指向同一个对象</li>\n<li>两个值都是数字并且都是除零和 NaN 外的其它同一个数字</li>\n</ul>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p><code>==</code>操作在需要的情况下自动进行类型转换，<code>===</code>操作不会执行任何转换。</p>\n<p>例如：</p>\n<blockquote>\n<ul>\n<li>[10] == 10  // true,自动转换为相同类型</li>\n<li>[10] === 10 // false，不会进行类型转换</li>\n<li>[] == 0 // true</li>\n<li>[] === 0 //false</li>\n<li>‘ ‘ == false // true</li>\n<li>‘ ‘ === false // false</li>\n</ul>\n</blockquote>\n<p>在ES6中，<code>Object.is()</code>类似与 <code>===</code>，但是在<code>===</code>基础上特别处理了<code>NaN</code>、<code>-0</code>、和<code>+0</code>，保证<code>+0</code>和<code>-0</code>不再相等，但<code>NaN</code>和<code>NaN</code>相等，即<code>Object.is(NaN, NaN)会返回true</code>。</p>\n<p>以下情况为<code>true</code></p>\n<blockquote>\n<ul>\n<li>Object.is(undefined, undefined)</li>\n<li>Object.is(null, null)</li>\n<li>Object.is(true, true)</li>\n<li>Object.is(false, false)</li>\n<li>Object.is(+0, -0)</li>\n<li>Object.is(NaN, NaN)</li>\n<li>两个值是由相同个数的字符按照相同的顺序组成的字符串</li>\n<li>两个值指向同一个对象</li>\n<li>两个值都是数字并且都是除零和 NaN 外的其它同一个数字</li>\n</ul>\n</blockquote>\n"},{"title":"在Nuxt.js项目中如何使用ElementUI","date":"2018-04-04T08:17:34.000Z","_content":"\n## 背景\n\n在写后台管理系统的界面，发现很难写出一个好看的表单（主要是懒），于是想用UI插件，首选当然是熟悉的ElementUI，之前都是在Vue项目中使用的ElementUI，这次第一次玩Nuxt，不知道该怎么取引用，当然首选是[官网教程-插件的使用](https://zh.nuxtjs.org/guide/plugins)。\n\n在Nuxt中使用ElementUI很简单，只需要三步：\n\n1. 安装ElementUI `npm i element-ui -S`\n2. 修改nuxt配置文件`nuxt.config.js`，添加以下内容\n3. 在plugins文件夹下新建一个文件`element-ui.js`\n\n\n\n## 操作\n\n##### nuxt.config.js\n\n```js\nmodule.exports = {\n  build: {\n    vendor: ['axios', 'element-ui']\n  },\n  css: [\n    { src: 'element-ui/lib/theme-chalk/index.css', ssr: true }\n  ],\n  babel: {\n    \"plugins\": [[\"component\", [\n      {\n        \"libraryName\": \"element-ui\",\n        \"styleLibraryName\": \"theme-default\"\n      },\n      'transform-async-to-generator',\n      'transform-runtime'\n    ]]],\n    comments: true\n  },\n  plugins: [\n    '~plugins/element-ui'\n  ]\n}\n\n```\n\n##### element-ui.js\n\n```js\nimport Vue from 'vue'\nimport ElementUI from 'element-ui'\n\nVue.use(ElementUI)\n\n```\n\n","source":"_posts/nuxt-element.md","raw":"---\ntitle: 在Nuxt.js项目中如何使用ElementUI\ndate: 2018-04-04 16:17:34\ntags: [Nuxt.js, ElementUI]\ncategories: 教程\n---\n\n## 背景\n\n在写后台管理系统的界面，发现很难写出一个好看的表单（主要是懒），于是想用UI插件，首选当然是熟悉的ElementUI，之前都是在Vue项目中使用的ElementUI，这次第一次玩Nuxt，不知道该怎么取引用，当然首选是[官网教程-插件的使用](https://zh.nuxtjs.org/guide/plugins)。\n\n在Nuxt中使用ElementUI很简单，只需要三步：\n\n1. 安装ElementUI `npm i element-ui -S`\n2. 修改nuxt配置文件`nuxt.config.js`，添加以下内容\n3. 在plugins文件夹下新建一个文件`element-ui.js`\n\n\n\n## 操作\n\n##### nuxt.config.js\n\n```js\nmodule.exports = {\n  build: {\n    vendor: ['axios', 'element-ui']\n  },\n  css: [\n    { src: 'element-ui/lib/theme-chalk/index.css', ssr: true }\n  ],\n  babel: {\n    \"plugins\": [[\"component\", [\n      {\n        \"libraryName\": \"element-ui\",\n        \"styleLibraryName\": \"theme-default\"\n      },\n      'transform-async-to-generator',\n      'transform-runtime'\n    ]]],\n    comments: true\n  },\n  plugins: [\n    '~plugins/element-ui'\n  ]\n}\n\n```\n\n##### element-ui.js\n\n```js\nimport Vue from 'vue'\nimport ElementUI from 'element-ui'\n\nVue.use(ElementUI)\n\n```\n\n","slug":"nuxt-element","published":1,"updated":"2018-08-17T07:35:36.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gve0026oaqoup8s1svx","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>在写后台管理系统的界面，发现很难写出一个好看的表单（主要是懒），于是想用UI插件，首选当然是熟悉的ElementUI，之前都是在Vue项目中使用的ElementUI，这次第一次玩Nuxt，不知道该怎么取引用，当然首选是<a href=\"https://zh.nuxtjs.org/guide/plugins\" target=\"_blank\" rel=\"noopener\">官网教程-插件的使用</a>。</p>\n<p>在Nuxt中使用ElementUI很简单，只需要三步：</p>\n<ol>\n<li>安装ElementUI <code>npm i element-ui -S</code></li>\n<li>修改nuxt配置文件<code>nuxt.config.js</code>，添加以下内容</li>\n<li>在plugins文件夹下新建一个文件<code>element-ui.js</code></li>\n</ol>\n<h2 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h2><h5 id=\"nuxt-config-js\"><a href=\"#nuxt-config-js\" class=\"headerlink\" title=\"nuxt.config.js\"></a>nuxt.config.js</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  build: &#123;</span><br><span class=\"line\">    vendor: [<span class=\"string\">'axios'</span>, <span class=\"string\">'element-ui'</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  css: [</span><br><span class=\"line\">    &#123; <span class=\"attr\">src</span>: <span class=\"string\">'element-ui/lib/theme-chalk/index.css'</span>, <span class=\"attr\">ssr</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  babel: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"plugins\"</span>: [[<span class=\"string\">\"component\"</span>, [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">\"libraryName\"</span>: <span class=\"string\">\"element-ui\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"styleLibraryName\"</span>: <span class=\"string\">\"theme-default\"</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">'transform-async-to-generator'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transform-runtime'</span></span><br><span class=\"line\">    ]]],</span><br><span class=\"line\">    comments: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"string\">'~plugins/element-ui'</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"element-ui-js\"><a href=\"#element-ui-js\" class=\"headerlink\" title=\"element-ui.js\"></a>element-ui.js</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ElementUI <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(ElementUI)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>在写后台管理系统的界面，发现很难写出一个好看的表单（主要是懒），于是想用UI插件，首选当然是熟悉的ElementUI，之前都是在Vue项目中使用的ElementUI，这次第一次玩Nuxt，不知道该怎么取引用，当然首选是<a href=\"https://zh.nuxtjs.org/guide/plugins\" target=\"_blank\" rel=\"noopener\">官网教程-插件的使用</a>。</p>\n<p>在Nuxt中使用ElementUI很简单，只需要三步：</p>\n<ol>\n<li>安装ElementUI <code>npm i element-ui -S</code></li>\n<li>修改nuxt配置文件<code>nuxt.config.js</code>，添加以下内容</li>\n<li>在plugins文件夹下新建一个文件<code>element-ui.js</code></li>\n</ol>\n<h2 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h2><h5 id=\"nuxt-config-js\"><a href=\"#nuxt-config-js\" class=\"headerlink\" title=\"nuxt.config.js\"></a>nuxt.config.js</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  build: &#123;</span><br><span class=\"line\">    vendor: [<span class=\"string\">'axios'</span>, <span class=\"string\">'element-ui'</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  css: [</span><br><span class=\"line\">    &#123; <span class=\"attr\">src</span>: <span class=\"string\">'element-ui/lib/theme-chalk/index.css'</span>, <span class=\"attr\">ssr</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  babel: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"plugins\"</span>: [[<span class=\"string\">\"component\"</span>, [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">\"libraryName\"</span>: <span class=\"string\">\"element-ui\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"styleLibraryName\"</span>: <span class=\"string\">\"theme-default\"</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">'transform-async-to-generator'</span>,</span><br><span class=\"line\">      <span class=\"string\">'transform-runtime'</span></span><br><span class=\"line\">    ]]],</span><br><span class=\"line\">    comments: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"string\">'~plugins/element-ui'</span></span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"element-ui-js\"><a href=\"#element-ui-js\" class=\"headerlink\" title=\"element-ui.js\"></a>element-ui.js</h5><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ElementUI <span class=\"keyword\">from</span> <span class=\"string\">'element-ui'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(ElementUI)</span><br></pre></td></tr></table></figure>\n"},{"title":"npm@6安全审核","date":"2018-08-21T02:05:44.000Z","_content":"\n## 问题描述\n\n执行`npm i`出现以下警告：\n\n![](http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.19.27.png)\n\n这是因为npm升级到@6以后，在项目中更新或者下载新的依赖包控制台会自动运行npm audit对项目依赖包进行安全审核，并生成漏洞报告在控制台中显示。\n\n## 问题解决\n\n1. 自动更新有安全漏洞的依赖项，修补大部分漏洞\n\n```shell\nnpm audit fix\n```\n\n1. 手动执行npm audit看目前依赖包还有什么问题\n\n```shell\nnpm audit\n```\n\n![](http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.16.35.png)\n\n\n\n1. 访问提示链接[https://www.npmjs.com/advisories/48](https://www.npmjs.com/advisories/48)，里面给出了解决方案\n\n![](http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.40.54.png)\n\n1. 手动更新包\n\n```shell\nnpm i uglify-js@2.6.0\n```\n\n![](http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.19.11.png)\n\n","source":"_posts/npm安全审核.md","raw":"---\ntitle: npm@6安全审核\ndate: 2018-08-21 10:05:44\ntags: NPM\ncategories: NPM\n---\n\n## 问题描述\n\n执行`npm i`出现以下警告：\n\n![](http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.19.27.png)\n\n这是因为npm升级到@6以后，在项目中更新或者下载新的依赖包控制台会自动运行npm audit对项目依赖包进行安全审核，并生成漏洞报告在控制台中显示。\n\n## 问题解决\n\n1. 自动更新有安全漏洞的依赖项，修补大部分漏洞\n\n```shell\nnpm audit fix\n```\n\n1. 手动执行npm audit看目前依赖包还有什么问题\n\n```shell\nnpm audit\n```\n\n![](http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.16.35.png)\n\n\n\n1. 访问提示链接[https://www.npmjs.com/advisories/48](https://www.npmjs.com/advisories/48)，里面给出了解决方案\n\n![](http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.40.54.png)\n\n1. 手动更新包\n\n```shell\nnpm i uglify-js@2.6.0\n```\n\n![](http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.19.11.png)\n\n","slug":"npm安全审核","published":1,"updated":"2018-08-21T02:07:42.536Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvf0029oaqod3t9mg0o","content":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>执行<code>npm i</code>出现以下警告：</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.19.27.png\" alt=\"\"></p>\n<p>这是因为npm升级到@6以后，在项目中更新或者下载新的依赖包控制台会自动运行npm audit对项目依赖包进行安全审核，并生成漏洞报告在控制台中显示。</p>\n<h2 id=\"问题解决\"><a href=\"#问题解决\" class=\"headerlink\" title=\"问题解决\"></a>问题解决</h2><ol>\n<li>自动更新有安全漏洞的依赖项，修补大部分漏洞</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm audit fix</span><br></pre></td></tr></table></figure>\n<ol>\n<li>手动执行npm audit看目前依赖包还有什么问题</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm audit</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.16.35.png\" alt=\"\"></p>\n<ol>\n<li>访问提示链接<a href=\"https://www.npmjs.com/advisories/48\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/advisories/48</a>，里面给出了解决方案</li>\n</ol>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.40.54.png\" alt=\"\"></p>\n<ol>\n<li>手动更新包</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i uglify-js@2.6.0</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.19.11.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>执行<code>npm i</code>出现以下警告：</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.19.27.png\" alt=\"\"></p>\n<p>这是因为npm升级到@6以后，在项目中更新或者下载新的依赖包控制台会自动运行npm audit对项目依赖包进行安全审核，并生成漏洞报告在控制台中显示。</p>\n<h2 id=\"问题解决\"><a href=\"#问题解决\" class=\"headerlink\" title=\"问题解决\"></a>问题解决</h2><ol>\n<li>自动更新有安全漏洞的依赖项，修补大部分漏洞</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm audit fix</span><br></pre></td></tr></table></figure>\n<ol>\n<li>手动执行npm audit看目前依赖包还有什么问题</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm audit</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.16.35.png\" alt=\"\"></p>\n<ol>\n<li>访问提示链接<a href=\"https://www.npmjs.com/advisories/48\" target=\"_blank\" rel=\"noopener\">https://www.npmjs.com/advisories/48</a>，里面给出了解决方案</li>\n</ol>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.40.54.png\" alt=\"\"></p>\n<ol>\n<li>手动更新包</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i uglify-js@2.6.0</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-17%20%E4%B8%8B%E5%8D%884.19.11.png\" alt=\"\"></p>\n"},{"title":"仿ISUX网站动画之图片从左到右加载动画","date":"2018-04-27T07:51:59.000Z","_content":"\n## 背景\n\n最近看到[ISUX](https://isux.tencent.com/)网站动画做的很好看，于是想着能不能实现。现在实现的是图片从左到右加载动画和hover时图片放大。\n\n## 实现\n\n由于我真的录不好屏幕所以没有po出gif图，只能丢链接，想看效果的[戳这里](https://codepen.io/evey-huang/pen/rvWxeL)\n\n**HTML**\n\n```html\n<div class=\"pic-showclip-test\">\n  <div class=\"pic-showclip\"></div>\n</div>\n```\n\n**CSS(SCSS)**\n\n```scss\n@mixin pic-showclip($url, $width: 100vw, $height: 100vh, $time: 0.8s, $hover-time: 0.5s) {\n  position: relative;\n  padding-top: $height / $width * 100%;\n  overflow: hidden;\n  animation: pic-showclip-showup-#{$width} #{$time} forwards ease-out;\n  @keyframes pic-showclip-showup-#{$width} {\n    0%{\n      opacity: 0;\n      transform: translate3d(0, 20px, 0);\n    }\n    100%{\n      opacity: 1;\n      transform: translate3d(0, 0, 0);\n    }\n  }\n  &::before {\n    content: ' ';\n    position: absolute;\n    display: block;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url($url);\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-size: cover;\n    animation: pic-showclip-showclip-#{$width} #{$time} forwards cubic-bezier(0, 0.3, 0.7, 1);\n    @keyframes pic-showclip-showclip-#{$width} {\n      0%{\n        opacity: 0;\n        clip: rect(0, 0, $height, 0);\n      }\n      100%{\n        opacity: 1;\n        clip: rect(0, $width, $height, 0);\n      }\n    }\n    transform: scale(1);\n    transition: all $hover-time ease;\n  }\n  // hover图片放大 \n  &:hover {\n    &::before {\n      transform: scale(1.05);\n    }\n  }\n }\n  .pic-showclip-test {\n    max-width: 1260px;\n    margin: 0 auto;\n    .pic-showclip {\n      @include pic-showclip('http://p1cjg886l.bkt.clouddn.com/brands-1.jpg', 1260px, 606px, 0.8s);\n    }\n  }\n```\n\n## 原理\n\n这里封装了一个动画函数名为`pic-showclip`，里面创建了一个动画名为`pic-showclip-showup-#{$width} `。\n\n### animation\n\nanimation常用动画属性有：\n\n>- animation-name: 规定需要绑定到选择器的 keyframe 名称。\n>- animation-duration: 规定完成动画所花费的时间，以秒或毫秒计。\n>- animation-timing-function：规定动画的速度曲线。\n>- animation-delay：规定在动画开始之前的延迟。\n>- animation-iteration-count：规定动画应该播放的次数。\n>- animation-direction：规定是否应该轮流反向播放动画。\n>- animation-fill-mode：规定动画在播放之前或之后，其动画效果是否可见。\n\n\n\n#### animation-timing-function\n\n`animation-timing-function`使用名为三次贝塞尔（Cubic Bezier）函数的数学函数。贝塞尔曲线通过控制曲线上的四个点（起始点、终止点以及两个相互分离的中间点）来创造、编辑图形，绘制出一条光滑曲线并以曲线的状态来反映动画过程中速度的变化。 \n\n语法：\n\n```css\nanimation-timing-function: value;\n```\n\n\n\n>其中value可取：\n>\n>- linear：动画从头到尾的速度是相同的。\n>- ease：默认。动画以低速开始，然后加快，在结束前变慢。\n>- ease-in：动画以低速开始。\n>- ease-out：动画以低速结束。\n>- ease-in-out：动画以低速开始和结束。\n>- cubic-bezier(*x1*,*y1*,*x2*,*y2*)：在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。\n\n\n\n以上几种预设速度`linear`、`ease-in`、`ease-out`、`ease-in-out`均可写成`cubic-bezier`格式：\n\n- **linear**对应自定义cubic-bezier(0,0,1,1)，效果为匀速直线； \n- **ease** 对应自定义cubic-bezier(.25,.01,.25,1),效果为先慢后快再慢；\n-  **ease-in**   对应自定义cubic-bezier(.42,0,1,1),效果为先慢后快； \n- **ease-out**   对应自定义cubic-bezier(0,0,.58,1),效果为先快后慢； \n- **ease-in-out**   对应自定义cubic-bezier(.42,0,.58,1),效果为先慢后快再慢。 \n\n\n\n```scss\nanimation: pic-showclip-showclip-#{$width} #{$time} forwards cubic-bezier(0, 0.3, 0.7, 1);\n```\n\n`cubic-bezier(0, 0.3, 0.7, 1);`反映的效果是慢慢变快，平滑过渡\n\n\n\n#### animation-fill-mode\n\n`animation-fill-mode`规定动画在播放之前或之后，其动画效果是否可见。\n\n语法是：\n\n```css\nanimation-fill-mode : none | forwards | backwards | both;\n```\n\n\n\n>- none: 不改变默认行为。\n>- forwards: 当动画完成后，保持最后一个属性值（在最后一个关键帧中定义）。\n>- backwards: 在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）。\n>- both: 向前和向后填充模式都被应用。\n\n\n\n### clip\n\nclip属性的语法是这样定义的：\n\n```\nclip: <shape> | auto  \n```\n\n**注意**！！！**clip 属性仅在设置了 position: absolute | fixed 的元素上生效且`<shape>` 仅接受 `rect()` 矩形裁切**。\n\n`rect()` 接受四个值：\n\n```\nclip: rect(<top>, <right>, <bottom>, <left>)  \n```\n\n其中`<top>` 和 `<bottom>` 指定相对于盒子上边框边界的偏移，`<right>` 和 `<left>` 指定了相对于盒子左边框边界的偏移。即可以把 `<top>` 和 `<bottom>` 想象成 Photoshop 中的水平参考线，`<right>` 和 `<left>` 是垂直参考线，而剪裁区域就是它们所围成的矩形区域。\n\n**当 bottom <= top 或者 right <= left 时，裁切区域不显示**\n\n```scss\n@keyframes pic-showclip-showclip-#{$width} {\n    0%{\n        opacity: 0;\n        clip: rect(0, 0, $height, 0);\n    }\n    100%{\n        opacity: 1;\n        clip: rect(0, $width, $height, 0);\n    }\n}\n```\n\n**<u>这段代码实现的功能就是先把一部分图片隐藏，然后平滑显示。</u>**\n\n### transform\n\n`scale`属性的语法为：\n\n```\ntransform: scale(<x> [<y>])\n```\n\n通过scale()，根据给定的宽度（X 轴）和高度（Y 轴）参数，元素的尺寸会增加或减少。\n\n```scss\n&:hover {\n    &::before {\n        transform: scale(1.05);\n    }\n}\n```\n\n**<u>这段代码实现的功能是当图片hover时，图片放大1.05倍</u>**\n\n","source":"_posts/pic-slide.md","raw":"---\ntitle: 仿ISUX网站动画之图片从左到右加载动画\ndate: 2018-04-27 15:51:59\ntags: [css, 动画]\ncategories: css\n---\n\n## 背景\n\n最近看到[ISUX](https://isux.tencent.com/)网站动画做的很好看，于是想着能不能实现。现在实现的是图片从左到右加载动画和hover时图片放大。\n\n## 实现\n\n由于我真的录不好屏幕所以没有po出gif图，只能丢链接，想看效果的[戳这里](https://codepen.io/evey-huang/pen/rvWxeL)\n\n**HTML**\n\n```html\n<div class=\"pic-showclip-test\">\n  <div class=\"pic-showclip\"></div>\n</div>\n```\n\n**CSS(SCSS)**\n\n```scss\n@mixin pic-showclip($url, $width: 100vw, $height: 100vh, $time: 0.8s, $hover-time: 0.5s) {\n  position: relative;\n  padding-top: $height / $width * 100%;\n  overflow: hidden;\n  animation: pic-showclip-showup-#{$width} #{$time} forwards ease-out;\n  @keyframes pic-showclip-showup-#{$width} {\n    0%{\n      opacity: 0;\n      transform: translate3d(0, 20px, 0);\n    }\n    100%{\n      opacity: 1;\n      transform: translate3d(0, 0, 0);\n    }\n  }\n  &::before {\n    content: ' ';\n    position: absolute;\n    display: block;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url($url);\n    background-repeat: no-repeat;\n    background-position: center center;\n    background-size: cover;\n    animation: pic-showclip-showclip-#{$width} #{$time} forwards cubic-bezier(0, 0.3, 0.7, 1);\n    @keyframes pic-showclip-showclip-#{$width} {\n      0%{\n        opacity: 0;\n        clip: rect(0, 0, $height, 0);\n      }\n      100%{\n        opacity: 1;\n        clip: rect(0, $width, $height, 0);\n      }\n    }\n    transform: scale(1);\n    transition: all $hover-time ease;\n  }\n  // hover图片放大 \n  &:hover {\n    &::before {\n      transform: scale(1.05);\n    }\n  }\n }\n  .pic-showclip-test {\n    max-width: 1260px;\n    margin: 0 auto;\n    .pic-showclip {\n      @include pic-showclip('http://p1cjg886l.bkt.clouddn.com/brands-1.jpg', 1260px, 606px, 0.8s);\n    }\n  }\n```\n\n## 原理\n\n这里封装了一个动画函数名为`pic-showclip`，里面创建了一个动画名为`pic-showclip-showup-#{$width} `。\n\n### animation\n\nanimation常用动画属性有：\n\n>- animation-name: 规定需要绑定到选择器的 keyframe 名称。\n>- animation-duration: 规定完成动画所花费的时间，以秒或毫秒计。\n>- animation-timing-function：规定动画的速度曲线。\n>- animation-delay：规定在动画开始之前的延迟。\n>- animation-iteration-count：规定动画应该播放的次数。\n>- animation-direction：规定是否应该轮流反向播放动画。\n>- animation-fill-mode：规定动画在播放之前或之后，其动画效果是否可见。\n\n\n\n#### animation-timing-function\n\n`animation-timing-function`使用名为三次贝塞尔（Cubic Bezier）函数的数学函数。贝塞尔曲线通过控制曲线上的四个点（起始点、终止点以及两个相互分离的中间点）来创造、编辑图形，绘制出一条光滑曲线并以曲线的状态来反映动画过程中速度的变化。 \n\n语法：\n\n```css\nanimation-timing-function: value;\n```\n\n\n\n>其中value可取：\n>\n>- linear：动画从头到尾的速度是相同的。\n>- ease：默认。动画以低速开始，然后加快，在结束前变慢。\n>- ease-in：动画以低速开始。\n>- ease-out：动画以低速结束。\n>- ease-in-out：动画以低速开始和结束。\n>- cubic-bezier(*x1*,*y1*,*x2*,*y2*)：在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。\n\n\n\n以上几种预设速度`linear`、`ease-in`、`ease-out`、`ease-in-out`均可写成`cubic-bezier`格式：\n\n- **linear**对应自定义cubic-bezier(0,0,1,1)，效果为匀速直线； \n- **ease** 对应自定义cubic-bezier(.25,.01,.25,1),效果为先慢后快再慢；\n-  **ease-in**   对应自定义cubic-bezier(.42,0,1,1),效果为先慢后快； \n- **ease-out**   对应自定义cubic-bezier(0,0,.58,1),效果为先快后慢； \n- **ease-in-out**   对应自定义cubic-bezier(.42,0,.58,1),效果为先慢后快再慢。 \n\n\n\n```scss\nanimation: pic-showclip-showclip-#{$width} #{$time} forwards cubic-bezier(0, 0.3, 0.7, 1);\n```\n\n`cubic-bezier(0, 0.3, 0.7, 1);`反映的效果是慢慢变快，平滑过渡\n\n\n\n#### animation-fill-mode\n\n`animation-fill-mode`规定动画在播放之前或之后，其动画效果是否可见。\n\n语法是：\n\n```css\nanimation-fill-mode : none | forwards | backwards | both;\n```\n\n\n\n>- none: 不改变默认行为。\n>- forwards: 当动画完成后，保持最后一个属性值（在最后一个关键帧中定义）。\n>- backwards: 在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）。\n>- both: 向前和向后填充模式都被应用。\n\n\n\n### clip\n\nclip属性的语法是这样定义的：\n\n```\nclip: <shape> | auto  \n```\n\n**注意**！！！**clip 属性仅在设置了 position: absolute | fixed 的元素上生效且`<shape>` 仅接受 `rect()` 矩形裁切**。\n\n`rect()` 接受四个值：\n\n```\nclip: rect(<top>, <right>, <bottom>, <left>)  \n```\n\n其中`<top>` 和 `<bottom>` 指定相对于盒子上边框边界的偏移，`<right>` 和 `<left>` 指定了相对于盒子左边框边界的偏移。即可以把 `<top>` 和 `<bottom>` 想象成 Photoshop 中的水平参考线，`<right>` 和 `<left>` 是垂直参考线，而剪裁区域就是它们所围成的矩形区域。\n\n**当 bottom <= top 或者 right <= left 时，裁切区域不显示**\n\n```scss\n@keyframes pic-showclip-showclip-#{$width} {\n    0%{\n        opacity: 0;\n        clip: rect(0, 0, $height, 0);\n    }\n    100%{\n        opacity: 1;\n        clip: rect(0, $width, $height, 0);\n    }\n}\n```\n\n**<u>这段代码实现的功能就是先把一部分图片隐藏，然后平滑显示。</u>**\n\n### transform\n\n`scale`属性的语法为：\n\n```\ntransform: scale(<x> [<y>])\n```\n\n通过scale()，根据给定的宽度（X 轴）和高度（Y 轴）参数，元素的尺寸会增加或减少。\n\n```scss\n&:hover {\n    &::before {\n        transform: scale(1.05);\n    }\n}\n```\n\n**<u>这段代码实现的功能是当图片hover时，图片放大1.05倍</u>**\n\n","slug":"pic-slide","published":1,"updated":"2018-08-17T07:35:36.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvg002eoaqowg9qd57h","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近看到<a href=\"https://isux.tencent.com/\" target=\"_blank\" rel=\"noopener\">ISUX</a>网站动画做的很好看，于是想着能不能实现。现在实现的是图片从左到右加载动画和hover时图片放大。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>由于我真的录不好屏幕所以没有po出gif图，只能丢链接，想看效果的<a href=\"https://codepen.io/evey-huang/pen/rvWxeL\" target=\"_blank\" rel=\"noopener\">戳这里</a></p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic-showclip-test\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic-showclip\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>CSS(SCSS)</strong></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">mixin</span> pic-showclip(<span class=\"variable\">$url</span>, <span class=\"variable\">$width</span>: 100vw, <span class=\"variable\">$height</span>: 100vh, <span class=\"variable\">$time</span>: 0.8s, <span class=\"variable\">$hover-time</span>: 0.5s) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"variable\">$height</span> / <span class=\"variable\">$width</span> * <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: pic-showclip-showup-#&#123;<span class=\"variable\">$width</span>&#125; #&#123;<span class=\"variable\">$time</span>&#125; forwards ease-out;</span><br><span class=\"line\">  @keyframes pic-showclip-showup-#&#123;<span class=\"variable\">$width</span>&#125; &#123;</span><br><span class=\"line\">    0%&#123;</span><br><span class=\"line\">      <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: translate3d(<span class=\"number\">0</span>, <span class=\"number\">20px</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100%&#123;</span><br><span class=\"line\">      <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: translate3d(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;::before &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">' '</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"variable\">$url</span>);</span><br><span class=\"line\">    <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>: center center;</span><br><span class=\"line\">    <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">    <span class=\"attribute\">animation</span>: pic-showclip-showclip-#&#123;<span class=\"variable\">$width</span>&#125; #&#123;<span class=\"variable\">$time</span>&#125; forwards cubic-bezier(<span class=\"number\">0</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.7</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    @keyframes pic-showclip-showclip-#&#123;<span class=\"variable\">$width</span>&#125; &#123;</span><br><span class=\"line\">      0%&#123;</span><br><span class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clip</span>: rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$height</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      100%&#123;</span><br><span class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clip</span>: rect(<span class=\"number\">0</span>, <span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: scale(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"attribute\">transition</span>: all <span class=\"variable\">$hover-time</span> ease;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// hover图片放大 </span></span><br><span class=\"line\">  &amp;:hover &#123;</span><br><span class=\"line\">    &amp;::before &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: scale(<span class=\"number\">1.05</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.pic-showclip-test</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">max-width</span>: <span class=\"number\">1260px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    <span class=\"selector-class\">.pic-showclip</span> &#123;</span><br><span class=\"line\">      @<span class=\"keyword\">include</span> pic-showclip(<span class=\"string\">'http://p1cjg886l.bkt.clouddn.com/brands-1.jpg'</span>, 1260px, 606px, 0.8s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>这里封装了一个动画函数名为<code>pic-showclip</code>，里面创建了一个动画名为<code>pic-showclip-showup-#{$width}</code>。</p>\n<h3 id=\"animation\"><a href=\"#animation\" class=\"headerlink\" title=\"animation\"></a>animation</h3><p>animation常用动画属性有：</p>\n<blockquote>\n<ul>\n<li>animation-name: 规定需要绑定到选择器的 keyframe 名称。</li>\n<li>animation-duration: 规定完成动画所花费的时间，以秒或毫秒计。</li>\n<li>animation-timing-function：规定动画的速度曲线。</li>\n<li>animation-delay：规定在动画开始之前的延迟。</li>\n<li>animation-iteration-count：规定动画应该播放的次数。</li>\n<li>animation-direction：规定是否应该轮流反向播放动画。</li>\n<li>animation-fill-mode：规定动画在播放之前或之后，其动画效果是否可见。</li>\n</ul>\n</blockquote>\n<h4 id=\"animation-timing-function\"><a href=\"#animation-timing-function\" class=\"headerlink\" title=\"animation-timing-function\"></a>animation-timing-function</h4><p><code>animation-timing-function</code>使用名为三次贝塞尔（Cubic Bezier）函数的数学函数。贝塞尔曲线通过控制曲线上的四个点（起始点、终止点以及两个相互分离的中间点）来创造、编辑图形，绘制出一条光滑曲线并以曲线的状态来反映动画过程中速度的变化。 </p>\n<p>语法：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">animation-timing-function</span>: <span class=\"selector-tag\">value</span>;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>其中value可取：</p>\n<ul>\n<li>linear：动画从头到尾的速度是相同的。</li>\n<li>ease：默认。动画以低速开始，然后加快，在结束前变慢。</li>\n<li>ease-in：动画以低速开始。</li>\n<li>ease-out：动画以低速结束。</li>\n<li>ease-in-out：动画以低速开始和结束。</li>\n<li>cubic-bezier(<em>x1</em>,<em>y1</em>,<em>x2</em>,<em>y2</em>)：在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。</li>\n</ul>\n</blockquote>\n<p>以上几种预设速度<code>linear</code>、<code>ease-in</code>、<code>ease-out</code>、<code>ease-in-out</code>均可写成<code>cubic-bezier</code>格式：</p>\n<ul>\n<li><strong>linear</strong>对应自定义cubic-bezier(0,0,1,1)，效果为匀速直线； </li>\n<li><strong>ease</strong> 对应自定义cubic-bezier(.25,.01,.25,1),效果为先慢后快再慢；</li>\n<li><strong>ease-in</strong>   对应自定义cubic-bezier(.42,0,1,1),效果为先慢后快； </li>\n<li><strong>ease-out</strong>   对应自定义cubic-bezier(0,0,.58,1),效果为先快后慢； </li>\n<li><strong>ease-in-out</strong>   对应自定义cubic-bezier(.42,0,.58,1),效果为先慢后快再慢。 </li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">animation</span>: pic-showclip-showclip-#&#123;<span class=\"variable\">$width</span>&#125; #&#123;<span class=\"variable\">$time</span>&#125; forwards cubic-bezier(<span class=\"number\">0</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.7</span>, <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<p><code>cubic-bezier(0, 0.3, 0.7, 1);</code>反映的效果是慢慢变快，平滑过渡</p>\n<h4 id=\"animation-fill-mode\"><a href=\"#animation-fill-mode\" class=\"headerlink\" title=\"animation-fill-mode\"></a>animation-fill-mode</h4><p><code>animation-fill-mode</code>规定动画在播放之前或之后，其动画效果是否可见。</p>\n<p>语法是：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation-fill-mode : none | forwards | backwards | both;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>none: 不改变默认行为。</li>\n<li>forwards: 当动画完成后，保持最后一个属性值（在最后一个关键帧中定义）。</li>\n<li>backwards: 在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）。</li>\n<li>both: 向前和向后填充模式都被应用。</li>\n</ul>\n</blockquote>\n<h3 id=\"clip\"><a href=\"#clip\" class=\"headerlink\" title=\"clip\"></a>clip</h3><p>clip属性的语法是这样定义的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip: &lt;shape&gt; | auto</span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>！！！<strong>clip 属性仅在设置了 position: absolute | fixed 的元素上生效且<code>&lt;shape&gt;</code> 仅接受 <code>rect()</code> 矩形裁切</strong>。</p>\n<p><code>rect()</code> 接受四个值：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip: rect(&lt;top&gt;, &lt;right&gt;, &lt;bottom&gt;, &lt;left&gt;)</span><br></pre></td></tr></table></figure>\n<p>其中<code>&lt;top&gt;</code> 和 <code>&lt;bottom&gt;</code> 指定相对于盒子上边框边界的偏移，<code>&lt;right&gt;</code> 和 <code>&lt;left&gt;</code> 指定了相对于盒子左边框边界的偏移。即可以把 <code>&lt;top&gt;</code> 和 <code>&lt;bottom&gt;</code> 想象成 Photoshop 中的水平参考线，<code>&lt;right&gt;</code> 和 <code>&lt;left&gt;</code> 是垂直参考线，而剪裁区域就是它们所围成的矩形区域。</p>\n<p><strong>当 bottom &lt;= top 或者 right &lt;= left 时，裁切区域不显示</strong></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@keyframes pic-showclip-showclip-#&#123;<span class=\"variable\">$width</span>&#125; &#123;</span><br><span class=\"line\">    0%&#123;</span><br><span class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clip</span>: rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$height</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100%&#123;</span><br><span class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clip</span>: rect(<span class=\"number\">0</span>, <span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong><u>这段代码实现的功能就是先把一部分图片隐藏，然后平滑显示。</u></strong></p>\n<h3 id=\"transform\"><a href=\"#transform\" class=\"headerlink\" title=\"transform\"></a>transform</h3><p><code>scale</code>属性的语法为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">transform: scale(&lt;x&gt; [&lt;y&gt;])</span><br></pre></td></tr></table></figure>\n<p>通过scale()，根据给定的宽度（X 轴）和高度（Y 轴）参数，元素的尺寸会增加或减少。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;:hover &#123;</span><br><span class=\"line\">    &amp;::before &#123;</span><br><span class=\"line\">        <span class=\"attribute\">transform</span>: scale(<span class=\"number\">1.05</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong><u>这段代码实现的功能是当图片hover时，图片放大1.05倍</u></strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近看到<a href=\"https://isux.tencent.com/\" target=\"_blank\" rel=\"noopener\">ISUX</a>网站动画做的很好看，于是想着能不能实现。现在实现的是图片从左到右加载动画和hover时图片放大。</p>\n<h2 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>由于我真的录不好屏幕所以没有po出gif图，只能丢链接，想看效果的<a href=\"https://codepen.io/evey-huang/pen/rvWxeL\" target=\"_blank\" rel=\"noopener\">戳这里</a></p>\n<p><strong>HTML</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic-showclip-test\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"pic-showclip\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>CSS(SCSS)</strong></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">mixin</span> pic-showclip(<span class=\"variable\">$url</span>, <span class=\"variable\">$width</span>: 100vw, <span class=\"variable\">$height</span>: 100vh, <span class=\"variable\">$time</span>: 0.8s, <span class=\"variable\">$hover-time</span>: 0.5s) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">  <span class=\"attribute\">padding-top</span>: <span class=\"variable\">$height</span> / <span class=\"variable\">$width</span> * <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">animation</span>: pic-showclip-showup-#&#123;<span class=\"variable\">$width</span>&#125; #&#123;<span class=\"variable\">$time</span>&#125; forwards ease-out;</span><br><span class=\"line\">  @keyframes pic-showclip-showup-#&#123;<span class=\"variable\">$width</span>&#125; &#123;</span><br><span class=\"line\">    0%&#123;</span><br><span class=\"line\">      <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: translate3d(<span class=\"number\">0</span>, <span class=\"number\">20px</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100%&#123;</span><br><span class=\"line\">      <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: translate3d(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &amp;::before &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">' '</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: url(<span class=\"variable\">$url</span>);</span><br><span class=\"line\">    <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>: center center;</span><br><span class=\"line\">    <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">    <span class=\"attribute\">animation</span>: pic-showclip-showclip-#&#123;<span class=\"variable\">$width</span>&#125; #&#123;<span class=\"variable\">$time</span>&#125; forwards cubic-bezier(<span class=\"number\">0</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.7</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    @keyframes pic-showclip-showclip-#&#123;<span class=\"variable\">$width</span>&#125; &#123;</span><br><span class=\"line\">      0%&#123;</span><br><span class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clip</span>: rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$height</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      100%&#123;</span><br><span class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clip</span>: rect(<span class=\"number\">0</span>, <span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: scale(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"attribute\">transition</span>: all <span class=\"variable\">$hover-time</span> ease;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// hover图片放大 </span></span><br><span class=\"line\">  &amp;:hover &#123;</span><br><span class=\"line\">    &amp;::before &#123;</span><br><span class=\"line\">      <span class=\"attribute\">transform</span>: scale(<span class=\"number\">1.05</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">  <span class=\"selector-class\">.pic-showclip-test</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">max-width</span>: <span class=\"number\">1260px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">    <span class=\"selector-class\">.pic-showclip</span> &#123;</span><br><span class=\"line\">      @<span class=\"keyword\">include</span> pic-showclip(<span class=\"string\">'http://p1cjg886l.bkt.clouddn.com/brands-1.jpg'</span>, 1260px, 606px, 0.8s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p>这里封装了一个动画函数名为<code>pic-showclip</code>，里面创建了一个动画名为<code>pic-showclip-showup-#{$width}</code>。</p>\n<h3 id=\"animation\"><a href=\"#animation\" class=\"headerlink\" title=\"animation\"></a>animation</h3><p>animation常用动画属性有：</p>\n<blockquote>\n<ul>\n<li>animation-name: 规定需要绑定到选择器的 keyframe 名称。</li>\n<li>animation-duration: 规定完成动画所花费的时间，以秒或毫秒计。</li>\n<li>animation-timing-function：规定动画的速度曲线。</li>\n<li>animation-delay：规定在动画开始之前的延迟。</li>\n<li>animation-iteration-count：规定动画应该播放的次数。</li>\n<li>animation-direction：规定是否应该轮流反向播放动画。</li>\n<li>animation-fill-mode：规定动画在播放之前或之后，其动画效果是否可见。</li>\n</ul>\n</blockquote>\n<h4 id=\"animation-timing-function\"><a href=\"#animation-timing-function\" class=\"headerlink\" title=\"animation-timing-function\"></a>animation-timing-function</h4><p><code>animation-timing-function</code>使用名为三次贝塞尔（Cubic Bezier）函数的数学函数。贝塞尔曲线通过控制曲线上的四个点（起始点、终止点以及两个相互分离的中间点）来创造、编辑图形，绘制出一条光滑曲线并以曲线的状态来反映动画过程中速度的变化。 </p>\n<p>语法：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">animation-timing-function</span>: <span class=\"selector-tag\">value</span>;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>其中value可取：</p>\n<ul>\n<li>linear：动画从头到尾的速度是相同的。</li>\n<li>ease：默认。动画以低速开始，然后加快，在结束前变慢。</li>\n<li>ease-in：动画以低速开始。</li>\n<li>ease-out：动画以低速结束。</li>\n<li>ease-in-out：动画以低速开始和结束。</li>\n<li>cubic-bezier(<em>x1</em>,<em>y1</em>,<em>x2</em>,<em>y2</em>)：在 cubic-bezier 函数中自己的值。可能的值是从 0 到 1 的数值。</li>\n</ul>\n</blockquote>\n<p>以上几种预设速度<code>linear</code>、<code>ease-in</code>、<code>ease-out</code>、<code>ease-in-out</code>均可写成<code>cubic-bezier</code>格式：</p>\n<ul>\n<li><strong>linear</strong>对应自定义cubic-bezier(0,0,1,1)，效果为匀速直线； </li>\n<li><strong>ease</strong> 对应自定义cubic-bezier(.25,.01,.25,1),效果为先慢后快再慢；</li>\n<li><strong>ease-in</strong>   对应自定义cubic-bezier(.42,0,1,1),效果为先慢后快； </li>\n<li><strong>ease-out</strong>   对应自定义cubic-bezier(0,0,.58,1),效果为先快后慢； </li>\n<li><strong>ease-in-out</strong>   对应自定义cubic-bezier(.42,0,.58,1),效果为先慢后快再慢。 </li>\n</ul>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">animation</span>: pic-showclip-showclip-#&#123;<span class=\"variable\">$width</span>&#125; #&#123;<span class=\"variable\">$time</span>&#125; forwards cubic-bezier(<span class=\"number\">0</span>, <span class=\"number\">0.3</span>, <span class=\"number\">0.7</span>, <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<p><code>cubic-bezier(0, 0.3, 0.7, 1);</code>反映的效果是慢慢变快，平滑过渡</p>\n<h4 id=\"animation-fill-mode\"><a href=\"#animation-fill-mode\" class=\"headerlink\" title=\"animation-fill-mode\"></a>animation-fill-mode</h4><p><code>animation-fill-mode</code>规定动画在播放之前或之后，其动画效果是否可见。</p>\n<p>语法是：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">animation-fill-mode : none | forwards | backwards | both;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>none: 不改变默认行为。</li>\n<li>forwards: 当动画完成后，保持最后一个属性值（在最后一个关键帧中定义）。</li>\n<li>backwards: 在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）。</li>\n<li>both: 向前和向后填充模式都被应用。</li>\n</ul>\n</blockquote>\n<h3 id=\"clip\"><a href=\"#clip\" class=\"headerlink\" title=\"clip\"></a>clip</h3><p>clip属性的语法是这样定义的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip: &lt;shape&gt; | auto</span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>！！！<strong>clip 属性仅在设置了 position: absolute | fixed 的元素上生效且<code>&lt;shape&gt;</code> 仅接受 <code>rect()</code> 矩形裁切</strong>。</p>\n<p><code>rect()</code> 接受四个值：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip: rect(&lt;top&gt;, &lt;right&gt;, &lt;bottom&gt;, &lt;left&gt;)</span><br></pre></td></tr></table></figure>\n<p>其中<code>&lt;top&gt;</code> 和 <code>&lt;bottom&gt;</code> 指定相对于盒子上边框边界的偏移，<code>&lt;right&gt;</code> 和 <code>&lt;left&gt;</code> 指定了相对于盒子左边框边界的偏移。即可以把 <code>&lt;top&gt;</code> 和 <code>&lt;bottom&gt;</code> 想象成 Photoshop 中的水平参考线，<code>&lt;right&gt;</code> 和 <code>&lt;left&gt;</code> 是垂直参考线，而剪裁区域就是它们所围成的矩形区域。</p>\n<p><strong>当 bottom &lt;= top 或者 right &lt;= left 时，裁切区域不显示</strong></p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@keyframes pic-showclip-showclip-#&#123;<span class=\"variable\">$width</span>&#125; &#123;</span><br><span class=\"line\">    0%&#123;</span><br><span class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clip</span>: rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$height</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100%&#123;</span><br><span class=\"line\">        <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"attribute\">clip</span>: rect(<span class=\"number\">0</span>, <span class=\"variable\">$width</span>, <span class=\"variable\">$height</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong><u>这段代码实现的功能就是先把一部分图片隐藏，然后平滑显示。</u></strong></p>\n<h3 id=\"transform\"><a href=\"#transform\" class=\"headerlink\" title=\"transform\"></a>transform</h3><p><code>scale</code>属性的语法为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">transform: scale(&lt;x&gt; [&lt;y&gt;])</span><br></pre></td></tr></table></figure>\n<p>通过scale()，根据给定的宽度（X 轴）和高度（Y 轴）参数，元素的尺寸会增加或减少。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&amp;:hover &#123;</span><br><span class=\"line\">    &amp;::before &#123;</span><br><span class=\"line\">        <span class=\"attribute\">transform</span>: scale(<span class=\"number\">1.05</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong><u>这段代码实现的功能是当图片hover时，图片放大1.05倍</u></strong></p>\n"},{"title":"RegExp正则表达式基本使用","date":"2017-12-12T14:08:02.000Z","_content":"\n\n\n## 正则表达式是什么？\n\n正则表达式是用于匹配字符串中字符组合的模式。在 JavaScript中，正则表达式也是对象。这些模式被用于 [`RegExp`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/RegExp) 的 [`exec`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec) 和 [`test`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test) 方法, 以及 [`String`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/String) 的 [`match`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match)、[`replace`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace)、[`search`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/search) 和 [`split`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/split) 方法。本章介绍JavaScript的正则表达式（因为目前我只学过JavaScript的正则表达式呀）。\n\n## 可以做什么？\n\n### 检验格式\n\n比如判断某字符串是否全部由数字组成\n\n```\n/^\\d+$/.test('12345');\n// true\n\n/^\\d+$/.test('12345abc');\n// false\n```\n\n### 内容替换\n\n比如将字符串中的数字替换成$号\n\n```\n'abcd1234'.replace(/\\d/g,'$');\n// \"abcd$$$$\"\n```\n\n### 提取内容\n\n字符串的 `match` 方法可以将匹配到的字符串片段复制到数据中并返回\n\n```\n'abcd1234'.match('cd12');\n// [\"cd12\", index: 2, input: \"abcd1234\"]\n```\n\n### 确定位置\n\n用下面两种方法可以获得被匹配字符串片段的起始和终止位置。\n\n```\nvar regexp = /<span>.*?<\\/span>/g;\nregexp.exec('aabb');\n\n// [\"<span>aa</span>\", index: 5, input: \"aabb\"](从1数起，第一个span结尾>的位置)\n'aabb'.search(regexp);\n// 5(从0数起，第一个span的<的位置)\n```\n\n### 分割字符串\n\n一般的字符串分割都是基于固定的分隔符，但是在某些场景下需要用正则做更复杂的处理， 比如用空格来分割字符串，如果有两个连续的空格出来的结果可能不是我们期待的， 这时就要用正则来处理。\n\n```\n'a   b c'.split(' ');\n// [\"a\", \"\", \"\", \"b\", \"c\"]\n```\n\n## 怎么玩？\n\n### 创建正则\n\n两种方式，一种是使用一个正则表达式字面量，其由包含在斜杠之间的模式组成\n\n```\nconst regex = /ab+c/;\nconst regex = /^[a-zA-Z]+[0-9]*\\W?_$/gi;\n```\n\n另一种是调用`RegExp`对象的构造函数\n\n```\nlet regex = new RegExp(\"ab+c\");\nlet regex = new RegExp(/^[a-zA-Z]+[0-9]*\\W?_$/, \"gi\");\n```\n\n###### 参数\n\n- g :全局匹配;找到所有匹配，而不是在第一个匹配后停止\n- i :忽略大小写\n- m :多行; 将开始和结束字符（^和$）视为在多行上工作（也就是，分别匹配每一行的开始和结束（由 \\n 或 \\r 分割），而不只是只匹配整个输入字符串的最开始和最末尾处。\n- u :Unicode; 将模式视为Unicode序列点的序列\n- y :粘性匹配; 仅匹配目标字符串中此正则表达式的lastIndex属性指示的索引(并且不尝试从任何后续的索引匹配)。\n\n### 特殊字符\n\n特殊字符有很多，其含义和用法可以参考MDN文档\n\n### RegExp对象方法\n\n这里想讲test、match、exec和replace这四种方法，因为这几种非常常见和常用也是我学习正则时遇到的难点。\n\n| 用法                                  | 说明                                      | 返回值                      |\n| ----------------------------------- | --------------------------------------- | ------------------------ |\n| `pattern.test(str)`                 | 判断`str`是否包含匹配结果                         | 包含返回`true`，不包含返回`false`。 |\n| `pattern.exec(str)`                 | 根据`pattern`对`str`进行正则匹配                 | 返回匹配结果数组,如匹配不到返回`null`   |\n| `str.match(pattern)`                | 根据`pattern`对str进行正则匹配                   | 返回匹配结果数组,如匹配不到返回`null`   |\n| `str.replace(pattern, replacement)` | 根据`pattern`进行正则匹配,把匹配结果替换为`replacement` | 一个新的字符串                  |\n\n###### test()\n\n字符串的`test`方法，比较常用在判断语句中，用于检测一个字符串是否匹配某个模式：\n\n```\nRegExpObject.test(string)\n```\n\n例：如果字符串 string 中含有与 RegExpObject 匹配的文本，则返回 true，否则返回 false：\n\n```\n/\\d/.test('asdf2')\n// true （字符串中含有数字所以返回true）\n```\n\n###### match()\n\n`match()` 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。\n\n- 非全局匹配\n\n  例：\n\n  ```\n  var a = 'abcd'.match(/\\w/);\n  console.log(a);\n  // [\"a\", index: 0, input: \"abcd\"] （只匹配第一个就停止了）\n  ```\n\n- 全局匹配\n\n  例：\n\n  ```\n  var a = 'abcd'.match(/\\w/g);\n  console.log(a);\n  // [\"a\", \"b\", \"c\", \"d\"] （匹配全部才停止）\n  ```\n\n###### exec()\n\nexec()方法用于比较复杂的模式匹配或者是说你为你提供更多的信息：\n\n```\nRegExpObject.exec(string)\n```\n\n如果在string中找到了匹配的文本，则返回一个包含这些文本的数组，否侧返回`null`。\n\n- 返回的数组的第一个元素是与整个正则匹配的文本，然后数组的第二个元素是与整个正则的第一个子表达式(分组)相匹配的文本，数组的第三个元素整个正则的第二个子表达式(分组)相匹配的文本，以此类推。例：\n\n```\nvar result = /(\\d+)-(\\w+)/.exec('12-ab');\nconsole.log(result);\n// [\"12-ab\", \"12\", \"ab\", index: 0, input: \"12-ab\"]\n```\n\n- 从上面返回的数组结果可知，数组添加了两个额外的属性，分别是：`index, input`\n\n  `index:` 匹配文本的第一个字符的位置。\n\n  `input:` 指输入的整体的文本。\n\n  例：\n\n  ```\n  console.log(result.index)\n  // 0\n  console.log(result.input)\n  // 12-ab\n  ```\n\n  ​\n\n- 执行exec函数时，尽管是全局匹配的正则表达式，但是exec方法只对指定的字符串进行一次匹配，\n\n  获取字符串中第一个与正则表达式想匹配的内容，并且将匹配内容和子匹配的结果存储到返回的数组中。\n\n  例：\n\n  ```\n  /\\d/g.exec('aa22')\n  // [\"2\", index: 2, input: \"aa22\"] （只匹配一个数字就停止了）\n  ```\n\n  ​\n\n###### replace()\n\nreplace()方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。这个方法接收两个必须的参数：\n\n- `pattern:` 这个参数可以是字符串或是RegExp对象。\n- `replacement：` 替换匹配项的字符串或处理函数的返回值\n\n返回结果：\n\n- 当未找到匹配项的时候，返回原始字符串。\n\n  例：\n\n  ```\n  'aaaa'.replace('bbb', 'b')\n  // \"aaaa\"\n  ```\n\n- 当pattern为字符串或者为非全局的RegExp对象的时候，只替换找到的第一项匹配项。\n\n  例：\n\n  ```\n  'aaaa'.replace('a', 'b')\n  // \"baaa\"\n  ```\n\n- 当pattern为全局的RegExp对象的时候，替换每一项匹配项。\n\n  例：\n\n  ```\n  'aaaa'.replace(/\\w/g, 'b')\n  // \"bbbb\"\n  ```\n\n- replacement为函数时，函数的返回值将作为替换字符串;函数的第一个参数的值是每一个匹配项,当然还有第二个参数，它的值是每个匹配项在原始字符串的中位置，从0开始。\n\n  例：\n\n  ```\n  aaaa'.replace(/\\w/g, function() {\n      return 'b';\n  });\n  // \"bbbb\"\n  ```\n\n  ​\n\n## 最后\n\n学习正则最重要的就是正则表达式要写对，我比较笨有时候会写很久。这里推荐两个比较有用的好帮手帮助更有效率地学习正则。\n\n- <http://regex.zjmainstay.cn/>（可以在线检测表达式写的是否正确）\n- <https://jex.im/regulex/#!flags=&re=%5E(a%7Cb)*%3F%24>（可以看到清晰明了的逻辑图）","source":"_posts/regexp1.md","raw":"---\ntitle: RegExp正则表达式基本使用\ndate: 2017-12-12 22:08:02\ntags: 正则基本使用\ncategories: JS\n---\n\n\n\n## 正则表达式是什么？\n\n正则表达式是用于匹配字符串中字符组合的模式。在 JavaScript中，正则表达式也是对象。这些模式被用于 [`RegExp`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/RegExp) 的 [`exec`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec) 和 [`test`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test) 方法, 以及 [`String`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/String) 的 [`match`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match)、[`replace`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace)、[`search`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/search) 和 [`split`](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/split) 方法。本章介绍JavaScript的正则表达式（因为目前我只学过JavaScript的正则表达式呀）。\n\n## 可以做什么？\n\n### 检验格式\n\n比如判断某字符串是否全部由数字组成\n\n```\n/^\\d+$/.test('12345');\n// true\n\n/^\\d+$/.test('12345abc');\n// false\n```\n\n### 内容替换\n\n比如将字符串中的数字替换成$号\n\n```\n'abcd1234'.replace(/\\d/g,'$');\n// \"abcd$$$$\"\n```\n\n### 提取内容\n\n字符串的 `match` 方法可以将匹配到的字符串片段复制到数据中并返回\n\n```\n'abcd1234'.match('cd12');\n// [\"cd12\", index: 2, input: \"abcd1234\"]\n```\n\n### 确定位置\n\n用下面两种方法可以获得被匹配字符串片段的起始和终止位置。\n\n```\nvar regexp = /<span>.*?<\\/span>/g;\nregexp.exec('aabb');\n\n// [\"<span>aa</span>\", index: 5, input: \"aabb\"](从1数起，第一个span结尾>的位置)\n'aabb'.search(regexp);\n// 5(从0数起，第一个span的<的位置)\n```\n\n### 分割字符串\n\n一般的字符串分割都是基于固定的分隔符，但是在某些场景下需要用正则做更复杂的处理， 比如用空格来分割字符串，如果有两个连续的空格出来的结果可能不是我们期待的， 这时就要用正则来处理。\n\n```\n'a   b c'.split(' ');\n// [\"a\", \"\", \"\", \"b\", \"c\"]\n```\n\n## 怎么玩？\n\n### 创建正则\n\n两种方式，一种是使用一个正则表达式字面量，其由包含在斜杠之间的模式组成\n\n```\nconst regex = /ab+c/;\nconst regex = /^[a-zA-Z]+[0-9]*\\W?_$/gi;\n```\n\n另一种是调用`RegExp`对象的构造函数\n\n```\nlet regex = new RegExp(\"ab+c\");\nlet regex = new RegExp(/^[a-zA-Z]+[0-9]*\\W?_$/, \"gi\");\n```\n\n###### 参数\n\n- g :全局匹配;找到所有匹配，而不是在第一个匹配后停止\n- i :忽略大小写\n- m :多行; 将开始和结束字符（^和$）视为在多行上工作（也就是，分别匹配每一行的开始和结束（由 \\n 或 \\r 分割），而不只是只匹配整个输入字符串的最开始和最末尾处。\n- u :Unicode; 将模式视为Unicode序列点的序列\n- y :粘性匹配; 仅匹配目标字符串中此正则表达式的lastIndex属性指示的索引(并且不尝试从任何后续的索引匹配)。\n\n### 特殊字符\n\n特殊字符有很多，其含义和用法可以参考MDN文档\n\n### RegExp对象方法\n\n这里想讲test、match、exec和replace这四种方法，因为这几种非常常见和常用也是我学习正则时遇到的难点。\n\n| 用法                                  | 说明                                      | 返回值                      |\n| ----------------------------------- | --------------------------------------- | ------------------------ |\n| `pattern.test(str)`                 | 判断`str`是否包含匹配结果                         | 包含返回`true`，不包含返回`false`。 |\n| `pattern.exec(str)`                 | 根据`pattern`对`str`进行正则匹配                 | 返回匹配结果数组,如匹配不到返回`null`   |\n| `str.match(pattern)`                | 根据`pattern`对str进行正则匹配                   | 返回匹配结果数组,如匹配不到返回`null`   |\n| `str.replace(pattern, replacement)` | 根据`pattern`进行正则匹配,把匹配结果替换为`replacement` | 一个新的字符串                  |\n\n###### test()\n\n字符串的`test`方法，比较常用在判断语句中，用于检测一个字符串是否匹配某个模式：\n\n```\nRegExpObject.test(string)\n```\n\n例：如果字符串 string 中含有与 RegExpObject 匹配的文本，则返回 true，否则返回 false：\n\n```\n/\\d/.test('asdf2')\n// true （字符串中含有数字所以返回true）\n```\n\n###### match()\n\n`match()` 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。\n\n- 非全局匹配\n\n  例：\n\n  ```\n  var a = 'abcd'.match(/\\w/);\n  console.log(a);\n  // [\"a\", index: 0, input: \"abcd\"] （只匹配第一个就停止了）\n  ```\n\n- 全局匹配\n\n  例：\n\n  ```\n  var a = 'abcd'.match(/\\w/g);\n  console.log(a);\n  // [\"a\", \"b\", \"c\", \"d\"] （匹配全部才停止）\n  ```\n\n###### exec()\n\nexec()方法用于比较复杂的模式匹配或者是说你为你提供更多的信息：\n\n```\nRegExpObject.exec(string)\n```\n\n如果在string中找到了匹配的文本，则返回一个包含这些文本的数组，否侧返回`null`。\n\n- 返回的数组的第一个元素是与整个正则匹配的文本，然后数组的第二个元素是与整个正则的第一个子表达式(分组)相匹配的文本，数组的第三个元素整个正则的第二个子表达式(分组)相匹配的文本，以此类推。例：\n\n```\nvar result = /(\\d+)-(\\w+)/.exec('12-ab');\nconsole.log(result);\n// [\"12-ab\", \"12\", \"ab\", index: 0, input: \"12-ab\"]\n```\n\n- 从上面返回的数组结果可知，数组添加了两个额外的属性，分别是：`index, input`\n\n  `index:` 匹配文本的第一个字符的位置。\n\n  `input:` 指输入的整体的文本。\n\n  例：\n\n  ```\n  console.log(result.index)\n  // 0\n  console.log(result.input)\n  // 12-ab\n  ```\n\n  ​\n\n- 执行exec函数时，尽管是全局匹配的正则表达式，但是exec方法只对指定的字符串进行一次匹配，\n\n  获取字符串中第一个与正则表达式想匹配的内容，并且将匹配内容和子匹配的结果存储到返回的数组中。\n\n  例：\n\n  ```\n  /\\d/g.exec('aa22')\n  // [\"2\", index: 2, input: \"aa22\"] （只匹配一个数字就停止了）\n  ```\n\n  ​\n\n###### replace()\n\nreplace()方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。这个方法接收两个必须的参数：\n\n- `pattern:` 这个参数可以是字符串或是RegExp对象。\n- `replacement：` 替换匹配项的字符串或处理函数的返回值\n\n返回结果：\n\n- 当未找到匹配项的时候，返回原始字符串。\n\n  例：\n\n  ```\n  'aaaa'.replace('bbb', 'b')\n  // \"aaaa\"\n  ```\n\n- 当pattern为字符串或者为非全局的RegExp对象的时候，只替换找到的第一项匹配项。\n\n  例：\n\n  ```\n  'aaaa'.replace('a', 'b')\n  // \"baaa\"\n  ```\n\n- 当pattern为全局的RegExp对象的时候，替换每一项匹配项。\n\n  例：\n\n  ```\n  'aaaa'.replace(/\\w/g, 'b')\n  // \"bbbb\"\n  ```\n\n- replacement为函数时，函数的返回值将作为替换字符串;函数的第一个参数的值是每一个匹配项,当然还有第二个参数，它的值是每个匹配项在原始字符串的中位置，从0开始。\n\n  例：\n\n  ```\n  aaaa'.replace(/\\w/g, function() {\n      return 'b';\n  });\n  // \"bbbb\"\n  ```\n\n  ​\n\n## 最后\n\n学习正则最重要的就是正则表达式要写对，我比较笨有时候会写很久。这里推荐两个比较有用的好帮手帮助更有效率地学习正则。\n\n- <http://regex.zjmainstay.cn/>（可以在线检测表达式写的是否正确）\n- <https://jex.im/regulex/#!flags=&re=%5E(a%7Cb)*%3F%24>（可以看到清晰明了的逻辑图）","slug":"regexp1","published":1,"updated":"2018-08-17T07:35:36.762Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvh002goaqou5fnwzbf","content":"<h2 id=\"正则表达式是什么？\"><a href=\"#正则表达式是什么？\" class=\"headerlink\" title=\"正则表达式是什么？\"></a>正则表达式是什么？</h2><p>正则表达式是用于匹配字符串中字符组合的模式。在 JavaScript中，正则表达式也是对象。这些模式被用于 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/RegExp\" target=\"_blank\" rel=\"noopener\"><code>RegExp</code></a> 的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\" target=\"_blank\" rel=\"noopener\"><code>exec</code></a> 和 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\" target=\"_blank\" rel=\"noopener\"><code>test</code></a> 方法, 以及 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/String\" target=\"_blank\" rel=\"noopener\"><code>String</code></a> 的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match\" target=\"_blank\" rel=\"noopener\"><code>match</code></a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace\" target=\"_blank\" rel=\"noopener\"><code>replace</code></a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/search\" target=\"_blank\" rel=\"noopener\"><code>search</code></a> 和 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/split\" target=\"_blank\" rel=\"noopener\"><code>split</code></a> 方法。本章介绍JavaScript的正则表达式（因为目前我只学过JavaScript的正则表达式呀）。</p>\n<h2 id=\"可以做什么？\"><a href=\"#可以做什么？\" class=\"headerlink\" title=\"可以做什么？\"></a>可以做什么？</h2><h3 id=\"检验格式\"><a href=\"#检验格式\" class=\"headerlink\" title=\"检验格式\"></a>检验格式</h3><p>比如判断某字符串是否全部由数字组成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d+$/.test(&apos;12345&apos;);</span><br><span class=\"line\">// true</span><br><span class=\"line\"></span><br><span class=\"line\">/^\\d+$/.test(&apos;12345abc&apos;);</span><br><span class=\"line\">// false</span><br></pre></td></tr></table></figure>\n<h3 id=\"内容替换\"><a href=\"#内容替换\" class=\"headerlink\" title=\"内容替换\"></a>内容替换</h3><p>比如将字符串中的数字替换成$号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;abcd1234&apos;.replace(/\\d/g,&apos;$&apos;);</span><br><span class=\"line\">// &quot;abcd$$$$&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取内容\"><a href=\"#提取内容\" class=\"headerlink\" title=\"提取内容\"></a>提取内容</h3><p>字符串的 <code>match</code> 方法可以将匹配到的字符串片段复制到数据中并返回</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;abcd1234&apos;.match(&apos;cd12&apos;);</span><br><span class=\"line\">// [&quot;cd12&quot;, index: 2, input: &quot;abcd1234&quot;]</span><br></pre></td></tr></table></figure>\n<h3 id=\"确定位置\"><a href=\"#确定位置\" class=\"headerlink\" title=\"确定位置\"></a>确定位置</h3><p>用下面两种方法可以获得被匹配字符串片段的起始和终止位置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var regexp = /&lt;span&gt;.*?&lt;\\/span&gt;/g;</span><br><span class=\"line\">regexp.exec(&apos;aabb&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// [&quot;&lt;span&gt;aa&lt;/span&gt;&quot;, index: 5, input: &quot;aabb&quot;](从1数起，第一个span结尾&gt;的位置)</span><br><span class=\"line\">&apos;aabb&apos;.search(regexp);</span><br><span class=\"line\">// 5(从0数起，第一个span的&lt;的位置)</span><br></pre></td></tr></table></figure>\n<h3 id=\"分割字符串\"><a href=\"#分割字符串\" class=\"headerlink\" title=\"分割字符串\"></a>分割字符串</h3><p>一般的字符串分割都是基于固定的分隔符，但是在某些场景下需要用正则做更复杂的处理， 比如用空格来分割字符串，如果有两个连续的空格出来的结果可能不是我们期待的， 这时就要用正则来处理。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;a   b c&apos;.split(&apos; &apos;);</span><br><span class=\"line\">// [&quot;a&quot;, &quot;&quot;, &quot;&quot;, &quot;b&quot;, &quot;c&quot;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"怎么玩？\"><a href=\"#怎么玩？\" class=\"headerlink\" title=\"怎么玩？\"></a>怎么玩？</h2><h3 id=\"创建正则\"><a href=\"#创建正则\" class=\"headerlink\" title=\"创建正则\"></a>创建正则</h3><p>两种方式，一种是使用一个正则表达式字面量，其由包含在斜杠之间的模式组成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const regex = /ab+c/;</span><br><span class=\"line\">const regex = /^[a-zA-Z]+[0-9]*\\W?_$/gi;</span><br></pre></td></tr></table></figure>\n<p>另一种是调用<code>RegExp</code>对象的构造函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let regex = new RegExp(&quot;ab+c&quot;);</span><br><span class=\"line\">let regex = new RegExp(/^[a-zA-Z]+[0-9]*\\W?_$/, &quot;gi&quot;);</span><br></pre></td></tr></table></figure>\n<h6 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h6><ul>\n<li>g :全局匹配;找到所有匹配，而不是在第一个匹配后停止</li>\n<li>i :忽略大小写</li>\n<li>m :多行; 将开始和结束字符（^和$）视为在多行上工作（也就是，分别匹配每一行的开始和结束（由 \\n 或 \\r 分割），而不只是只匹配整个输入字符串的最开始和最末尾处。</li>\n<li>u :Unicode; 将模式视为Unicode序列点的序列</li>\n<li>y :粘性匹配; 仅匹配目标字符串中此正则表达式的lastIndex属性指示的索引(并且不尝试从任何后续的索引匹配)。</li>\n</ul>\n<h3 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h3><p>特殊字符有很多，其含义和用法可以参考MDN文档</p>\n<h3 id=\"RegExp对象方法\"><a href=\"#RegExp对象方法\" class=\"headerlink\" title=\"RegExp对象方法\"></a>RegExp对象方法</h3><p>这里想讲test、match、exec和replace这四种方法，因为这几种非常常见和常用也是我学习正则时遇到的难点。</p>\n<table>\n<thead>\n<tr>\n<th>用法</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>pattern.test(str)</code></td>\n<td>判断<code>str</code>是否包含匹配结果</td>\n<td>包含返回<code>true</code>，不包含返回<code>false</code>。</td>\n</tr>\n<tr>\n<td><code>pattern.exec(str)</code></td>\n<td>根据<code>pattern</code>对<code>str</code>进行正则匹配</td>\n<td>返回匹配结果数组,如匹配不到返回<code>null</code></td>\n</tr>\n<tr>\n<td><code>str.match(pattern)</code></td>\n<td>根据<code>pattern</code>对str进行正则匹配</td>\n<td>返回匹配结果数组,如匹配不到返回<code>null</code></td>\n</tr>\n<tr>\n<td><code>str.replace(pattern, replacement)</code></td>\n<td>根据<code>pattern</code>进行正则匹配,把匹配结果替换为<code>replacement</code></td>\n<td>一个新的字符串</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"test\"><a href=\"#test\" class=\"headerlink\" title=\"test()\"></a>test()</h6><p>字符串的<code>test</code>方法，比较常用在判断语句中，用于检测一个字符串是否匹配某个模式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RegExpObject.test(string)</span><br></pre></td></tr></table></figure>\n<p>例：如果字符串 string 中含有与 RegExpObject 匹配的文本，则返回 true，否则返回 false：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/\\d/.test(&apos;asdf2&apos;)</span><br><span class=\"line\">// true （字符串中含有数字所以返回true）</span><br></pre></td></tr></table></figure>\n<h6 id=\"match\"><a href=\"#match\" class=\"headerlink\" title=\"match()\"></a>match()</h6><p><code>match()</code> 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。</p>\n<ul>\n<li><p>非全局匹配</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = &apos;abcd&apos;.match(/\\w/);</span><br><span class=\"line\">console.log(a);</span><br><span class=\"line\">// [&quot;a&quot;, index: 0, input: &quot;abcd&quot;] （只匹配第一个就停止了）</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>全局匹配</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = &apos;abcd&apos;.match(/\\w/g);</span><br><span class=\"line\">console.log(a);</span><br><span class=\"line\">// [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;] （匹配全部才停止）</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h6 id=\"exec\"><a href=\"#exec\" class=\"headerlink\" title=\"exec()\"></a>exec()</h6><p>exec()方法用于比较复杂的模式匹配或者是说你为你提供更多的信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RegExpObject.exec(string)</span><br></pre></td></tr></table></figure>\n<p>如果在string中找到了匹配的文本，则返回一个包含这些文本的数组，否侧返回<code>null</code>。</p>\n<ul>\n<li>返回的数组的第一个元素是与整个正则匹配的文本，然后数组的第二个元素是与整个正则的第一个子表达式(分组)相匹配的文本，数组的第三个元素整个正则的第二个子表达式(分组)相匹配的文本，以此类推。例：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var result = /(\\d+)-(\\w+)/.exec(&apos;12-ab&apos;);</span><br><span class=\"line\">console.log(result);</span><br><span class=\"line\">// [&quot;12-ab&quot;, &quot;12&quot;, &quot;ab&quot;, index: 0, input: &quot;12-ab&quot;]</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>从上面返回的数组结果可知，数组添加了两个额外的属性，分别是：<code>index, input</code></p>\n<p><code>index:</code> 匹配文本的第一个字符的位置。</p>\n<p><code>input:</code> 指输入的整体的文本。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(result.index)</span><br><span class=\"line\">// 0</span><br><span class=\"line\">console.log(result.input)</span><br><span class=\"line\">// 12-ab</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n<li><p>执行exec函数时，尽管是全局匹配的正则表达式，但是exec方法只对指定的字符串进行一次匹配，</p>\n<p>获取字符串中第一个与正则表达式想匹配的内容，并且将匹配内容和子匹配的结果存储到返回的数组中。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/\\d/g.exec(&apos;aa22&apos;)</span><br><span class=\"line\">// [&quot;2&quot;, index: 2, input: &quot;aa22&quot;] （只匹配一个数字就停止了）</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n</ul>\n<h6 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace()\"></a>replace()</h6><p>replace()方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。这个方法接收两个必须的参数：</p>\n<ul>\n<li><code>pattern:</code> 这个参数可以是字符串或是RegExp对象。</li>\n<li><code>replacement：</code> 替换匹配项的字符串或处理函数的返回值</li>\n</ul>\n<p>返回结果：</p>\n<ul>\n<li><p>当未找到匹配项的时候，返回原始字符串。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;aaaa&apos;.replace(&apos;bbb&apos;, &apos;b&apos;)</span><br><span class=\"line\">// &quot;aaaa&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当pattern为字符串或者为非全局的RegExp对象的时候，只替换找到的第一项匹配项。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;aaaa&apos;.replace(&apos;a&apos;, &apos;b&apos;)</span><br><span class=\"line\">// &quot;baaa&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当pattern为全局的RegExp对象的时候，替换每一项匹配项。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;aaaa&apos;.replace(/\\w/g, &apos;b&apos;)</span><br><span class=\"line\">// &quot;bbbb&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>replacement为函数时，函数的返回值将作为替换字符串;函数的第一个参数的值是每一个匹配项,当然还有第二个参数，它的值是每个匹配项在原始字符串的中位置，从0开始。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aaaa&apos;.replace(/\\w/g, function() &#123;</span><br><span class=\"line\">    return &apos;b&apos;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// &quot;bbbb&quot;</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n</ul>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>学习正则最重要的就是正则表达式要写对，我比较笨有时候会写很久。这里推荐两个比较有用的好帮手帮助更有效率地学习正则。</p>\n<ul>\n<li><a href=\"http://regex.zjmainstay.cn/\" target=\"_blank\" rel=\"noopener\">http://regex.zjmainstay.cn/</a>（可以在线检测表达式写的是否正确）</li>\n<li><a href=\"https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24\" target=\"_blank\" rel=\"noopener\">https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24</a>（可以看到清晰明了的逻辑图）</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"正则表达式是什么？\"><a href=\"#正则表达式是什么？\" class=\"headerlink\" title=\"正则表达式是什么？\"></a>正则表达式是什么？</h2><p>正则表达式是用于匹配字符串中字符组合的模式。在 JavaScript中，正则表达式也是对象。这些模式被用于 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/RegExp\" target=\"_blank\" rel=\"noopener\"><code>RegExp</code></a> 的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec\" target=\"_blank\" rel=\"noopener\"><code>exec</code></a> 和 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\" target=\"_blank\" rel=\"noopener\"><code>test</code></a> 方法, 以及 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/String\" target=\"_blank\" rel=\"noopener\"><code>String</code></a> 的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match\" target=\"_blank\" rel=\"noopener\"><code>match</code></a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace\" target=\"_blank\" rel=\"noopener\"><code>replace</code></a>、<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/search\" target=\"_blank\" rel=\"noopener\"><code>search</code></a> 和 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/split\" target=\"_blank\" rel=\"noopener\"><code>split</code></a> 方法。本章介绍JavaScript的正则表达式（因为目前我只学过JavaScript的正则表达式呀）。</p>\n<h2 id=\"可以做什么？\"><a href=\"#可以做什么？\" class=\"headerlink\" title=\"可以做什么？\"></a>可以做什么？</h2><h3 id=\"检验格式\"><a href=\"#检验格式\" class=\"headerlink\" title=\"检验格式\"></a>检验格式</h3><p>比如判断某字符串是否全部由数字组成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^\\d+$/.test(&apos;12345&apos;);</span><br><span class=\"line\">// true</span><br><span class=\"line\"></span><br><span class=\"line\">/^\\d+$/.test(&apos;12345abc&apos;);</span><br><span class=\"line\">// false</span><br></pre></td></tr></table></figure>\n<h3 id=\"内容替换\"><a href=\"#内容替换\" class=\"headerlink\" title=\"内容替换\"></a>内容替换</h3><p>比如将字符串中的数字替换成$号</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;abcd1234&apos;.replace(/\\d/g,&apos;$&apos;);</span><br><span class=\"line\">// &quot;abcd$$$$&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"提取内容\"><a href=\"#提取内容\" class=\"headerlink\" title=\"提取内容\"></a>提取内容</h3><p>字符串的 <code>match</code> 方法可以将匹配到的字符串片段复制到数据中并返回</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;abcd1234&apos;.match(&apos;cd12&apos;);</span><br><span class=\"line\">// [&quot;cd12&quot;, index: 2, input: &quot;abcd1234&quot;]</span><br></pre></td></tr></table></figure>\n<h3 id=\"确定位置\"><a href=\"#确定位置\" class=\"headerlink\" title=\"确定位置\"></a>确定位置</h3><p>用下面两种方法可以获得被匹配字符串片段的起始和终止位置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var regexp = /&lt;span&gt;.*?&lt;\\/span&gt;/g;</span><br><span class=\"line\">regexp.exec(&apos;aabb&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">// [&quot;&lt;span&gt;aa&lt;/span&gt;&quot;, index: 5, input: &quot;aabb&quot;](从1数起，第一个span结尾&gt;的位置)</span><br><span class=\"line\">&apos;aabb&apos;.search(regexp);</span><br><span class=\"line\">// 5(从0数起，第一个span的&lt;的位置)</span><br></pre></td></tr></table></figure>\n<h3 id=\"分割字符串\"><a href=\"#分割字符串\" class=\"headerlink\" title=\"分割字符串\"></a>分割字符串</h3><p>一般的字符串分割都是基于固定的分隔符，但是在某些场景下需要用正则做更复杂的处理， 比如用空格来分割字符串，如果有两个连续的空格出来的结果可能不是我们期待的， 这时就要用正则来处理。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;a   b c&apos;.split(&apos; &apos;);</span><br><span class=\"line\">// [&quot;a&quot;, &quot;&quot;, &quot;&quot;, &quot;b&quot;, &quot;c&quot;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"怎么玩？\"><a href=\"#怎么玩？\" class=\"headerlink\" title=\"怎么玩？\"></a>怎么玩？</h2><h3 id=\"创建正则\"><a href=\"#创建正则\" class=\"headerlink\" title=\"创建正则\"></a>创建正则</h3><p>两种方式，一种是使用一个正则表达式字面量，其由包含在斜杠之间的模式组成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const regex = /ab+c/;</span><br><span class=\"line\">const regex = /^[a-zA-Z]+[0-9]*\\W?_$/gi;</span><br></pre></td></tr></table></figure>\n<p>另一种是调用<code>RegExp</code>对象的构造函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">let regex = new RegExp(&quot;ab+c&quot;);</span><br><span class=\"line\">let regex = new RegExp(/^[a-zA-Z]+[0-9]*\\W?_$/, &quot;gi&quot;);</span><br></pre></td></tr></table></figure>\n<h6 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h6><ul>\n<li>g :全局匹配;找到所有匹配，而不是在第一个匹配后停止</li>\n<li>i :忽略大小写</li>\n<li>m :多行; 将开始和结束字符（^和$）视为在多行上工作（也就是，分别匹配每一行的开始和结束（由 \\n 或 \\r 分割），而不只是只匹配整个输入字符串的最开始和最末尾处。</li>\n<li>u :Unicode; 将模式视为Unicode序列点的序列</li>\n<li>y :粘性匹配; 仅匹配目标字符串中此正则表达式的lastIndex属性指示的索引(并且不尝试从任何后续的索引匹配)。</li>\n</ul>\n<h3 id=\"特殊字符\"><a href=\"#特殊字符\" class=\"headerlink\" title=\"特殊字符\"></a>特殊字符</h3><p>特殊字符有很多，其含义和用法可以参考MDN文档</p>\n<h3 id=\"RegExp对象方法\"><a href=\"#RegExp对象方法\" class=\"headerlink\" title=\"RegExp对象方法\"></a>RegExp对象方法</h3><p>这里想讲test、match、exec和replace这四种方法，因为这几种非常常见和常用也是我学习正则时遇到的难点。</p>\n<table>\n<thead>\n<tr>\n<th>用法</th>\n<th>说明</th>\n<th>返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>pattern.test(str)</code></td>\n<td>判断<code>str</code>是否包含匹配结果</td>\n<td>包含返回<code>true</code>，不包含返回<code>false</code>。</td>\n</tr>\n<tr>\n<td><code>pattern.exec(str)</code></td>\n<td>根据<code>pattern</code>对<code>str</code>进行正则匹配</td>\n<td>返回匹配结果数组,如匹配不到返回<code>null</code></td>\n</tr>\n<tr>\n<td><code>str.match(pattern)</code></td>\n<td>根据<code>pattern</code>对str进行正则匹配</td>\n<td>返回匹配结果数组,如匹配不到返回<code>null</code></td>\n</tr>\n<tr>\n<td><code>str.replace(pattern, replacement)</code></td>\n<td>根据<code>pattern</code>进行正则匹配,把匹配结果替换为<code>replacement</code></td>\n<td>一个新的字符串</td>\n</tr>\n</tbody>\n</table>\n<h6 id=\"test\"><a href=\"#test\" class=\"headerlink\" title=\"test()\"></a>test()</h6><p>字符串的<code>test</code>方法，比较常用在判断语句中，用于检测一个字符串是否匹配某个模式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RegExpObject.test(string)</span><br></pre></td></tr></table></figure>\n<p>例：如果字符串 string 中含有与 RegExpObject 匹配的文本，则返回 true，否则返回 false：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/\\d/.test(&apos;asdf2&apos;)</span><br><span class=\"line\">// true （字符串中含有数字所以返回true）</span><br></pre></td></tr></table></figure>\n<h6 id=\"match\"><a href=\"#match\" class=\"headerlink\" title=\"match()\"></a>match()</h6><p><code>match()</code> 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。</p>\n<ul>\n<li><p>非全局匹配</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = &apos;abcd&apos;.match(/\\w/);</span><br><span class=\"line\">console.log(a);</span><br><span class=\"line\">// [&quot;a&quot;, index: 0, input: &quot;abcd&quot;] （只匹配第一个就停止了）</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>全局匹配</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var a = &apos;abcd&apos;.match(/\\w/g);</span><br><span class=\"line\">console.log(a);</span><br><span class=\"line\">// [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;] （匹配全部才停止）</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h6 id=\"exec\"><a href=\"#exec\" class=\"headerlink\" title=\"exec()\"></a>exec()</h6><p>exec()方法用于比较复杂的模式匹配或者是说你为你提供更多的信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RegExpObject.exec(string)</span><br></pre></td></tr></table></figure>\n<p>如果在string中找到了匹配的文本，则返回一个包含这些文本的数组，否侧返回<code>null</code>。</p>\n<ul>\n<li>返回的数组的第一个元素是与整个正则匹配的文本，然后数组的第二个元素是与整个正则的第一个子表达式(分组)相匹配的文本，数组的第三个元素整个正则的第二个子表达式(分组)相匹配的文本，以此类推。例：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var result = /(\\d+)-(\\w+)/.exec(&apos;12-ab&apos;);</span><br><span class=\"line\">console.log(result);</span><br><span class=\"line\">// [&quot;12-ab&quot;, &quot;12&quot;, &quot;ab&quot;, index: 0, input: &quot;12-ab&quot;]</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>从上面返回的数组结果可知，数组添加了两个额外的属性，分别是：<code>index, input</code></p>\n<p><code>index:</code> 匹配文本的第一个字符的位置。</p>\n<p><code>input:</code> 指输入的整体的文本。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(result.index)</span><br><span class=\"line\">// 0</span><br><span class=\"line\">console.log(result.input)</span><br><span class=\"line\">// 12-ab</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n<li><p>执行exec函数时，尽管是全局匹配的正则表达式，但是exec方法只对指定的字符串进行一次匹配，</p>\n<p>获取字符串中第一个与正则表达式想匹配的内容，并且将匹配内容和子匹配的结果存储到返回的数组中。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/\\d/g.exec(&apos;aa22&apos;)</span><br><span class=\"line\">// [&quot;2&quot;, index: 2, input: &quot;aa22&quot;] （只匹配一个数字就停止了）</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n</ul>\n<h6 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace()\"></a>replace()</h6><p>replace()方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。这个方法接收两个必须的参数：</p>\n<ul>\n<li><code>pattern:</code> 这个参数可以是字符串或是RegExp对象。</li>\n<li><code>replacement：</code> 替换匹配项的字符串或处理函数的返回值</li>\n</ul>\n<p>返回结果：</p>\n<ul>\n<li><p>当未找到匹配项的时候，返回原始字符串。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;aaaa&apos;.replace(&apos;bbb&apos;, &apos;b&apos;)</span><br><span class=\"line\">// &quot;aaaa&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当pattern为字符串或者为非全局的RegExp对象的时候，只替换找到的第一项匹配项。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;aaaa&apos;.replace(&apos;a&apos;, &apos;b&apos;)</span><br><span class=\"line\">// &quot;baaa&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当pattern为全局的RegExp对象的时候，替换每一项匹配项。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;aaaa&apos;.replace(/\\w/g, &apos;b&apos;)</span><br><span class=\"line\">// &quot;bbbb&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>replacement为函数时，函数的返回值将作为替换字符串;函数的第一个参数的值是每一个匹配项,当然还有第二个参数，它的值是每个匹配项在原始字符串的中位置，从0开始。</p>\n<p>例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aaaa&apos;.replace(/\\w/g, function() &#123;</span><br><span class=\"line\">    return &apos;b&apos;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">// &quot;bbbb&quot;</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n</ul>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>学习正则最重要的就是正则表达式要写对，我比较笨有时候会写很久。这里推荐两个比较有用的好帮手帮助更有效率地学习正则。</p>\n<ul>\n<li><a href=\"http://regex.zjmainstay.cn/\" target=\"_blank\" rel=\"noopener\">http://regex.zjmainstay.cn/</a>（可以在线检测表达式写的是否正确）</li>\n<li><a href=\"https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24\" target=\"_blank\" rel=\"noopener\">https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb)*%3F%24</a>（可以看到清晰明了的逻辑图）</li>\n</ul>\n"},{"title":"常用正则表达式","date":"2017-12-12T13:58:21.000Z","_content":"\n\n\n- 匹配IP地址，比如192.168.1.1\n\n```\n/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/\n```\n\n-  匹配subnet（子网掩码），比如192.168.1.1/22\n\n```\n/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\/(3[0-2]|[0-2]\\d)/\n```\n\n-  匹配IP范围，比如192.168.0.1~192.168.0.2\n\n```\n/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)~((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/\n```\n\n- 比如：192.168.1.1~10\n\n```\n/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\~(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/\n```\n\n\n\n\n\n- 匹配：1.http://{IP}/ 2.http://{IP}:端口/ 3.http://{域名}/ 4.http://{域名}：端口/\n\n\n- 比如：1.http://192.168.0.1/ 2.http://192.168.0.1:8080/ 3.http://www.baidu.com/ 4.http://www.baidu.com:8080/\n\n```\n/^((http|https|ftp):\\/\\/)((((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d))|(a-zA-Z0-9{0,62})((.a-zA-Z0-9{0,62})+?)?):?([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])?\\/$\n```\n\n- 匹配端口号，一般0-65535。两种写法都可以，第一种就是把最大的数提到最前面不需要开始和结尾的符号，第二种就是最小的在最前面需要开始和结尾符号不然匹配不到\n\n```\n1./(6553[0-5]|655[0-2]\\d|65[0-4]\\d{2}|65[0-4]\\d{2}|6[0-4]\\d{3}|[1-5]\\d{4}|[1-9]\\d{3}|[1-9]\\d{2}|[1-9]\\d|[0-9])/\n2./^([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/\n```\n\n\n\n\n\n- 匹配ASCII字符串，只匹配ASCII字符，ASCII字符包括什么自行google\n\n```\n/[\\x00-\\xff]+/g\n```\n\n- 匹配字母/数字/下划线/短横线/中文\n\n```\n/^([\\w-]+|[\\u4e00-\\u9fa5]+)$/\n```\n\n- 匹配数字字母下划线及短横线\n\n```\n/[\\w-]+/\n```\n\n- 单个数字\n\n```\n/[0-9]/或/\\d/\n```\n\n- 多个数字\n\n```\n/[0-9]/或/[0-9]+/或/\\d+/或/\\d/\n```\n\n\n\n ","source":"_posts/regexp.md","raw":"---\ntitle: 常用正则表达式\ndate: 2017-12-12 21:58:21\ntags: 正则表达式\ncategories: JS\n---\n\n\n\n- 匹配IP地址，比如192.168.1.1\n\n```\n/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/\n```\n\n-  匹配subnet（子网掩码），比如192.168.1.1/22\n\n```\n/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\/(3[0-2]|[0-2]\\d)/\n```\n\n-  匹配IP范围，比如192.168.0.1~192.168.0.2\n\n```\n/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)~((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/\n```\n\n- 比如：192.168.1.1~10\n\n```\n/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\~(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/\n```\n\n\n\n\n\n- 匹配：1.http://{IP}/ 2.http://{IP}:端口/ 3.http://{域名}/ 4.http://{域名}：端口/\n\n\n- 比如：1.http://192.168.0.1/ 2.http://192.168.0.1:8080/ 3.http://www.baidu.com/ 4.http://www.baidu.com:8080/\n\n```\n/^((http|https|ftp):\\/\\/)((((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).){3}(25[0-5]|2[0-4]\\d|[01]?\\d?\\d))|(a-zA-Z0-9{0,62})((.a-zA-Z0-9{0,62})+?)?):?([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])?\\/$\n```\n\n- 匹配端口号，一般0-65535。两种写法都可以，第一种就是把最大的数提到最前面不需要开始和结尾的符号，第二种就是最小的在最前面需要开始和结尾符号不然匹配不到\n\n```\n1./(6553[0-5]|655[0-2]\\d|65[0-4]\\d{2}|65[0-4]\\d{2}|6[0-4]\\d{3}|[1-5]\\d{4}|[1-9]\\d{3}|[1-9]\\d{2}|[1-9]\\d|[0-9])/\n2./^([0-9]|[1-9]\\d|[1-9]\\d{2}|[1-9]\\d{3}|[1-5]\\d{4}|6[0-4]\\d{3}|65[0-4]\\d{2}|655[0-2]\\d|6553[0-5])$/\n```\n\n\n\n\n\n- 匹配ASCII字符串，只匹配ASCII字符，ASCII字符包括什么自行google\n\n```\n/[\\x00-\\xff]+/g\n```\n\n- 匹配字母/数字/下划线/短横线/中文\n\n```\n/^([\\w-]+|[\\u4e00-\\u9fa5]+)$/\n```\n\n- 匹配数字字母下划线及短横线\n\n```\n/[\\w-]+/\n```\n\n- 单个数字\n\n```\n/[0-9]/或/\\d/\n```\n\n- 多个数字\n\n```\n/[0-9]/或/[0-9]+/或/\\d+/或/\\d/\n```\n\n\n\n ","slug":"regexp","published":1,"updated":"2018-08-17T07:35:36.762Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvi002joaqo4r54pjul","content":"<ul>\n<li>匹配IP地址，比如192.168.1.1</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配subnet（子网掩码），比如192.168.1.1/22</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\/(3[0-2]|[0-2]\\d)/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配IP范围，比如192.168.0.1~192.168.0.2</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)~((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>比如：192.168.1.1~10</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\~(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配：1.<a href=\"http://{IP}/\" target=\"_blank\" rel=\"noopener\">http://{IP}/</a> 2.<a href=\"http://{IP}:端口/\" target=\"_blank\" rel=\"noopener\">http://{IP}:端口/</a> 3.<a href=\"http://{域名}/\" target=\"_blank\" rel=\"noopener\">http://{域名}/</a> 4.<a href=\"http://{域名}：端口/\" target=\"_blank\" rel=\"noopener\">http://{域名}：端口/</a></li>\n</ul>\n<ul>\n<li>比如：1.<a href=\"http://192.168.0.1/\" target=\"_blank\" rel=\"noopener\">http://192.168.0.1/</a> 2.<a href=\"http://192.168.0.1:8080/\" target=\"_blank\" rel=\"noopener\">http://192.168.0.1:8080/</a> 3.<a href=\"http://www.baidu.com/\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com/</a> 4.<a href=\"http://www.baidu.com:8080/\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com:8080/</a></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^((http|https|ftp):\\/\\/)((((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d))|(a-zA-Z0-9&#123;0,62&#125;)((.a-zA-Z0-9&#123;0,62&#125;)+?)?):?([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5])?\\/$</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配端口号，一般0-65535。两种写法都可以，第一种就是把最大的数提到最前面不需要开始和结尾的符号，第二种就是最小的在最前面需要开始和结尾符号不然匹配不到</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1./(6553[0-5]|655[0-2]\\d|65[0-4]\\d&#123;2&#125;|65[0-4]\\d&#123;2&#125;|6[0-4]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|[1-9]\\d&#123;3&#125;|[1-9]\\d&#123;2&#125;|[1-9]\\d|[0-9])/</span><br><span class=\"line\">2./^([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5])$/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配ASCII字符串，只匹配ASCII字符，ASCII字符包括什么自行google</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[\\x00-\\xff]+/g</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配字母/数字/下划线/短横线/中文</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^([\\w-]+|[\\u4e00-\\u9fa5]+)$/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配数字字母下划线及短横线</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[\\w-]+/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>单个数字</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[0-9]/或/\\d/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>多个数字</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[0-9]/或/[0-9]+/或/\\d+/或/\\d/</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>匹配IP地址，比如192.168.1.1</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配subnet（子网掩码），比如192.168.1.1/22</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\/(3[0-2]|[0-2]\\d)/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配IP范围，比如192.168.0.1~192.168.0.2</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)~((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>比如：192.168.1.1~10</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\~(25[0-5]|2[0-4]\\d|[01]?\\d?\\d)/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配：1.<a href=\"http://{IP}/\" target=\"_blank\" rel=\"noopener\">http://{IP}/</a> 2.<a href=\"http://{IP}:端口/\" target=\"_blank\" rel=\"noopener\">http://{IP}:端口/</a> 3.<a href=\"http://{域名}/\" target=\"_blank\" rel=\"noopener\">http://{域名}/</a> 4.<a href=\"http://{域名}：端口/\" target=\"_blank\" rel=\"noopener\">http://{域名}：端口/</a></li>\n</ul>\n<ul>\n<li>比如：1.<a href=\"http://192.168.0.1/\" target=\"_blank\" rel=\"noopener\">http://192.168.0.1/</a> 2.<a href=\"http://192.168.0.1:8080/\" target=\"_blank\" rel=\"noopener\">http://192.168.0.1:8080/</a> 3.<a href=\"http://www.baidu.com/\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com/</a> 4.<a href=\"http://www.baidu.com:8080/\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com:8080/</a></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^((http|https|ftp):\\/\\/)((((25[0-5]|2[0-4]\\d|[01]?\\d?\\d).)&#123;3&#125;(25[0-5]|2[0-4]\\d|[01]?\\d?\\d))|(a-zA-Z0-9&#123;0,62&#125;)((.a-zA-Z0-9&#123;0,62&#125;)+?)?):?([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5])?\\/$</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配端口号，一般0-65535。两种写法都可以，第一种就是把最大的数提到最前面不需要开始和结尾的符号，第二种就是最小的在最前面需要开始和结尾符号不然匹配不到</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1./(6553[0-5]|655[0-2]\\d|65[0-4]\\d&#123;2&#125;|65[0-4]\\d&#123;2&#125;|6[0-4]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|[1-9]\\d&#123;3&#125;|[1-9]\\d&#123;2&#125;|[1-9]\\d|[0-9])/</span><br><span class=\"line\">2./^([0-9]|[1-9]\\d|[1-9]\\d&#123;2&#125;|[1-9]\\d&#123;3&#125;|[1-5]\\d&#123;4&#125;|6[0-4]\\d&#123;3&#125;|65[0-4]\\d&#123;2&#125;|655[0-2]\\d|6553[0-5])$/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配ASCII字符串，只匹配ASCII字符，ASCII字符包括什么自行google</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[\\x00-\\xff]+/g</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配字母/数字/下划线/短横线/中文</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/^([\\w-]+|[\\u4e00-\\u9fa5]+)$/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>匹配数字字母下划线及短横线</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[\\w-]+/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>单个数字</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[0-9]/或/\\d/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>多个数字</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/[0-9]/或/[0-9]+/或/\\d+/或/\\d/</span><br></pre></td></tr></table></figure>\n"},{"title":"Submodules子模块解决Hexo第三方主题同步更新问题","date":"2018-01-24T08:10:17.000Z","_content":"\n![最近的状态](http://p1cjg886l.bkt.clouddn.com/cry1.jpg)\n\n\n\n\n\n## 现象\n\n从远程仓库clone到本地的hexo博客无法启动，提示“WARN：NO layout：index”\n\n## 问题\n\nhexo博客的next主题不能更新到远程仓库（github），远程仓库的主题文件夹为空。\n\n## 解决方案\n\n### 一：重新clone一个新的next主题到本地\n\n从github上clone博客代码到本地后，重新clone一次next主题到本地。\n\n具体操作：\n\n```shell\n$ git clone https://github.com/Evey-huang/Blog.git (克隆远程代码到本地)\n$ cd Blog (进入博客根目录)\n$ npm install (视情况而定，安装依赖)\n$ rm -rf themes/next/ (移除空的主题目录)\n$ git clone https://github.com/Evey-huang/hexo-theme-next.git themes/next (克隆新的主题并指定本地存储目录为 themes/next)\n$ hexo g (部署)\n$ hexo s (启动)\n```\n\n弊端：每次都要这么做，如果你的主题有自定义，那么每次都要更新配置文件，因为重新clone下来的主题是初始的。\n\n\n\n### 二：使用git submodule管理子模块\n\n什么是[submodule](https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97)？`git submodule`是一个多项目使用共同类库的工具，允许类库项目做为`repository`，子项目作为一个单独的`git项目`存在父项目中，子项目可以有自己独立的`commit`，`push`，`pull`。而父项目以`submodule`的形式包含子项目，父项目可以指定子项目`header`，父项目中的提交信息包含`submodule`的信息，在`clone父项目`的时候可以把`submodule`初始化。\n\n在这里，博客`Blog`为父项目，`hexo next主题`为子项目独立存在于Blog中。\n\n**解决第三方库更新问题就是`fork+submodule`。即先在github上fork next主题仓库，然后再使用submodule。**\n\n具体操作：\n\n```shell\n$ git clone https://github.com/Evey-huang/Blog.git (克隆远程代码到本地)\n$ cd Blog (进入博客根目录)\n$ npm install (视情况而定，安装依赖)\n$ rm -rf themes/next/ (移除空的主题文件夹)\n$ git submodule add https://github.com/Evey-huang/hexo-theme-next.git themes/next (克隆新的主题并指定本地存储目录为 themes/next)\n```\n\n\n\n在执行第5步时出现了下面这个问题：\n\n```\n'themes/next' already exists in the index\n```\n\n**解决方案：**\n\n```shell\n$ git rm -r --cached themes/next\n```\n\n\n\n然后再次执行第5步：\n\n```shell\n$ git submodule add https://github.com/Evey-huang/hexo-theme-next.git themes/next\n```\n\n\n\n修改.git/config和.git/module/themes/next/config文件，在`github`前面加上自己的github名称`Evey-huang@`（不修改的话提交代码会因为没有权限而失败）：\n\n```shell\n$ vim .git/config\n```\n\n![](http://p1cjg886l.bkt.clouddn.com/submodule1.png)\n\n\n\n```shell\n$ vim .git/module/themes/next/config\n```\n\n![](http://p1cjg886l.bkt.clouddn.com/submodule2.png)\n\n\n\n做完以上修改后，可以更新next主题的配置，将自己的自定义配置覆盖原来的配置，然后提交到远程仓库`Evey-huang/hexo-theme-next`\n\n```shell\n$ cd themes/next\n$ git add .\n$ git commit -m \"update\"\n$ git push origin master\n```\n\n提交成功可以在github上看到有更改：\n![](http://p1cjg886l.bkt.clouddn.com/submodule3.png)\n\n\n\n分割线——————————————————————————\n\n以上是添加submodule以及更新next主题的全部步骤，做完这些，无论你换多少台电脑都可以快速地开始工作更新文章啦~\n\n换了电脑后如何快速开始工作？\n\n具体操作：\n\n```shell\n$ git clone https://github.com/Evey-huang/Blog.git\n$ cd Blog\n$ git submodule update --init\n$ cd themes/next\n$ git pull origin master (如果不做这一步，就不能更新到最新的配置)\n$ hexo g\n$ hexo s\n```\n\n\n\n## 小结\n\n其实之前就已经发现每次next主题都不能更新到github，但是工作没有受到影响就忽略了，一直拖着不解决这个问题，直到遇到了才去解决，一开始就胡乱去google得到很多教程，跟着几遍下来发现都不成功，觉得自己大概是[中了邪了]，后面仔细看了[官方解释](https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97)才对submodule有深入的了解，知道其工作原理，然后梳理一下思路才慢慢做成功了，于是有了这篇文章，回过头去看步骤真的很简单，只怪自己当时没看清。","source":"_posts/submodules.md","raw":"---\ntitle: Submodules子模块解决Hexo第三方主题同步更新问题\ndate: 2018-01-24 16:10:17\ntags: [git, submodule]\ncategories: git\n---\n\n![最近的状态](http://p1cjg886l.bkt.clouddn.com/cry1.jpg)\n\n\n\n\n\n## 现象\n\n从远程仓库clone到本地的hexo博客无法启动，提示“WARN：NO layout：index”\n\n## 问题\n\nhexo博客的next主题不能更新到远程仓库（github），远程仓库的主题文件夹为空。\n\n## 解决方案\n\n### 一：重新clone一个新的next主题到本地\n\n从github上clone博客代码到本地后，重新clone一次next主题到本地。\n\n具体操作：\n\n```shell\n$ git clone https://github.com/Evey-huang/Blog.git (克隆远程代码到本地)\n$ cd Blog (进入博客根目录)\n$ npm install (视情况而定，安装依赖)\n$ rm -rf themes/next/ (移除空的主题目录)\n$ git clone https://github.com/Evey-huang/hexo-theme-next.git themes/next (克隆新的主题并指定本地存储目录为 themes/next)\n$ hexo g (部署)\n$ hexo s (启动)\n```\n\n弊端：每次都要这么做，如果你的主题有自定义，那么每次都要更新配置文件，因为重新clone下来的主题是初始的。\n\n\n\n### 二：使用git submodule管理子模块\n\n什么是[submodule](https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97)？`git submodule`是一个多项目使用共同类库的工具，允许类库项目做为`repository`，子项目作为一个单独的`git项目`存在父项目中，子项目可以有自己独立的`commit`，`push`，`pull`。而父项目以`submodule`的形式包含子项目，父项目可以指定子项目`header`，父项目中的提交信息包含`submodule`的信息，在`clone父项目`的时候可以把`submodule`初始化。\n\n在这里，博客`Blog`为父项目，`hexo next主题`为子项目独立存在于Blog中。\n\n**解决第三方库更新问题就是`fork+submodule`。即先在github上fork next主题仓库，然后再使用submodule。**\n\n具体操作：\n\n```shell\n$ git clone https://github.com/Evey-huang/Blog.git (克隆远程代码到本地)\n$ cd Blog (进入博客根目录)\n$ npm install (视情况而定，安装依赖)\n$ rm -rf themes/next/ (移除空的主题文件夹)\n$ git submodule add https://github.com/Evey-huang/hexo-theme-next.git themes/next (克隆新的主题并指定本地存储目录为 themes/next)\n```\n\n\n\n在执行第5步时出现了下面这个问题：\n\n```\n'themes/next' already exists in the index\n```\n\n**解决方案：**\n\n```shell\n$ git rm -r --cached themes/next\n```\n\n\n\n然后再次执行第5步：\n\n```shell\n$ git submodule add https://github.com/Evey-huang/hexo-theme-next.git themes/next\n```\n\n\n\n修改.git/config和.git/module/themes/next/config文件，在`github`前面加上自己的github名称`Evey-huang@`（不修改的话提交代码会因为没有权限而失败）：\n\n```shell\n$ vim .git/config\n```\n\n![](http://p1cjg886l.bkt.clouddn.com/submodule1.png)\n\n\n\n```shell\n$ vim .git/module/themes/next/config\n```\n\n![](http://p1cjg886l.bkt.clouddn.com/submodule2.png)\n\n\n\n做完以上修改后，可以更新next主题的配置，将自己的自定义配置覆盖原来的配置，然后提交到远程仓库`Evey-huang/hexo-theme-next`\n\n```shell\n$ cd themes/next\n$ git add .\n$ git commit -m \"update\"\n$ git push origin master\n```\n\n提交成功可以在github上看到有更改：\n![](http://p1cjg886l.bkt.clouddn.com/submodule3.png)\n\n\n\n分割线——————————————————————————\n\n以上是添加submodule以及更新next主题的全部步骤，做完这些，无论你换多少台电脑都可以快速地开始工作更新文章啦~\n\n换了电脑后如何快速开始工作？\n\n具体操作：\n\n```shell\n$ git clone https://github.com/Evey-huang/Blog.git\n$ cd Blog\n$ git submodule update --init\n$ cd themes/next\n$ git pull origin master (如果不做这一步，就不能更新到最新的配置)\n$ hexo g\n$ hexo s\n```\n\n\n\n## 小结\n\n其实之前就已经发现每次next主题都不能更新到github，但是工作没有受到影响就忽略了，一直拖着不解决这个问题，直到遇到了才去解决，一开始就胡乱去google得到很多教程，跟着几遍下来发现都不成功，觉得自己大概是[中了邪了]，后面仔细看了[官方解释](https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97)才对submodule有深入的了解，知道其工作原理，然后梳理一下思路才慢慢做成功了，于是有了这篇文章，回过头去看步骤真的很简单，只怪自己当时没看清。","slug":"submodules","published":1,"updated":"2018-08-17T07:35:36.762Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvj002moaqojxipyizm","content":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/cry1.jpg\" alt=\"最近的状态\"></p>\n<h2 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h2><p>从远程仓库clone到本地的hexo博客无法启动，提示“WARN：NO layout：index”</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>hexo博客的next主题不能更新到远程仓库（github），远程仓库的主题文件夹为空。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><h3 id=\"一：重新clone一个新的next主题到本地\"><a href=\"#一：重新clone一个新的next主题到本地\" class=\"headerlink\" title=\"一：重新clone一个新的next主题到本地\"></a>一：重新clone一个新的next主题到本地</h3><p>从github上clone博客代码到本地后，重新clone一次next主题到本地。</p>\n<p>具体操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git clone https://github.com/Evey-huang/Blog.git (克隆远程代码到本地)</span><br><span class=\"line\"><span class=\"meta\">$</span> cd Blog (进入博客根目录)</span><br><span class=\"line\"><span class=\"meta\">$</span> npm install (视情况而定，安装依赖)</span><br><span class=\"line\"><span class=\"meta\">$</span> rm -rf themes/next/ (移除空的主题目录)</span><br><span class=\"line\"><span class=\"meta\">$</span> git clone https://github.com/Evey-huang/hexo-theme-next.git themes/next (克隆新的主题并指定本地存储目录为 themes/next)</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo g (部署)</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo s (启动)</span><br></pre></td></tr></table></figure>\n<p>弊端：每次都要这么做，如果你的主题有自定义，那么每次都要更新配置文件，因为重新clone下来的主题是初始的。</p>\n<h3 id=\"二：使用git-submodule管理子模块\"><a href=\"#二：使用git-submodule管理子模块\" class=\"headerlink\" title=\"二：使用git submodule管理子模块\"></a>二：使用git submodule管理子模块</h3><p>什么是<a href=\"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97\" target=\"_blank\" rel=\"noopener\">submodule</a>？<code>git submodule</code>是一个多项目使用共同类库的工具，允许类库项目做为<code>repository</code>，子项目作为一个单独的<code>git项目</code>存在父项目中，子项目可以有自己独立的<code>commit</code>，<code>push</code>，<code>pull</code>。而父项目以<code>submodule</code>的形式包含子项目，父项目可以指定子项目<code>header</code>，父项目中的提交信息包含<code>submodule</code>的信息，在<code>clone父项目</code>的时候可以把<code>submodule</code>初始化。</p>\n<p>在这里，博客<code>Blog</code>为父项目，<code>hexo next主题</code>为子项目独立存在于Blog中。</p>\n<p><strong>解决第三方库更新问题就是<code>fork+submodule</code>。即先在github上fork next主题仓库，然后再使用submodule。</strong></p>\n<p>具体操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git clone https://github.com/Evey-huang/Blog.git (克隆远程代码到本地)</span><br><span class=\"line\"><span class=\"meta\">$</span> cd Blog (进入博客根目录)</span><br><span class=\"line\"><span class=\"meta\">$</span> npm install (视情况而定，安装依赖)</span><br><span class=\"line\"><span class=\"meta\">$</span> rm -rf themes/next/ (移除空的主题文件夹)</span><br><span class=\"line\"><span class=\"meta\">$</span> git submodule add https://github.com/Evey-huang/hexo-theme-next.git themes/next (克隆新的主题并指定本地存储目录为 themes/next)</span><br></pre></td></tr></table></figure>\n<p>在执行第5步时出现了下面这个问题：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;themes/next&apos; already exists in the index</span><br></pre></td></tr></table></figure>\n<p><strong>解决方案：</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git rm -r --cached themes/next</span><br></pre></td></tr></table></figure>\n<p>然后再次执行第5步：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git submodule add https://github.com/Evey-huang/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure>\n<p>修改.git/config和.git/module/themes/next/config文件，在<code>github</code>前面加上自己的github名称<code>Evey-huang@</code>（不修改的话提交代码会因为没有权限而失败）：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> vim .git/config</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/submodule1.png\" alt=\"\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> vim .git/module/themes/next/config</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/submodule2.png\" alt=\"\"></p>\n<p>做完以上修改后，可以更新next主题的配置，将自己的自定义配置覆盖原来的配置，然后提交到远程仓库<code>Evey-huang/hexo-theme-next</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd themes/next</span><br><span class=\"line\"><span class=\"meta\">$</span> git add .</span><br><span class=\"line\"><span class=\"meta\">$</span> git commit -m \"update\"</span><br><span class=\"line\"><span class=\"meta\">$</span> git push origin master</span><br></pre></td></tr></table></figure>\n<p>提交成功可以在github上看到有更改：<br><img src=\"http://p1cjg886l.bkt.clouddn.com/submodule3.png\" alt=\"\"></p>\n<p>分割线——————————————————————————</p>\n<p>以上是添加submodule以及更新next主题的全部步骤，做完这些，无论你换多少台电脑都可以快速地开始工作更新文章啦~</p>\n<p>换了电脑后如何快速开始工作？</p>\n<p>具体操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git clone https://github.com/Evey-huang/Blog.git</span><br><span class=\"line\"><span class=\"meta\">$</span> cd Blog</span><br><span class=\"line\"><span class=\"meta\">$</span> git submodule update --init</span><br><span class=\"line\"><span class=\"meta\">$</span> cd themes/next</span><br><span class=\"line\"><span class=\"meta\">$</span> git pull origin master (如果不做这一步，就不能更新到最新的配置)</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo g</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo s</span><br></pre></td></tr></table></figure>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>其实之前就已经发现每次next主题都不能更新到github，但是工作没有受到影响就忽略了，一直拖着不解决这个问题，直到遇到了才去解决，一开始就胡乱去google得到很多教程，跟着几遍下来发现都不成功，觉得自己大概是[中了邪了]，后面仔细看了<a href=\"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97\" target=\"_blank\" rel=\"noopener\">官方解释</a>才对submodule有深入的了解，知道其工作原理，然后梳理一下思路才慢慢做成功了，于是有了这篇文章，回过头去看步骤真的很简单，只怪自己当时没看清。</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/cry1.jpg\" alt=\"最近的状态\"></p>\n<h2 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h2><p>从远程仓库clone到本地的hexo博客无法启动，提示“WARN：NO layout：index”</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>hexo博客的next主题不能更新到远程仓库（github），远程仓库的主题文件夹为空。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><h3 id=\"一：重新clone一个新的next主题到本地\"><a href=\"#一：重新clone一个新的next主题到本地\" class=\"headerlink\" title=\"一：重新clone一个新的next主题到本地\"></a>一：重新clone一个新的next主题到本地</h3><p>从github上clone博客代码到本地后，重新clone一次next主题到本地。</p>\n<p>具体操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git clone https://github.com/Evey-huang/Blog.git (克隆远程代码到本地)</span><br><span class=\"line\"><span class=\"meta\">$</span> cd Blog (进入博客根目录)</span><br><span class=\"line\"><span class=\"meta\">$</span> npm install (视情况而定，安装依赖)</span><br><span class=\"line\"><span class=\"meta\">$</span> rm -rf themes/next/ (移除空的主题目录)</span><br><span class=\"line\"><span class=\"meta\">$</span> git clone https://github.com/Evey-huang/hexo-theme-next.git themes/next (克隆新的主题并指定本地存储目录为 themes/next)</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo g (部署)</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo s (启动)</span><br></pre></td></tr></table></figure>\n<p>弊端：每次都要这么做，如果你的主题有自定义，那么每次都要更新配置文件，因为重新clone下来的主题是初始的。</p>\n<h3 id=\"二：使用git-submodule管理子模块\"><a href=\"#二：使用git-submodule管理子模块\" class=\"headerlink\" title=\"二：使用git submodule管理子模块\"></a>二：使用git submodule管理子模块</h3><p>什么是<a href=\"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97\" target=\"_blank\" rel=\"noopener\">submodule</a>？<code>git submodule</code>是一个多项目使用共同类库的工具，允许类库项目做为<code>repository</code>，子项目作为一个单独的<code>git项目</code>存在父项目中，子项目可以有自己独立的<code>commit</code>，<code>push</code>，<code>pull</code>。而父项目以<code>submodule</code>的形式包含子项目，父项目可以指定子项目<code>header</code>，父项目中的提交信息包含<code>submodule</code>的信息，在<code>clone父项目</code>的时候可以把<code>submodule</code>初始化。</p>\n<p>在这里，博客<code>Blog</code>为父项目，<code>hexo next主题</code>为子项目独立存在于Blog中。</p>\n<p><strong>解决第三方库更新问题就是<code>fork+submodule</code>。即先在github上fork next主题仓库，然后再使用submodule。</strong></p>\n<p>具体操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git clone https://github.com/Evey-huang/Blog.git (克隆远程代码到本地)</span><br><span class=\"line\"><span class=\"meta\">$</span> cd Blog (进入博客根目录)</span><br><span class=\"line\"><span class=\"meta\">$</span> npm install (视情况而定，安装依赖)</span><br><span class=\"line\"><span class=\"meta\">$</span> rm -rf themes/next/ (移除空的主题文件夹)</span><br><span class=\"line\"><span class=\"meta\">$</span> git submodule add https://github.com/Evey-huang/hexo-theme-next.git themes/next (克隆新的主题并指定本地存储目录为 themes/next)</span><br></pre></td></tr></table></figure>\n<p>在执行第5步时出现了下面这个问题：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;themes/next&apos; already exists in the index</span><br></pre></td></tr></table></figure>\n<p><strong>解决方案：</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git rm -r --cached themes/next</span><br></pre></td></tr></table></figure>\n<p>然后再次执行第5步：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git submodule add https://github.com/Evey-huang/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure>\n<p>修改.git/config和.git/module/themes/next/config文件，在<code>github</code>前面加上自己的github名称<code>Evey-huang@</code>（不修改的话提交代码会因为没有权限而失败）：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> vim .git/config</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/submodule1.png\" alt=\"\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> vim .git/module/themes/next/config</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/submodule2.png\" alt=\"\"></p>\n<p>做完以上修改后，可以更新next主题的配置，将自己的自定义配置覆盖原来的配置，然后提交到远程仓库<code>Evey-huang/hexo-theme-next</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd themes/next</span><br><span class=\"line\"><span class=\"meta\">$</span> git add .</span><br><span class=\"line\"><span class=\"meta\">$</span> git commit -m \"update\"</span><br><span class=\"line\"><span class=\"meta\">$</span> git push origin master</span><br></pre></td></tr></table></figure>\n<p>提交成功可以在github上看到有更改：<br><img src=\"http://p1cjg886l.bkt.clouddn.com/submodule3.png\" alt=\"\"></p>\n<p>分割线——————————————————————————</p>\n<p>以上是添加submodule以及更新next主题的全部步骤，做完这些，无论你换多少台电脑都可以快速地开始工作更新文章啦~</p>\n<p>换了电脑后如何快速开始工作？</p>\n<p>具体操作：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git clone https://github.com/Evey-huang/Blog.git</span><br><span class=\"line\"><span class=\"meta\">$</span> cd Blog</span><br><span class=\"line\"><span class=\"meta\">$</span> git submodule update --init</span><br><span class=\"line\"><span class=\"meta\">$</span> cd themes/next</span><br><span class=\"line\"><span class=\"meta\">$</span> git pull origin master (如果不做这一步，就不能更新到最新的配置)</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo g</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo s</span><br></pre></td></tr></table></figure>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>其实之前就已经发现每次next主题都不能更新到github，但是工作没有受到影响就忽略了，一直拖着不解决这个问题，直到遇到了才去解决，一开始就胡乱去google得到很多教程，跟着几遍下来发现都不成功，觉得自己大概是[中了邪了]，后面仔细看了<a href=\"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97\" target=\"_blank\" rel=\"noopener\">官方解释</a>才对submodule有深入的了解，知道其工作原理，然后梳理一下思路才慢慢做成功了，于是有了这篇文章，回过头去看步骤真的很简单，只怪自己当时没看清。</p>\n"},{"title":"JavaScript字符串反转","date":"2018-08-21T02:25:57.000Z","_content":"\n#### 首先\n\n思路：\n\n> 遍历字符串并将字母链接到新字符串\n\n\n\n###### 过程：\n\n- 第一次迭代，str.length-1 === 5-1 ===o\n- 第二次迭代，4-1 === ol\n- 第三次迭代，3-1 === oll\n- 第四次迭代，2-1 === olle\n- 第五次迭代，1-1 === olleh\n\n#### 方法一\n\n###### 思路：\n\n使用一个`for`循环给原字符串做一个递减遍历，然后将遍历的字符串重新合并成一个新字符串\n\n```js\nfunction reverse(str){\n  var rtnStr = '';\n  for(var i = str.length-1; i>=0;i--){\n    rtnStr +=str[i];\n  }\n  return rtnStr;\n}\nreverseString(\"hello\"); // =>olleh\n```\n\n\n\n#### 方法二\n\n###### 思路：\n\n使用递归实现字符串反向\n\n- substr()方法返回字符串中从指定位置开始到指定长度的子字符串\n- charAt()方法返回字符串中指定位置的字符。字符串中的字符从左向右索引，第一个字符的索引值为0\n\n###### 过程：\n\n第一次递归\n\n1. reverseString(\"ello\")+'h'\n2. reverseString(\"llo\")+'e'\n3. reverseString(\"lo\")+'l'\n4. reverseString(\"o\")+'l'\n5. reverseString(\"\")+'o'\n\n第二次递归\n\n1. reverseString(\"\")+'o'='o'\n2. reverseString(\"o\")+'l'='o'+'l'\n3. reverseString(\"lo\")+'l'='o'+'l'+'l'\n4. reverseString(\"llo\")+'e'='o'+'l'+'l'+e\n5. reverseString(\"ello\")+'h'='o'+'l'+'l'+'e'+'h'\n\n```js\nfunction reverseString (str) {\n    if (str === \"\") {\n        return \"\";\n    } else {\n        return reverseString(str.substr(1)) + str.charAt(0);\n    }\n}\nreverseString(\"hello\"); // =>olleh\n```\n\n改良版\n\n```js\nfunction reverseString(str) { \n    return (str === '') ? '' : reverseString(str.substr(1)) + str.charAt(0); }\nreverseString(\"hello\"); // =>olleh\n```\n\n\n\n#### 方法三\n\n###### 原理：\n\n- split()方法将一个字符串对象的每个字符拆出来，并且将每个字符串当成数组的每个元素\n- reverse()方法用来改变数组，将数组中的元素倒个序排列，第一个数组元素变成最后一个，最后一个变成第一个\n- join()方法将数组中的所有元素边接成一个字符串\n\n\n\n###### 过程：\n\n1. split()将字符串拆分，返回一个新数组['h', 'e', 'l', 'l', 'o']\n2. reverse()将原数组顺序翻转，返回新数组['o', 'l', 'l', 'e', 'h']\n3. join()将数组的每个元素连接在一起，组合成新字符串，返回一个新的字符串“olleh”\n\n```js\nfunction reverseString(str) { \n    return str.split(\"\").reverse().join(\"\"); \n}\nreverseString(\"hello\"); // => olleh\n```\n\n","source":"_posts/reverse.md","raw":"---\ntitle: JavaScript字符串反转\ndate: 2018-08-21 10:25:57\ntags: [reverse, 字符串反转]\ncategories: JS\n---\n\n#### 首先\n\n思路：\n\n> 遍历字符串并将字母链接到新字符串\n\n\n\n###### 过程：\n\n- 第一次迭代，str.length-1 === 5-1 ===o\n- 第二次迭代，4-1 === ol\n- 第三次迭代，3-1 === oll\n- 第四次迭代，2-1 === olle\n- 第五次迭代，1-1 === olleh\n\n#### 方法一\n\n###### 思路：\n\n使用一个`for`循环给原字符串做一个递减遍历，然后将遍历的字符串重新合并成一个新字符串\n\n```js\nfunction reverse(str){\n  var rtnStr = '';\n  for(var i = str.length-1; i>=0;i--){\n    rtnStr +=str[i];\n  }\n  return rtnStr;\n}\nreverseString(\"hello\"); // =>olleh\n```\n\n\n\n#### 方法二\n\n###### 思路：\n\n使用递归实现字符串反向\n\n- substr()方法返回字符串中从指定位置开始到指定长度的子字符串\n- charAt()方法返回字符串中指定位置的字符。字符串中的字符从左向右索引，第一个字符的索引值为0\n\n###### 过程：\n\n第一次递归\n\n1. reverseString(\"ello\")+'h'\n2. reverseString(\"llo\")+'e'\n3. reverseString(\"lo\")+'l'\n4. reverseString(\"o\")+'l'\n5. reverseString(\"\")+'o'\n\n第二次递归\n\n1. reverseString(\"\")+'o'='o'\n2. reverseString(\"o\")+'l'='o'+'l'\n3. reverseString(\"lo\")+'l'='o'+'l'+'l'\n4. reverseString(\"llo\")+'e'='o'+'l'+'l'+e\n5. reverseString(\"ello\")+'h'='o'+'l'+'l'+'e'+'h'\n\n```js\nfunction reverseString (str) {\n    if (str === \"\") {\n        return \"\";\n    } else {\n        return reverseString(str.substr(1)) + str.charAt(0);\n    }\n}\nreverseString(\"hello\"); // =>olleh\n```\n\n改良版\n\n```js\nfunction reverseString(str) { \n    return (str === '') ? '' : reverseString(str.substr(1)) + str.charAt(0); }\nreverseString(\"hello\"); // =>olleh\n```\n\n\n\n#### 方法三\n\n###### 原理：\n\n- split()方法将一个字符串对象的每个字符拆出来，并且将每个字符串当成数组的每个元素\n- reverse()方法用来改变数组，将数组中的元素倒个序排列，第一个数组元素变成最后一个，最后一个变成第一个\n- join()方法将数组中的所有元素边接成一个字符串\n\n\n\n###### 过程：\n\n1. split()将字符串拆分，返回一个新数组['h', 'e', 'l', 'l', 'o']\n2. reverse()将原数组顺序翻转，返回新数组['o', 'l', 'l', 'e', 'h']\n3. join()将数组的每个元素连接在一起，组合成新字符串，返回一个新的字符串“olleh”\n\n```js\nfunction reverseString(str) { \n    return str.split(\"\").reverse().join(\"\"); \n}\nreverseString(\"hello\"); // => olleh\n```\n\n","slug":"reverse","published":1,"updated":"2018-08-21T02:27:59.718Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvk002qoaqofka5877y","content":"<h4 id=\"首先\"><a href=\"#首先\" class=\"headerlink\" title=\"首先\"></a>首先</h4><p>思路：</p>\n<blockquote>\n<p>遍历字符串并将字母链接到新字符串</p>\n</blockquote>\n<h6 id=\"过程：\"><a href=\"#过程：\" class=\"headerlink\" title=\"过程：\"></a>过程：</h6><ul>\n<li>第一次迭代，str.length-1 === 5-1 ===o</li>\n<li>第二次迭代，4-1 === ol</li>\n<li>第三次迭代，3-1 === oll</li>\n<li>第四次迭代，2-1 === olle</li>\n<li>第五次迭代，1-1 === olleh</li>\n</ul>\n<h4 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h4><h6 id=\"思路：\"><a href=\"#思路：\" class=\"headerlink\" title=\"思路：\"></a>思路：</h6><p>使用一个<code>for</code>循环给原字符串做一个递减遍历，然后将遍历的字符串重新合并成一个新字符串</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverse</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> rtnStr = <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = str.length<span class=\"number\">-1</span>; i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">    rtnStr +=str[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> rtnStr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">reverseString(<span class=\"string\">\"hello\"</span>); <span class=\"comment\">// =&gt;olleh</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h4><h6 id=\"思路：-1\"><a href=\"#思路：-1\" class=\"headerlink\" title=\"思路：\"></a>思路：</h6><p>使用递归实现字符串反向</p>\n<ul>\n<li>substr()方法返回字符串中从指定位置开始到指定长度的子字符串</li>\n<li>charAt()方法返回字符串中指定位置的字符。字符串中的字符从左向右索引，第一个字符的索引值为0</li>\n</ul>\n<h6 id=\"过程：-1\"><a href=\"#过程：-1\" class=\"headerlink\" title=\"过程：\"></a>过程：</h6><p>第一次递归</p>\n<ol>\n<li>reverseString(“ello”)+’h’</li>\n<li>reverseString(“llo”)+’e’</li>\n<li>reverseString(“lo”)+’l’</li>\n<li>reverseString(“o”)+’l’</li>\n<li>reverseString(“”)+’o’</li>\n</ol>\n<p>第二次递归</p>\n<ol>\n<li>reverseString(“”)+’o’=’o’</li>\n<li>reverseString(“o”)+’l’=’o’+’l’</li>\n<li>reverseString(“lo”)+’l’=’o’+’l’+’l’</li>\n<li>reverseString(“llo”)+’e’=’o’+’l’+’l’+e</li>\n<li>reverseString(“ello”)+’h’=’o’+’l’+’l’+’e’+’h’</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverseString</span> (<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str === <span class=\"string\">\"\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> reverseString(str.substr(<span class=\"number\">1</span>)) + str.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">reverseString(<span class=\"string\">\"hello\"</span>); <span class=\"comment\">// =&gt;olleh</span></span><br></pre></td></tr></table></figure>\n<p>改良版</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverseString</span>(<span class=\"params\">str</span>) </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> (str === <span class=\"string\">''</span>) ? <span class=\"string\">''</span> : reverseString(str.substr(<span class=\"number\">1</span>)) + str.charAt(<span class=\"number\">0</span>); &#125;</span><br><span class=\"line\">reverseString(<span class=\"string\">\"hello\"</span>); <span class=\"comment\">// =&gt;olleh</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法三\"><a href=\"#方法三\" class=\"headerlink\" title=\"方法三\"></a>方法三</h4><h6 id=\"原理：\"><a href=\"#原理：\" class=\"headerlink\" title=\"原理：\"></a>原理：</h6><ul>\n<li>split()方法将一个字符串对象的每个字符拆出来，并且将每个字符串当成数组的每个元素</li>\n<li>reverse()方法用来改变数组，将数组中的元素倒个序排列，第一个数组元素变成最后一个，最后一个变成第一个</li>\n<li>join()方法将数组中的所有元素边接成一个字符串</li>\n</ul>\n<h6 id=\"过程：-2\"><a href=\"#过程：-2\" class=\"headerlink\" title=\"过程：\"></a>过程：</h6><ol>\n<li>split()将字符串拆分，返回一个新数组[‘h’, ‘e’, ‘l’, ‘l’, ‘o’]</li>\n<li>reverse()将原数组顺序翻转，返回新数组[‘o’, ‘l’, ‘l’, ‘e’, ‘h’]</li>\n<li>join()将数组的每个元素连接在一起，组合成新字符串，返回一个新的字符串“olleh”</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverseString</span>(<span class=\"params\">str</span>) </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.split(<span class=\"string\">\"\"</span>).reverse().join(<span class=\"string\">\"\"</span>); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">reverseString(<span class=\"string\">\"hello\"</span>); <span class=\"comment\">// =&gt; olleh</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"首先\"><a href=\"#首先\" class=\"headerlink\" title=\"首先\"></a>首先</h4><p>思路：</p>\n<blockquote>\n<p>遍历字符串并将字母链接到新字符串</p>\n</blockquote>\n<h6 id=\"过程：\"><a href=\"#过程：\" class=\"headerlink\" title=\"过程：\"></a>过程：</h6><ul>\n<li>第一次迭代，str.length-1 === 5-1 ===o</li>\n<li>第二次迭代，4-1 === ol</li>\n<li>第三次迭代，3-1 === oll</li>\n<li>第四次迭代，2-1 === olle</li>\n<li>第五次迭代，1-1 === olleh</li>\n</ul>\n<h4 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h4><h6 id=\"思路：\"><a href=\"#思路：\" class=\"headerlink\" title=\"思路：\"></a>思路：</h6><p>使用一个<code>for</code>循环给原字符串做一个递减遍历，然后将遍历的字符串重新合并成一个新字符串</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverse</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> rtnStr = <span class=\"string\">''</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = str.length<span class=\"number\">-1</span>; i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">    rtnStr +=str[i];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> rtnStr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">reverseString(<span class=\"string\">\"hello\"</span>); <span class=\"comment\">// =&gt;olleh</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h4><h6 id=\"思路：-1\"><a href=\"#思路：-1\" class=\"headerlink\" title=\"思路：\"></a>思路：</h6><p>使用递归实现字符串反向</p>\n<ul>\n<li>substr()方法返回字符串中从指定位置开始到指定长度的子字符串</li>\n<li>charAt()方法返回字符串中指定位置的字符。字符串中的字符从左向右索引，第一个字符的索引值为0</li>\n</ul>\n<h6 id=\"过程：-1\"><a href=\"#过程：-1\" class=\"headerlink\" title=\"过程：\"></a>过程：</h6><p>第一次递归</p>\n<ol>\n<li>reverseString(“ello”)+’h’</li>\n<li>reverseString(“llo”)+’e’</li>\n<li>reverseString(“lo”)+’l’</li>\n<li>reverseString(“o”)+’l’</li>\n<li>reverseString(“”)+’o’</li>\n</ol>\n<p>第二次递归</p>\n<ol>\n<li>reverseString(“”)+’o’=’o’</li>\n<li>reverseString(“o”)+’l’=’o’+’l’</li>\n<li>reverseString(“lo”)+’l’=’o’+’l’+’l’</li>\n<li>reverseString(“llo”)+’e’=’o’+’l’+’l’+e</li>\n<li>reverseString(“ello”)+’h’=’o’+’l’+’l’+’e’+’h’</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverseString</span> (<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str === <span class=\"string\">\"\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> reverseString(str.substr(<span class=\"number\">1</span>)) + str.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">reverseString(<span class=\"string\">\"hello\"</span>); <span class=\"comment\">// =&gt;olleh</span></span><br></pre></td></tr></table></figure>\n<p>改良版</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverseString</span>(<span class=\"params\">str</span>) </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> (str === <span class=\"string\">''</span>) ? <span class=\"string\">''</span> : reverseString(str.substr(<span class=\"number\">1</span>)) + str.charAt(<span class=\"number\">0</span>); &#125;</span><br><span class=\"line\">reverseString(<span class=\"string\">\"hello\"</span>); <span class=\"comment\">// =&gt;olleh</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法三\"><a href=\"#方法三\" class=\"headerlink\" title=\"方法三\"></a>方法三</h4><h6 id=\"原理：\"><a href=\"#原理：\" class=\"headerlink\" title=\"原理：\"></a>原理：</h6><ul>\n<li>split()方法将一个字符串对象的每个字符拆出来，并且将每个字符串当成数组的每个元素</li>\n<li>reverse()方法用来改变数组，将数组中的元素倒个序排列，第一个数组元素变成最后一个，最后一个变成第一个</li>\n<li>join()方法将数组中的所有元素边接成一个字符串</li>\n</ul>\n<h6 id=\"过程：-2\"><a href=\"#过程：-2\" class=\"headerlink\" title=\"过程：\"></a>过程：</h6><ol>\n<li>split()将字符串拆分，返回一个新数组[‘h’, ‘e’, ‘l’, ‘l’, ‘o’]</li>\n<li>reverse()将原数组顺序翻转，返回新数组[‘o’, ‘l’, ‘l’, ‘e’, ‘h’]</li>\n<li>join()将数组的每个元素连接在一起，组合成新字符串，返回一个新的字符串“olleh”</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reverseString</span>(<span class=\"params\">str</span>) </span>&#123; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> str.split(<span class=\"string\">\"\"</span>).reverse().join(<span class=\"string\">\"\"</span>); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">reverseString(<span class=\"string\">\"hello\"</span>); <span class=\"comment\">// =&gt; olleh</span></span><br></pre></td></tr></table></figure>\n"},{"title":"数据类型","date":"2018-08-21T02:29:50.000Z","_content":"\n基础类型包括：Undefine、Null、Boolean、Number、String，引用类型包括：Object、Array、Function。当一个变量值为引用类型时，直接赋值其他变量传递的是引用。同样的，引用的数据在某个地方改变了值会影响所欲调用这个变量的地方。\n\n#### Undefine和Null\n\n声明一个变量没有赋值，直接访问当前变量可以得到`undefine`\n\n```js\nlet x;\nconsole.log(x); // -> undefine\n```\n\n访问一个对象上不存在的`key`也会取到`undefine`\n\n```js\nlet a = {};\nconsole.log(a.b); // -> undefine\n```\n\nnull表示空值。它不同于undefine，它是有值的只不过是一个空值，而undefine是未定义的临时兜底的缺省值。\n\n#### Number、Boolean和String\n\nJavaScript中带引号的均为字符串，可以是单引号也可以是双引号。JavaScript没有int、float和double之分。\n\n```js\nconsole.log(typeof 10); // -> number\nconsole.log(typeof '10'); // -> string\nconsole.log(typeof true); // -> boolean\nconsole.log(typeof \"true\"); // -> string\n```\n\n#### Array\n\n数组类型、栈结构、有序数组。每个item可以是任意类型的值。\n\n```js\n// 字符串数组\n['string','aaa']\n\n// 对象和字符串混合数组\n[{\n    aa: 'aaa',\n    bb: 'bbb',\n},'string']\n\n// 函数数组\n[() => {\n    return '这是一个函数'\n}, () => {\n return '这是一个函数'\n}]\n```\n\n如果需要取得特定需要的值，直接获取（比如获取第一个数据）：\n\n```js\narray[0]\n```\n\n数据是有序的，遍历数组需要使用流程控制语句for等。为了方便，array内置了一些数组常用操作方法可以简化常用操作，比如\n\n- `forEach()`：把数组每个元素丢到一个处理function里面，相当于for循环\n- `every()`：所有数组元素处理后全部`return true`，那么就`return true`，类似`&&`\n- `some()`：只要有一个数组处理后`return true`，那么就`return true`，类似`||`\n- `filter()`：将处理时`return true`的数组元素拿出来组成一个新数组\n- `map()`：对每个数组元素进行处理，并组成一个新数组\n- `reduce()`：像一个累加器一样，把数组元素全部加起来（从左向右）\n\n```js\nlet list = [];\nlist.push('aa');\nlist.push('bb');\n\n// for循环\nfor(let i=0;i<list.length;i++) {\n    console.log(list[i]);\n}\n\n// forEach循环\nlist.forEach((val, i) => {\n    console.log(val, i);\n})\n```\n\n\n\n#### Object\n\n对象类型，无序，需要指定key等信息关联值。\n\n```js\nlet obj = {\n    name: 'string 字符串',\n    home: {\n        province: '山东'\n    }\n};\n\nobj.age = 18;\n\nconsole.log(obj.name.province);\nlet key = 'age';\nconsole.log(obj[key], obj['age']);\ndelete obj.name;\n```\n\n如果不确定key的值（变量）可以使用如下方法调用：\n\n```js\nlet key = 'age';\nobj[key]; // -> 18\n```\n\n\n\n#### Function\n\n函数类型，用来创建一个函数，通常会返回一个数据。\n\n```js\nfunction fun(a, b) {\n    return a + b;\n}\nfun(1, 2); // -> 3\n```\n\n函数是一个可执行的小程序，根据参数处理一些逻辑并返回一段新的数据，在JavaScript中使用非常多，为此ES6新增了箭头函数语法，用来简化函数书写。箭头函数有个重要特点，就是自动绑定了当前的作用域。\n\n```js\nlet add = function(a, b) {\n    return a + b;\n}\n// 等同于\nlet add = (a, b) => {\n    return a + b\n}\n```\n\n#### 类型转换\n\n类型转换可以通过调用类型的类进行转换，比如将变量a转换成Number类型：\n\n```js\nlet a = '10';\na = Number(a);\n```\n\n###### 转换Number类型\n\n```js\nlet a = '12.33'; // string\nconsole.log(parseInt(a)); // -> 12 // number\nconsole.log(parseFloat(a)); // -> 12.33 number\n```\n\n###### 转换String类型\n\n```js\nlet a = 12.33; // number\nconsole.log(a.toString()); // -> '12.33' string\n```\n\n###### Object转JSON字符串\n\n```js\n// JSON转Object\nlet obj = {\n    a: 'aa',\n    b: 'bb'\n};\nconsole.log(JSON.stringify(obj)); // -> '{\"a\":\"aa\",\"b\": \"bb\"}'\n\n// Object转JSON\nlet objStr = '{\"a\":\"aa\",\"b\":\"bb\"}';\nconsole.log(JSON.parse(objStr)); // -> {\"a\":\"aa\",\"b\": \"bb\"}\n```\n\n###### 转换Boolean类型\n\n```js\nconsole.log(!!'a'); // -> true\nconsole.log(!!''); // -> false 空字符串\nconsole.log(!!0); // -> false 数字0\nconsole.log(!!10); // -> true\nconsole.log(!!null); // -> false\nconsole.log(!!undefine); // -> false\nconsole.log(!![].length); // -> false\n```\n\n","source":"_posts/type-of-date.md","raw":"---\ntitle: 数据类型\ndate: 2018-08-21 10:29:50\ntags: [undefine, null, boolean, number, string, object, array, function]\ncategories: JS\n---\n\n基础类型包括：Undefine、Null、Boolean、Number、String，引用类型包括：Object、Array、Function。当一个变量值为引用类型时，直接赋值其他变量传递的是引用。同样的，引用的数据在某个地方改变了值会影响所欲调用这个变量的地方。\n\n#### Undefine和Null\n\n声明一个变量没有赋值，直接访问当前变量可以得到`undefine`\n\n```js\nlet x;\nconsole.log(x); // -> undefine\n```\n\n访问一个对象上不存在的`key`也会取到`undefine`\n\n```js\nlet a = {};\nconsole.log(a.b); // -> undefine\n```\n\nnull表示空值。它不同于undefine，它是有值的只不过是一个空值，而undefine是未定义的临时兜底的缺省值。\n\n#### Number、Boolean和String\n\nJavaScript中带引号的均为字符串，可以是单引号也可以是双引号。JavaScript没有int、float和double之分。\n\n```js\nconsole.log(typeof 10); // -> number\nconsole.log(typeof '10'); // -> string\nconsole.log(typeof true); // -> boolean\nconsole.log(typeof \"true\"); // -> string\n```\n\n#### Array\n\n数组类型、栈结构、有序数组。每个item可以是任意类型的值。\n\n```js\n// 字符串数组\n['string','aaa']\n\n// 对象和字符串混合数组\n[{\n    aa: 'aaa',\n    bb: 'bbb',\n},'string']\n\n// 函数数组\n[() => {\n    return '这是一个函数'\n}, () => {\n return '这是一个函数'\n}]\n```\n\n如果需要取得特定需要的值，直接获取（比如获取第一个数据）：\n\n```js\narray[0]\n```\n\n数据是有序的，遍历数组需要使用流程控制语句for等。为了方便，array内置了一些数组常用操作方法可以简化常用操作，比如\n\n- `forEach()`：把数组每个元素丢到一个处理function里面，相当于for循环\n- `every()`：所有数组元素处理后全部`return true`，那么就`return true`，类似`&&`\n- `some()`：只要有一个数组处理后`return true`，那么就`return true`，类似`||`\n- `filter()`：将处理时`return true`的数组元素拿出来组成一个新数组\n- `map()`：对每个数组元素进行处理，并组成一个新数组\n- `reduce()`：像一个累加器一样，把数组元素全部加起来（从左向右）\n\n```js\nlet list = [];\nlist.push('aa');\nlist.push('bb');\n\n// for循环\nfor(let i=0;i<list.length;i++) {\n    console.log(list[i]);\n}\n\n// forEach循环\nlist.forEach((val, i) => {\n    console.log(val, i);\n})\n```\n\n\n\n#### Object\n\n对象类型，无序，需要指定key等信息关联值。\n\n```js\nlet obj = {\n    name: 'string 字符串',\n    home: {\n        province: '山东'\n    }\n};\n\nobj.age = 18;\n\nconsole.log(obj.name.province);\nlet key = 'age';\nconsole.log(obj[key], obj['age']);\ndelete obj.name;\n```\n\n如果不确定key的值（变量）可以使用如下方法调用：\n\n```js\nlet key = 'age';\nobj[key]; // -> 18\n```\n\n\n\n#### Function\n\n函数类型，用来创建一个函数，通常会返回一个数据。\n\n```js\nfunction fun(a, b) {\n    return a + b;\n}\nfun(1, 2); // -> 3\n```\n\n函数是一个可执行的小程序，根据参数处理一些逻辑并返回一段新的数据，在JavaScript中使用非常多，为此ES6新增了箭头函数语法，用来简化函数书写。箭头函数有个重要特点，就是自动绑定了当前的作用域。\n\n```js\nlet add = function(a, b) {\n    return a + b;\n}\n// 等同于\nlet add = (a, b) => {\n    return a + b\n}\n```\n\n#### 类型转换\n\n类型转换可以通过调用类型的类进行转换，比如将变量a转换成Number类型：\n\n```js\nlet a = '10';\na = Number(a);\n```\n\n###### 转换Number类型\n\n```js\nlet a = '12.33'; // string\nconsole.log(parseInt(a)); // -> 12 // number\nconsole.log(parseFloat(a)); // -> 12.33 number\n```\n\n###### 转换String类型\n\n```js\nlet a = 12.33; // number\nconsole.log(a.toString()); // -> '12.33' string\n```\n\n###### Object转JSON字符串\n\n```js\n// JSON转Object\nlet obj = {\n    a: 'aa',\n    b: 'bb'\n};\nconsole.log(JSON.stringify(obj)); // -> '{\"a\":\"aa\",\"b\": \"bb\"}'\n\n// Object转JSON\nlet objStr = '{\"a\":\"aa\",\"b\":\"bb\"}';\nconsole.log(JSON.parse(objStr)); // -> {\"a\":\"aa\",\"b\": \"bb\"}\n```\n\n###### 转换Boolean类型\n\n```js\nconsole.log(!!'a'); // -> true\nconsole.log(!!''); // -> false 空字符串\nconsole.log(!!0); // -> false 数字0\nconsole.log(!!10); // -> true\nconsole.log(!!null); // -> false\nconsole.log(!!undefine); // -> false\nconsole.log(!![].length); // -> false\n```\n\n","slug":"type-of-date","published":1,"updated":"2018-08-21T02:31:41.360Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvl002toaqo6i10nsmp","content":"<p>基础类型包括：Undefine、Null、Boolean、Number、String，引用类型包括：Object、Array、Function。当一个变量值为引用类型时，直接赋值其他变量传递的是引用。同样的，引用的数据在某个地方改变了值会影响所欲调用这个变量的地方。</p>\n<h4 id=\"Undefine和Null\"><a href=\"#Undefine和Null\" class=\"headerlink\" title=\"Undefine和Null\"></a>Undefine和Null</h4><p>声明一个变量没有赋值，直接访问当前变量可以得到<code>undefine</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(x); <span class=\"comment\">// -&gt; undefine</span></span><br></pre></td></tr></table></figure>\n<p>访问一个对象上不存在的<code>key</code>也会取到<code>undefine</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = &#123;&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.b); <span class=\"comment\">// -&gt; undefine</span></span><br></pre></td></tr></table></figure>\n<p>null表示空值。它不同于undefine，它是有值的只不过是一个空值，而undefine是未定义的临时兜底的缺省值。</p>\n<h4 id=\"Number、Boolean和String\"><a href=\"#Number、Boolean和String\" class=\"headerlink\" title=\"Number、Boolean和String\"></a>Number、Boolean和String</h4><p>JavaScript中带引号的均为字符串，可以是单引号也可以是双引号。JavaScript没有int、float和double之分。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"number\">10</span>); <span class=\"comment\">// -&gt; number</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"string\">'10'</span>); <span class=\"comment\">// -&gt; string</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"literal\">true</span>); <span class=\"comment\">// -&gt; boolean</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"string\">\"true\"</span>); <span class=\"comment\">// -&gt; string</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h4><p>数组类型、栈结构、有序数组。每个item可以是任意类型的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 字符串数组</span></span><br><span class=\"line\">[<span class=\"string\">'string'</span>,<span class=\"string\">'aaa'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对象和字符串混合数组</span></span><br><span class=\"line\">[&#123;</span><br><span class=\"line\">    aa: <span class=\"string\">'aaa'</span>,</span><br><span class=\"line\">    bb: <span class=\"string\">'bbb'</span>,</span><br><span class=\"line\">&#125;,<span class=\"string\">'string'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数数组</span></span><br><span class=\"line\">[<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'这是一个函数'</span></span><br><span class=\"line\">&#125;, () =&gt; &#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"string\">'这是一个函数'</span></span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n<p>如果需要取得特定需要的值，直接获取（比如获取第一个数据）：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n<p>数据是有序的，遍历数组需要使用流程控制语句for等。为了方便，array内置了一些数组常用操作方法可以简化常用操作，比如</p>\n<ul>\n<li><code>forEach()</code>：把数组每个元素丢到一个处理function里面，相当于for循环</li>\n<li><code>every()</code>：所有数组元素处理后全部<code>return true</code>，那么就<code>return true</code>，类似<code>&amp;&amp;</code></li>\n<li><code>some()</code>：只要有一个数组处理后<code>return true</code>，那么就<code>return true</code>，类似<code>||</code></li>\n<li><code>filter()</code>：将处理时<code>return true</code>的数组元素拿出来组成一个新数组</li>\n<li><code>map()</code>：对每个数组元素进行处理，并组成一个新数组</li>\n<li><code>reduce()</code>：像一个累加器一样，把数组元素全部加起来（从左向右）</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> list = [];</span><br><span class=\"line\">list.push(<span class=\"string\">'aa'</span>);</span><br><span class=\"line\">list.push(<span class=\"string\">'bb'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// for循环</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;list.length;i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(list[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// forEach循环</span></span><br><span class=\"line\">list.forEach(<span class=\"function\">(<span class=\"params\">val, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(val, i);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"Object\"><a href=\"#Object\" class=\"headerlink\" title=\"Object\"></a>Object</h4><p>对象类型，无序，需要指定key等信息关联值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'string 字符串'</span>,</span><br><span class=\"line\">    home: &#123;</span><br><span class=\"line\">        province: <span class=\"string\">'山东'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">obj.age = <span class=\"number\">18</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.name.province);</span><br><span class=\"line\"><span class=\"keyword\">let</span> key = <span class=\"string\">'age'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj[key], obj[<span class=\"string\">'age'</span>]);</span><br><span class=\"line\"><span class=\"keyword\">delete</span> obj.name;</span><br></pre></td></tr></table></figure>\n<p>如果不确定key的值（变量）可以使用如下方法调用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> key = <span class=\"string\">'age'</span>;</span><br><span class=\"line\">obj[key]; <span class=\"comment\">// -&gt; 18</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Function\"><a href=\"#Function\" class=\"headerlink\" title=\"Function\"></a>Function</h4><p>函数类型，用来创建一个函数，通常会返回一个数据。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fun(<span class=\"number\">1</span>, <span class=\"number\">2</span>); <span class=\"comment\">// -&gt; 3</span></span><br></pre></td></tr></table></figure>\n<p>函数是一个可执行的小程序，根据参数处理一些逻辑并返回一段新的数据，在JavaScript中使用非常多，为此ES6新增了箭头函数语法，用来简化函数书写。箭头函数有个重要特点，就是自动绑定了当前的作用域。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> add = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 等同于</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> add = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h4><p>类型转换可以通过调用类型的类进行转换，比如将变量a转换成Number类型：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">'10'</span>;</span><br><span class=\"line\">a = <span class=\"built_in\">Number</span>(a);</span><br></pre></td></tr></table></figure>\n<h6 id=\"转换Number类型\"><a href=\"#转换Number类型\" class=\"headerlink\" title=\"转换Number类型\"></a>转换Number类型</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">'12.33'</span>; <span class=\"comment\">// string</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">parseInt</span>(a)); <span class=\"comment\">// -&gt; 12 // number</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">parseFloat</span>(a)); <span class=\"comment\">// -&gt; 12.33 number</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"转换String类型\"><a href=\"#转换String类型\" class=\"headerlink\" title=\"转换String类型\"></a>转换String类型</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">12.33</span>; <span class=\"comment\">// number</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.toString()); <span class=\"comment\">// -&gt; '12.33' string</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"Object转JSON字符串\"><a href=\"#Object转JSON字符串\" class=\"headerlink\" title=\"Object转JSON字符串\"></a>Object转JSON字符串</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// JSON转Object</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">    a: <span class=\"string\">'aa'</span>,</span><br><span class=\"line\">    b: <span class=\"string\">'bb'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(obj)); <span class=\"comment\">// -&gt; '&#123;\"a\":\"aa\",\"b\": \"bb\"&#125;'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Object转JSON</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> objStr = <span class=\"string\">'&#123;\"a\":\"aa\",\"b\":\"bb\"&#125;'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.parse(objStr)); <span class=\"comment\">// -&gt; &#123;\"a\":\"aa\",\"b\": \"bb\"&#125;</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"转换Boolean类型\"><a href=\"#转换Boolean类型\" class=\"headerlink\" title=\"转换Boolean类型\"></a>转换Boolean类型</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"string\">'a'</span>); <span class=\"comment\">// -&gt; true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"string\">''</span>); <span class=\"comment\">// -&gt; false 空字符串</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"number\">0</span>); <span class=\"comment\">// -&gt; false 数字0</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"number\">10</span>); <span class=\"comment\">// -&gt; true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"literal\">null</span>); <span class=\"comment\">// -&gt; false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!undefine); <span class=\"comment\">// -&gt; false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!![].length); <span class=\"comment\">// -&gt; false</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>基础类型包括：Undefine、Null、Boolean、Number、String，引用类型包括：Object、Array、Function。当一个变量值为引用类型时，直接赋值其他变量传递的是引用。同样的，引用的数据在某个地方改变了值会影响所欲调用这个变量的地方。</p>\n<h4 id=\"Undefine和Null\"><a href=\"#Undefine和Null\" class=\"headerlink\" title=\"Undefine和Null\"></a>Undefine和Null</h4><p>声明一个变量没有赋值，直接访问当前变量可以得到<code>undefine</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(x); <span class=\"comment\">// -&gt; undefine</span></span><br></pre></td></tr></table></figure>\n<p>访问一个对象上不存在的<code>key</code>也会取到<code>undefine</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = &#123;&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.b); <span class=\"comment\">// -&gt; undefine</span></span><br></pre></td></tr></table></figure>\n<p>null表示空值。它不同于undefine，它是有值的只不过是一个空值，而undefine是未定义的临时兜底的缺省值。</p>\n<h4 id=\"Number、Boolean和String\"><a href=\"#Number、Boolean和String\" class=\"headerlink\" title=\"Number、Boolean和String\"></a>Number、Boolean和String</h4><p>JavaScript中带引号的均为字符串，可以是单引号也可以是双引号。JavaScript没有int、float和double之分。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"number\">10</span>); <span class=\"comment\">// -&gt; number</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"string\">'10'</span>); <span class=\"comment\">// -&gt; string</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"literal\">true</span>); <span class=\"comment\">// -&gt; boolean</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">typeof</span> <span class=\"string\">\"true\"</span>); <span class=\"comment\">// -&gt; string</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h4><p>数组类型、栈结构、有序数组。每个item可以是任意类型的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 字符串数组</span></span><br><span class=\"line\">[<span class=\"string\">'string'</span>,<span class=\"string\">'aaa'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对象和字符串混合数组</span></span><br><span class=\"line\">[&#123;</span><br><span class=\"line\">    aa: <span class=\"string\">'aaa'</span>,</span><br><span class=\"line\">    bb: <span class=\"string\">'bbb'</span>,</span><br><span class=\"line\">&#125;,<span class=\"string\">'string'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 函数数组</span></span><br><span class=\"line\">[<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'这是一个函数'</span></span><br><span class=\"line\">&#125;, () =&gt; &#123;</span><br><span class=\"line\"> <span class=\"keyword\">return</span> <span class=\"string\">'这是一个函数'</span></span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure>\n<p>如果需要取得特定需要的值，直接获取（比如获取第一个数据）：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n<p>数据是有序的，遍历数组需要使用流程控制语句for等。为了方便，array内置了一些数组常用操作方法可以简化常用操作，比如</p>\n<ul>\n<li><code>forEach()</code>：把数组每个元素丢到一个处理function里面，相当于for循环</li>\n<li><code>every()</code>：所有数组元素处理后全部<code>return true</code>，那么就<code>return true</code>，类似<code>&amp;&amp;</code></li>\n<li><code>some()</code>：只要有一个数组处理后<code>return true</code>，那么就<code>return true</code>，类似<code>||</code></li>\n<li><code>filter()</code>：将处理时<code>return true</code>的数组元素拿出来组成一个新数组</li>\n<li><code>map()</code>：对每个数组元素进行处理，并组成一个新数组</li>\n<li><code>reduce()</code>：像一个累加器一样，把数组元素全部加起来（从左向右）</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> list = [];</span><br><span class=\"line\">list.push(<span class=\"string\">'aa'</span>);</span><br><span class=\"line\">list.push(<span class=\"string\">'bb'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// for循环</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>;i&lt;list.length;i++) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(list[i]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// forEach循环</span></span><br><span class=\"line\">list.forEach(<span class=\"function\">(<span class=\"params\">val, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(val, i);</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"Object\"><a href=\"#Object\" class=\"headerlink\" title=\"Object\"></a>Object</h4><p>对象类型，无序，需要指定key等信息关联值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'string 字符串'</span>,</span><br><span class=\"line\">    home: &#123;</span><br><span class=\"line\">        province: <span class=\"string\">'山东'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">obj.age = <span class=\"number\">18</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj.name.province);</span><br><span class=\"line\"><span class=\"keyword\">let</span> key = <span class=\"string\">'age'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj[key], obj[<span class=\"string\">'age'</span>]);</span><br><span class=\"line\"><span class=\"keyword\">delete</span> obj.name;</span><br></pre></td></tr></table></figure>\n<p>如果不确定key的值（变量）可以使用如下方法调用：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> key = <span class=\"string\">'age'</span>;</span><br><span class=\"line\">obj[key]; <span class=\"comment\">// -&gt; 18</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Function\"><a href=\"#Function\" class=\"headerlink\" title=\"Function\"></a>Function</h4><p>函数类型，用来创建一个函数，通常会返回一个数据。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fun</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fun(<span class=\"number\">1</span>, <span class=\"number\">2</span>); <span class=\"comment\">// -&gt; 3</span></span><br></pre></td></tr></table></figure>\n<p>函数是一个可执行的小程序，根据参数处理一些逻辑并返回一段新的数据，在JavaScript中使用非常多，为此ES6新增了箭头函数语法，用来简化函数书写。箭头函数有个重要特点，就是自动绑定了当前的作用域。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> add = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 等同于</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> add = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h4><p>类型转换可以通过调用类型的类进行转换，比如将变量a转换成Number类型：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">'10'</span>;</span><br><span class=\"line\">a = <span class=\"built_in\">Number</span>(a);</span><br></pre></td></tr></table></figure>\n<h6 id=\"转换Number类型\"><a href=\"#转换Number类型\" class=\"headerlink\" title=\"转换Number类型\"></a>转换Number类型</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"string\">'12.33'</span>; <span class=\"comment\">// string</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">parseInt</span>(a)); <span class=\"comment\">// -&gt; 12 // number</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">parseFloat</span>(a)); <span class=\"comment\">// -&gt; 12.33 number</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"转换String类型\"><a href=\"#转换String类型\" class=\"headerlink\" title=\"转换String类型\"></a>转换String类型</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">12.33</span>; <span class=\"comment\">// number</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a.toString()); <span class=\"comment\">// -&gt; '12.33' string</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"Object转JSON字符串\"><a href=\"#Object转JSON字符串\" class=\"headerlink\" title=\"Object转JSON字符串\"></a>Object转JSON字符串</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// JSON转Object</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;</span><br><span class=\"line\">    a: <span class=\"string\">'aa'</span>,</span><br><span class=\"line\">    b: <span class=\"string\">'bb'</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(obj)); <span class=\"comment\">// -&gt; '&#123;\"a\":\"aa\",\"b\": \"bb\"&#125;'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Object转JSON</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> objStr = <span class=\"string\">'&#123;\"a\":\"aa\",\"b\":\"bb\"&#125;'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.parse(objStr)); <span class=\"comment\">// -&gt; &#123;\"a\":\"aa\",\"b\": \"bb\"&#125;</span></span><br></pre></td></tr></table></figure>\n<h6 id=\"转换Boolean类型\"><a href=\"#转换Boolean类型\" class=\"headerlink\" title=\"转换Boolean类型\"></a>转换Boolean类型</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"string\">'a'</span>); <span class=\"comment\">// -&gt; true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"string\">''</span>); <span class=\"comment\">// -&gt; false 空字符串</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"number\">0</span>); <span class=\"comment\">// -&gt; false 数字0</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"number\">10</span>); <span class=\"comment\">// -&gt; true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!<span class=\"literal\">null</span>); <span class=\"comment\">// -&gt; false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!!undefine); <span class=\"comment\">// -&gt; false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(!![].length); <span class=\"comment\">// -&gt; false</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Ubuntu安装和配置git","date":"2018-06-28T03:41:22.000Z","_content":"\n\n\n## 安装Git\n\n```shell\n$ sudo add-apt-repository ppa:git-core/ppa\n$ sudo apt-get update\n$ sudo apt-get install git \n$ git --version \n```\n\n\n\n## 配置Git\n\n- 指定用户名和邮箱\n\n```shell\n$ git config --global user.name \"Your Name\"\n$ git config --global user.email \"youremail@domain.com\"\n```\n\n- 查看配置\n\n```shell\n$ git config --list\n```\n\n\n\n## 解决git pull/git push每次都需要输入密码问题\n\n- git bash进入项目目录\n- 执行\n\n```shell\n$ git config --global credential.helper store\n```","source":"_posts/ubuntu1.md","raw":"---\ntitle: Ubuntu安装和配置git\ndate: 2018-06-28 11:41:22\ntags: [ubuntu, git]\ncategories: Ubuntu\n---\n\n\n\n## 安装Git\n\n```shell\n$ sudo add-apt-repository ppa:git-core/ppa\n$ sudo apt-get update\n$ sudo apt-get install git \n$ git --version \n```\n\n\n\n## 配置Git\n\n- 指定用户名和邮箱\n\n```shell\n$ git config --global user.name \"Your Name\"\n$ git config --global user.email \"youremail@domain.com\"\n```\n\n- 查看配置\n\n```shell\n$ git config --list\n```\n\n\n\n## 解决git pull/git push每次都需要输入密码问题\n\n- git bash进入项目目录\n- 执行\n\n```shell\n$ git config --global credential.helper store\n```","slug":"ubuntu1","published":1,"updated":"2018-08-17T07:35:36.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvm002woaqoba41g92a","content":"<h2 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo add-apt-repository ppa:git-core/ppa</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get update</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install git </span><br><span class=\"line\"><span class=\"meta\">$</span> git --version</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置Git\"><a href=\"#配置Git\" class=\"headerlink\" title=\"配置Git\"></a>配置Git</h2><ul>\n<li>指定用户名和邮箱</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git config --global user.name \"Your Name\"</span><br><span class=\"line\"><span class=\"meta\">$</span> git config --global user.email \"youremail@domain.com\"</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git config --list</span><br></pre></td></tr></table></figure>\n<h2 id=\"解决git-pull-git-push每次都需要输入密码问题\"><a href=\"#解决git-pull-git-push每次都需要输入密码问题\" class=\"headerlink\" title=\"解决git pull/git push每次都需要输入密码问题\"></a>解决git pull/git push每次都需要输入密码问题</h2><ul>\n<li>git bash进入项目目录</li>\n<li>执行</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git config --global credential.helper store</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo add-apt-repository ppa:git-core/ppa</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get update</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install git </span><br><span class=\"line\"><span class=\"meta\">$</span> git --version</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置Git\"><a href=\"#配置Git\" class=\"headerlink\" title=\"配置Git\"></a>配置Git</h2><ul>\n<li>指定用户名和邮箱</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git config --global user.name \"Your Name\"</span><br><span class=\"line\"><span class=\"meta\">$</span> git config --global user.email \"youremail@domain.com\"</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git config --list</span><br></pre></td></tr></table></figure>\n<h2 id=\"解决git-pull-git-push每次都需要输入密码问题\"><a href=\"#解决git-pull-git-push每次都需要输入密码问题\" class=\"headerlink\" title=\"解决git pull/git push每次都需要输入密码问题\"></a>解决git pull/git push每次都需要输入密码问题</h2><ul>\n<li>git bash进入项目目录</li>\n<li>执行</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git config --global credential.helper store</span><br></pre></td></tr></table></figure>"},{"title":"ubuntu下使用和配置shadowsocks","date":"2018-06-28T10:25:06.000Z","_content":"\n## 1. 安装shadowsocks-Qt5\n\n```shell\nsudo add-apt-repository ppa:hzwhuang/ss-qt5\n```\n\n```shell\nsudo apt-get update\n```\n\n```shell\nsudo apt-get install shadowsocks-qt5\n```\n\n注意！！此处有bug，执行这三条命令不成功的话则找到：\n\n> 软件和更新->其他软件->修改源，将源修改成artful\n\n安装完成后打开shadowsocks界面配置服务器点击连接即可\n\n\n\n## 2. 配置chrome浏览器\n\n### 2.1 安装SwitchOmega\n\n- 在`https://github.com/FelisCatus/SwitchyOmega/releases`下载`.crx`后缀名的文件\n- 在chrome中打开`chrome://extensions`页面，将下载好的switchOmega插件拖入页面，点击确认即可安装\n\n### 2.2 配置SwitchOmega\n\n- 新建情景模式，`名称`任意，情景模式类型选择`代理服务器`，点击创建。\n\n![](http://p1cjg886l.bkt.clouddn.com/1.png)\n\n- 点击新建的情景模式进行配置：\n\n  \n\n![](http://p1cjg886l.bkt.clouddn.com/2-1.png)\n\n\n\n![](http://p1cjg886l.bkt.clouddn.com/2-2.png)\n\n- 点击`auto switch`进行配置切换模式：\n\n![](http://p1cjg886l.bkt.clouddn.com/2018-05-22%2011-20-59%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n![](http://p1cjg886l.bkt.clouddn.com/2018-05-22%2011-21-21%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n\n\n","source":"_posts/ubuntu下使用和配置shadowsocks.md","raw":"---\ntitle: ubuntu下使用和配置shadowsocks\ndate: 2018-06-28 18:25:06\ntags: [ubuntu, shadowsocks]\ncategories: Ubuntu\n---\n\n## 1. 安装shadowsocks-Qt5\n\n```shell\nsudo add-apt-repository ppa:hzwhuang/ss-qt5\n```\n\n```shell\nsudo apt-get update\n```\n\n```shell\nsudo apt-get install shadowsocks-qt5\n```\n\n注意！！此处有bug，执行这三条命令不成功的话则找到：\n\n> 软件和更新->其他软件->修改源，将源修改成artful\n\n安装完成后打开shadowsocks界面配置服务器点击连接即可\n\n\n\n## 2. 配置chrome浏览器\n\n### 2.1 安装SwitchOmega\n\n- 在`https://github.com/FelisCatus/SwitchyOmega/releases`下载`.crx`后缀名的文件\n- 在chrome中打开`chrome://extensions`页面，将下载好的switchOmega插件拖入页面，点击确认即可安装\n\n### 2.2 配置SwitchOmega\n\n- 新建情景模式，`名称`任意，情景模式类型选择`代理服务器`，点击创建。\n\n![](http://p1cjg886l.bkt.clouddn.com/1.png)\n\n- 点击新建的情景模式进行配置：\n\n  \n\n![](http://p1cjg886l.bkt.clouddn.com/2-1.png)\n\n\n\n![](http://p1cjg886l.bkt.clouddn.com/2-2.png)\n\n- 点击`auto switch`进行配置切换模式：\n\n![](http://p1cjg886l.bkt.clouddn.com/2018-05-22%2011-20-59%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n![](http://p1cjg886l.bkt.clouddn.com/2018-05-22%2011-21-21%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n\n\n","slug":"ubuntu下使用和配置shadowsocks","published":1,"updated":"2018-08-17T07:35:36.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvn002zoaqoi39lnkad","content":"<h2 id=\"1-安装shadowsocks-Qt5\"><a href=\"#1-安装shadowsocks-Qt5\" class=\"headerlink\" title=\"1. 安装shadowsocks-Qt5\"></a>1. 安装shadowsocks-Qt5</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository ppa:hzwhuang/ss-qt5</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install shadowsocks-qt5</span><br></pre></td></tr></table></figure>\n<p>注意！！此处有bug，执行这三条命令不成功的话则找到：</p>\n<blockquote>\n<p>软件和更新-&gt;其他软件-&gt;修改源，将源修改成artful</p>\n</blockquote>\n<p>安装完成后打开shadowsocks界面配置服务器点击连接即可</p>\n<h2 id=\"2-配置chrome浏览器\"><a href=\"#2-配置chrome浏览器\" class=\"headerlink\" title=\"2. 配置chrome浏览器\"></a>2. 配置chrome浏览器</h2><h3 id=\"2-1-安装SwitchOmega\"><a href=\"#2-1-安装SwitchOmega\" class=\"headerlink\" title=\"2.1 安装SwitchOmega\"></a>2.1 安装SwitchOmega</h3><ul>\n<li>在<code>https://github.com/FelisCatus/SwitchyOmega/releases</code>下载<code>.crx</code>后缀名的文件</li>\n<li>在chrome中打开<code>chrome://extensions</code>页面，将下载好的switchOmega插件拖入页面，点击确认即可安装</li>\n</ul>\n<h3 id=\"2-2-配置SwitchOmega\"><a href=\"#2-2-配置SwitchOmega\" class=\"headerlink\" title=\"2.2 配置SwitchOmega\"></a>2.2 配置SwitchOmega</h3><ul>\n<li>新建情景模式，<code>名称</code>任意，情景模式类型选择<code>代理服务器</code>，点击创建。</li>\n</ul>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/1.png\" alt=\"\"></p>\n<ul>\n<li>点击新建的情景模式进行配置：</li>\n</ul>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2-1.png\" alt=\"\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2-2.png\" alt=\"\"></p>\n<ul>\n<li>点击<code>auto switch</code>进行配置切换模式：</li>\n</ul>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-05-22%2011-20-59%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-05-22%2011-21-21%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-安装shadowsocks-Qt5\"><a href=\"#1-安装shadowsocks-Qt5\" class=\"headerlink\" title=\"1. 安装shadowsocks-Qt5\"></a>1. 安装shadowsocks-Qt5</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository ppa:hzwhuang/ss-qt5</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install shadowsocks-qt5</span><br></pre></td></tr></table></figure>\n<p>注意！！此处有bug，执行这三条命令不成功的话则找到：</p>\n<blockquote>\n<p>软件和更新-&gt;其他软件-&gt;修改源，将源修改成artful</p>\n</blockquote>\n<p>安装完成后打开shadowsocks界面配置服务器点击连接即可</p>\n<h2 id=\"2-配置chrome浏览器\"><a href=\"#2-配置chrome浏览器\" class=\"headerlink\" title=\"2. 配置chrome浏览器\"></a>2. 配置chrome浏览器</h2><h3 id=\"2-1-安装SwitchOmega\"><a href=\"#2-1-安装SwitchOmega\" class=\"headerlink\" title=\"2.1 安装SwitchOmega\"></a>2.1 安装SwitchOmega</h3><ul>\n<li>在<code>https://github.com/FelisCatus/SwitchyOmega/releases</code>下载<code>.crx</code>后缀名的文件</li>\n<li>在chrome中打开<code>chrome://extensions</code>页面，将下载好的switchOmega插件拖入页面，点击确认即可安装</li>\n</ul>\n<h3 id=\"2-2-配置SwitchOmega\"><a href=\"#2-2-配置SwitchOmega\" class=\"headerlink\" title=\"2.2 配置SwitchOmega\"></a>2.2 配置SwitchOmega</h3><ul>\n<li>新建情景模式，<code>名称</code>任意，情景模式类型选择<code>代理服务器</code>，点击创建。</li>\n</ul>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/1.png\" alt=\"\"></p>\n<ul>\n<li>点击新建的情景模式进行配置：</li>\n</ul>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2-1.png\" alt=\"\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2-2.png\" alt=\"\"></p>\n<ul>\n<li>点击<code>auto switch</code>进行配置切换模式：</li>\n</ul>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-05-22%2011-20-59%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/2018-05-22%2011-21-21%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n"},{"title":"ubuntu安装WPS","date":"2018-06-28T03:57:26.000Z","_content":"\n\n\n1. 进入[WPS官网](http://wps-community.org/download.html)下载最新的安装包及[字体文件](http://wps-community.org/download.html?vl=fonts#download)\n2. 下载[libpng12-0](https://packages.debian.org/zh-cn/wheezy/amd64/libpng12-0/download)\n\n```shell\nwget http://ftp.cn.debian.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1+deb7u2_amd64.deb\n```\n\n1. 安装\n\n```shell\nsudo dpkg -i libpng12-0_1.2.49-1+deb7u2_amd64.deb\nsudo dpkg -i wps-office_10.1.0.5707_a21_amd64.deb\nsudo dpkg -i wps-office-fonts_1.0_all.deb\n```\n\n","source":"_posts/ubuntu安装WPS.md","raw":"---\ntitle: ubuntu安装WPS\ndate: 2018-06-28 11:57:26\ntags: [ubuntu18.04, wps]\ncategories: Ubuntu\n---\n\n\n\n1. 进入[WPS官网](http://wps-community.org/download.html)下载最新的安装包及[字体文件](http://wps-community.org/download.html?vl=fonts#download)\n2. 下载[libpng12-0](https://packages.debian.org/zh-cn/wheezy/amd64/libpng12-0/download)\n\n```shell\nwget http://ftp.cn.debian.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1+deb7u2_amd64.deb\n```\n\n1. 安装\n\n```shell\nsudo dpkg -i libpng12-0_1.2.49-1+deb7u2_amd64.deb\nsudo dpkg -i wps-office_10.1.0.5707_a21_amd64.deb\nsudo dpkg -i wps-office-fonts_1.0_all.deb\n```\n\n","slug":"ubuntu安装WPS","published":1,"updated":"2018-08-17T07:35:36.763Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvo0033oaqo3qw6xzpc","content":"<ol>\n<li>进入<a href=\"http://wps-community.org/download.html\" target=\"_blank\" rel=\"noopener\">WPS官网</a>下载最新的安装包及<a href=\"http://wps-community.org/download.html?vl=fonts#download\" target=\"_blank\" rel=\"noopener\">字体文件</a></li>\n<li>下载<a href=\"https://packages.debian.org/zh-cn/wheezy/amd64/libpng12-0/download\" target=\"_blank\" rel=\"noopener\">libpng12-0</a></li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://ftp.cn.debian.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1+deb7u2_amd64.deb</span><br></pre></td></tr></table></figure>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i libpng12-0_1.2.49-1+deb7u2_amd64.deb</span><br><span class=\"line\">sudo dpkg -i wps-office_10.1.0.5707_a21_amd64.deb</span><br><span class=\"line\">sudo dpkg -i wps-office-fonts_1.0_all.deb</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>进入<a href=\"http://wps-community.org/download.html\" target=\"_blank\" rel=\"noopener\">WPS官网</a>下载最新的安装包及<a href=\"http://wps-community.org/download.html?vl=fonts#download\" target=\"_blank\" rel=\"noopener\">字体文件</a></li>\n<li>下载<a href=\"https://packages.debian.org/zh-cn/wheezy/amd64/libpng12-0/download\" target=\"_blank\" rel=\"noopener\">libpng12-0</a></li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://ftp.cn.debian.org/debian/pool/main/libp/libpng/libpng12-0_1.2.49-1+deb7u2_amd64.deb</span><br></pre></td></tr></table></figure>\n<ol>\n<li>安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i libpng12-0_1.2.49-1+deb7u2_amd64.deb</span><br><span class=\"line\">sudo dpkg -i wps-office_10.1.0.5707_a21_amd64.deb</span><br><span class=\"line\">sudo dpkg -i wps-office-fonts_1.0_all.deb</span><br></pre></td></tr></table></figure>\n"},{"title":"ubuntu/Mac OSX安装Mongodb","date":"2018-06-28T03:54:03.000Z","_content":"\n## Mac OSX安装mongodb\n\n- 安装mongodb\n\n```shell\nbrew install mongodb\n```\n\n- 启动mongodb\n\n```shell\nmongod --config /usr/local/etc/mongod.conf\n```\n\n- 连接到mongo\n\n```shell\nmongo\n```\n\n\n\n## Ubuntu16.04自动安装mongodb\n\n- 导入包管理系统使用的公钥\n\n```shell\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5\n```\n\n- 为mongodb创建一个列表文件\n\n```shell\necho \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list\n```\n\n- 重新加载本地包数据库\n\n```shell\nsudo apt-get update\n```\n\n- 安装最新版mongodb软件包\n\n```shell\nsudo apt-get install -y mongodb-org\n```\n\n- 查看mongodb版本\n\n```shell\nmongod --version\n```\n\n- 启动mongodb\n\n```shell\nsudo service mongod start\n```\n\n- 开始使用mongodb\n\n```shell\nmongo\nuse admin\n```\n\n- 添加用户名和密码\n\n```shell\ndb.createUser({user:'admin', pwd:'r00tme', roles: [ { role: \"root\", db: \"admin\" } ]})\n```\n\n- 查看所有用户\n\n```shell\nshow users\n```\n\n\n\n### 其他操作\n\n- 停止mongodb\n\n```shell\nsudo service mongod stop\n```\n\n- 重新启动mongodb\n\n```shell\nsudo service mongod restart\n```\n\n\n\n### 卸载Mongodb\n\n- 停止mongodb\n\n```shell\nsudo service mongod stop\n```\n\n- 删除包\n\n```shell\nsudo apt-get purge mongodb-org*\n```\n\n- 删除数据目录\n\n```shell\nsudo rm -f /var/log/mongodb\nsudo rm -f /var/lib/mongodb\n```\n\n\n\n## Ubuntu18.04手动安装mongodb\n\n- 下载所需版本的mongodb二进制文件\n\n```shell\ncurl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz\n```\n\n- 从下载的文档中提取文件\n\n```shell\ntar -zxvf mongodb-linux-x86_64-3.6.4.tgz\n```\n\n- 新建文件夹名为mongodb\n\n```shell\nmkdir -p mongodb\n```\n\n- 将解压的文件复制到mongodb文件夹中\n\n```shell\ncp -R -n mongodb-linux-x86_64-3.6.4/ mongodb\n```\n\n- 确保二进制文件的位置在PATH变量中（即将PATH路径指定为mongodb安装路径）\n\n```shell\nexport PATH=/home/evey/mongodb/mongodb-linux-x86_64-3.6.4/bin:$PATH\n```\n\n- 创建数据目录\n\n```shell\nmkdir -p /data/db\n```\n\n- 设置数据目录的权限\n\n```shell\nchmod 777 data/\ncd data/\nchmod 777 db/\n```\n\n- 运行mongodb\n\n```shell\nmongod\n```\n\n- 开始使用mongodb\n\n```shell\nmongo\nuse admin\n```\n\n- 添加用户名和密码\n\n```shell\ndb.createUser({user:'admin', pwd:'r00tme', roles: [ { role: \"root\", db: \"admin\" } ]})\n```\n\n- 查看用户\n\n```shell\nshow users\n```\n\n\n\n### 其他操作\n\n- 停止mongodb\n\n```shell\nCtrl+C\n```\n\n- 重新启动mongodb则再次输入mongod即可\n\n```shell\nmongod\n```\n\n","source":"_posts/ubuntu安装Mongodb.md","raw":"---\ntitle: ubuntu/Mac OSX安装Mongodb\ndate: 2018-06-28 11:54:03\ntags: [ubuntu16.04, ubuntu18.04, MacOSX, mongodb]\ncategories: Ubuntu\n---\n\n## Mac OSX安装mongodb\n\n- 安装mongodb\n\n```shell\nbrew install mongodb\n```\n\n- 启动mongodb\n\n```shell\nmongod --config /usr/local/etc/mongod.conf\n```\n\n- 连接到mongo\n\n```shell\nmongo\n```\n\n\n\n## Ubuntu16.04自动安装mongodb\n\n- 导入包管理系统使用的公钥\n\n```shell\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5\n```\n\n- 为mongodb创建一个列表文件\n\n```shell\necho \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list\n```\n\n- 重新加载本地包数据库\n\n```shell\nsudo apt-get update\n```\n\n- 安装最新版mongodb软件包\n\n```shell\nsudo apt-get install -y mongodb-org\n```\n\n- 查看mongodb版本\n\n```shell\nmongod --version\n```\n\n- 启动mongodb\n\n```shell\nsudo service mongod start\n```\n\n- 开始使用mongodb\n\n```shell\nmongo\nuse admin\n```\n\n- 添加用户名和密码\n\n```shell\ndb.createUser({user:'admin', pwd:'r00tme', roles: [ { role: \"root\", db: \"admin\" } ]})\n```\n\n- 查看所有用户\n\n```shell\nshow users\n```\n\n\n\n### 其他操作\n\n- 停止mongodb\n\n```shell\nsudo service mongod stop\n```\n\n- 重新启动mongodb\n\n```shell\nsudo service mongod restart\n```\n\n\n\n### 卸载Mongodb\n\n- 停止mongodb\n\n```shell\nsudo service mongod stop\n```\n\n- 删除包\n\n```shell\nsudo apt-get purge mongodb-org*\n```\n\n- 删除数据目录\n\n```shell\nsudo rm -f /var/log/mongodb\nsudo rm -f /var/lib/mongodb\n```\n\n\n\n## Ubuntu18.04手动安装mongodb\n\n- 下载所需版本的mongodb二进制文件\n\n```shell\ncurl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz\n```\n\n- 从下载的文档中提取文件\n\n```shell\ntar -zxvf mongodb-linux-x86_64-3.6.4.tgz\n```\n\n- 新建文件夹名为mongodb\n\n```shell\nmkdir -p mongodb\n```\n\n- 将解压的文件复制到mongodb文件夹中\n\n```shell\ncp -R -n mongodb-linux-x86_64-3.6.4/ mongodb\n```\n\n- 确保二进制文件的位置在PATH变量中（即将PATH路径指定为mongodb安装路径）\n\n```shell\nexport PATH=/home/evey/mongodb/mongodb-linux-x86_64-3.6.4/bin:$PATH\n```\n\n- 创建数据目录\n\n```shell\nmkdir -p /data/db\n```\n\n- 设置数据目录的权限\n\n```shell\nchmod 777 data/\ncd data/\nchmod 777 db/\n```\n\n- 运行mongodb\n\n```shell\nmongod\n```\n\n- 开始使用mongodb\n\n```shell\nmongo\nuse admin\n```\n\n- 添加用户名和密码\n\n```shell\ndb.createUser({user:'admin', pwd:'r00tme', roles: [ { role: \"root\", db: \"admin\" } ]})\n```\n\n- 查看用户\n\n```shell\nshow users\n```\n\n\n\n### 其他操作\n\n- 停止mongodb\n\n```shell\nCtrl+C\n```\n\n- 重新启动mongodb则再次输入mongod即可\n\n```shell\nmongod\n```\n\n","slug":"ubuntu安装Mongodb","published":1,"updated":"2018-08-17T09:02:56.288Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvq0037oaqoglt9iu9g","content":"<h2 id=\"Mac-OSX安装mongodb\"><a href=\"#Mac-OSX安装mongodb\" class=\"headerlink\" title=\"Mac OSX安装mongodb\"></a>Mac OSX安装mongodb</h2><ul>\n<li>安装mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install mongodb</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --config /usr/local/etc/mongod.conf</span><br></pre></td></tr></table></figure>\n<ul>\n<li>连接到mongo</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br></pre></td></tr></table></figure>\n<h2 id=\"Ubuntu16-04自动安装mongodb\"><a href=\"#Ubuntu16-04自动安装mongodb\" class=\"headerlink\" title=\"Ubuntu16.04自动安装mongodb\"></a>Ubuntu16.04自动安装mongodb</h2><ul>\n<li>导入包管理系统使用的公钥</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5</span><br></pre></td></tr></table></figure>\n<ul>\n<li>为mongodb创建一个列表文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重新加载本地包数据库</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装最新版mongodb软件包</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install -y mongodb-org</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看mongodb版本</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --version</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod start</span><br></pre></td></tr></table></figure>\n<ul>\n<li>开始使用mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br><span class=\"line\">use admin</span><br></pre></td></tr></table></figure>\n<ul>\n<li>添加用户名和密码</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.createUser(&#123;user:'admin', pwd:'r00tme', roles: [ &#123; role: \"root\", db: \"admin\" &#125; ]&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看所有用户</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show users</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他操作\"><a href=\"#其他操作\" class=\"headerlink\" title=\"其他操作\"></a>其他操作</h3><ul>\n<li>停止mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod stop</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重新启动mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"卸载Mongodb\"><a href=\"#卸载Mongodb\" class=\"headerlink\" title=\"卸载Mongodb\"></a>卸载Mongodb</h3><ul>\n<li>停止mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod stop</span><br></pre></td></tr></table></figure>\n<ul>\n<li>删除包</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get purge mongodb-org*</span><br></pre></td></tr></table></figure>\n<ul>\n<li>删除数据目录</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm -f /var/log/mongodb</span><br><span class=\"line\">sudo rm -f /var/lib/mongodb</span><br></pre></td></tr></table></figure>\n<h2 id=\"Ubuntu18-04手动安装mongodb\"><a href=\"#Ubuntu18-04手动安装mongodb\" class=\"headerlink\" title=\"Ubuntu18.04手动安装mongodb\"></a>Ubuntu18.04手动安装mongodb</h2><ul>\n<li>下载所需版本的mongodb二进制文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz</span><br></pre></td></tr></table></figure>\n<ul>\n<li>从下载的文档中提取文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf mongodb-linux-x86_64-3.6.4.tgz</span><br></pre></td></tr></table></figure>\n<ul>\n<li>新建文件夹名为mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p mongodb</span><br></pre></td></tr></table></figure>\n<ul>\n<li>将解压的文件复制到mongodb文件夹中</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -R -n mongodb-linux-x86_64-3.6.4/ mongodb</span><br></pre></td></tr></table></figure>\n<ul>\n<li>确保二进制文件的位置在PATH变量中（即将PATH路径指定为mongodb安装路径）</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=/home/evey/mongodb/mongodb-linux-x86_64-3.6.4/bin:$PATH</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建数据目录</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /data/db</span><br></pre></td></tr></table></figure>\n<ul>\n<li>设置数据目录的权限</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 data/</span><br><span class=\"line\">cd data/</span><br><span class=\"line\">chmod 777 db/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>运行mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod</span><br></pre></td></tr></table></figure>\n<ul>\n<li>开始使用mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br><span class=\"line\">use admin</span><br></pre></td></tr></table></figure>\n<ul>\n<li>添加用户名和密码</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.createUser(&#123;user:'admin', pwd:'r00tme', roles: [ &#123; role: \"root\", db: \"admin\" &#125; ]&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看用户</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show users</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他操作-1\"><a href=\"#其他操作-1\" class=\"headerlink\" title=\"其他操作\"></a>其他操作</h3><ul>\n<li>停止mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+C</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重新启动mongodb则再次输入mongod即可</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Mac-OSX安装mongodb\"><a href=\"#Mac-OSX安装mongodb\" class=\"headerlink\" title=\"Mac OSX安装mongodb\"></a>Mac OSX安装mongodb</h2><ul>\n<li>安装mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install mongodb</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --config /usr/local/etc/mongod.conf</span><br></pre></td></tr></table></figure>\n<ul>\n<li>连接到mongo</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br></pre></td></tr></table></figure>\n<h2 id=\"Ubuntu16-04自动安装mongodb\"><a href=\"#Ubuntu16-04自动安装mongodb\" class=\"headerlink\" title=\"Ubuntu16.04自动安装mongodb\"></a>Ubuntu16.04自动安装mongodb</h2><ul>\n<li>导入包管理系统使用的公钥</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5</span><br></pre></td></tr></table></figure>\n<ul>\n<li>为mongodb创建一个列表文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重新加载本地包数据库</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<ul>\n<li>安装最新版mongodb软件包</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install -y mongodb-org</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看mongodb版本</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod --version</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod start</span><br></pre></td></tr></table></figure>\n<ul>\n<li>开始使用mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br><span class=\"line\">use admin</span><br></pre></td></tr></table></figure>\n<ul>\n<li>添加用户名和密码</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.createUser(&#123;user:'admin', pwd:'r00tme', roles: [ &#123; role: \"root\", db: \"admin\" &#125; ]&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看所有用户</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show users</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他操作\"><a href=\"#其他操作\" class=\"headerlink\" title=\"其他操作\"></a>其他操作</h3><ul>\n<li>停止mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod stop</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重新启动mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"卸载Mongodb\"><a href=\"#卸载Mongodb\" class=\"headerlink\" title=\"卸载Mongodb\"></a>卸载Mongodb</h3><ul>\n<li>停止mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service mongod stop</span><br></pre></td></tr></table></figure>\n<ul>\n<li>删除包</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get purge mongodb-org*</span><br></pre></td></tr></table></figure>\n<ul>\n<li>删除数据目录</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm -f /var/log/mongodb</span><br><span class=\"line\">sudo rm -f /var/lib/mongodb</span><br></pre></td></tr></table></figure>\n<h2 id=\"Ubuntu18-04手动安装mongodb\"><a href=\"#Ubuntu18-04手动安装mongodb\" class=\"headerlink\" title=\"Ubuntu18.04手动安装mongodb\"></a>Ubuntu18.04手动安装mongodb</h2><ul>\n<li>下载所需版本的mongodb二进制文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz</span><br></pre></td></tr></table></figure>\n<ul>\n<li>从下载的文档中提取文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf mongodb-linux-x86_64-3.6.4.tgz</span><br></pre></td></tr></table></figure>\n<ul>\n<li>新建文件夹名为mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p mongodb</span><br></pre></td></tr></table></figure>\n<ul>\n<li>将解压的文件复制到mongodb文件夹中</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp -R -n mongodb-linux-x86_64-3.6.4/ mongodb</span><br></pre></td></tr></table></figure>\n<ul>\n<li>确保二进制文件的位置在PATH变量中（即将PATH路径指定为mongodb安装路径）</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=/home/evey/mongodb/mongodb-linux-x86_64-3.6.4/bin:$PATH</span><br></pre></td></tr></table></figure>\n<ul>\n<li>创建数据目录</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /data/db</span><br></pre></td></tr></table></figure>\n<ul>\n<li>设置数据目录的权限</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 data/</span><br><span class=\"line\">cd data/</span><br><span class=\"line\">chmod 777 db/</span><br></pre></td></tr></table></figure>\n<ul>\n<li>运行mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod</span><br></pre></td></tr></table></figure>\n<ul>\n<li>开始使用mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongo</span><br><span class=\"line\">use admin</span><br></pre></td></tr></table></figure>\n<ul>\n<li>添加用户名和密码</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.createUser(&#123;user:'admin', pwd:'r00tme', roles: [ &#123; role: \"root\", db: \"admin\" &#125; ]&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看用户</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show users</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他操作-1\"><a href=\"#其他操作-1\" class=\"headerlink\" title=\"其他操作\"></a>其他操作</h3><ul>\n<li>停止mongodb</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl+C</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重新启动mongodb则再次输入mongod即可</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongod</span><br></pre></td></tr></table></figure>\n"},{"title":"ubuntu安装软件","date":"2018-06-28T03:59:55.000Z","_content":"\n## 安装ubuntu版TeamViewer\n\n1. 下载软件包：https://www.teamviewer.com/zhcn/download/linux/\n\n2. 添加32位架构\n\n   ```shell\n   $ sudo dpkg --add-architecture i386  \n   ```\n\n3. 更新\n\n   ```shell\n   $ sudo apt-get update\n   ```\n\n4. 安装\n\n   ```shell\n   $ sudo  dpkg  -i teamviewer_13.1.3026_amd64.deb \n   ```\n\n   \n\n## ubuntu安装微信\n\n1. 下载安装包:https://github.com/geeeeeeeeek/electronic-wechat/releases\n2. 解压\n\n```\ntar zxvf linux-x64.tar.gz\n```\n\n3. 找到解压后的`electronic-wechat`文件，双击运行或者右键选择运行即可\n\n\n\n## ubuntu安装JDK-8\n\n1. 查看apt库都有哪些jdk版本\n\n```shell\n$ apt-cache search java|grep jdk\n```\n\n2. 选择版本进行安装\n\n```shell\n$ sudo apt-get install openjdk-8-jdk\n```\n\n3. 设置环境变量\n\n```shell\n$ sudo vim /etc/profile\n```\n\n4. 添加以下内容\n\n```shell\n# set java environment\nJAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64\nJRE_HOME=$JAVA_HOME/jre\nCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nexport JAVA_HOME JRE_HOME CLASS_PATH PATH\n```\n\n5. 让修改生效\n\n```shell\nsource /etc/profile\n```\n\n6. 验证\n\n```shelll\njava -version\n```\n\n\n\n","source":"_posts/ubuntu安装软件.md","raw":"---\ntitle: ubuntu安装软件\ndate: 2018-06-28 11:59:55\ntags: [ubuntu18.04, TeamViewer, 微信, jdk-8]\ncategories: Ubuntu\n---\n\n## 安装ubuntu版TeamViewer\n\n1. 下载软件包：https://www.teamviewer.com/zhcn/download/linux/\n\n2. 添加32位架构\n\n   ```shell\n   $ sudo dpkg --add-architecture i386  \n   ```\n\n3. 更新\n\n   ```shell\n   $ sudo apt-get update\n   ```\n\n4. 安装\n\n   ```shell\n   $ sudo  dpkg  -i teamviewer_13.1.3026_amd64.deb \n   ```\n\n   \n\n## ubuntu安装微信\n\n1. 下载安装包:https://github.com/geeeeeeeeek/electronic-wechat/releases\n2. 解压\n\n```\ntar zxvf linux-x64.tar.gz\n```\n\n3. 找到解压后的`electronic-wechat`文件，双击运行或者右键选择运行即可\n\n\n\n## ubuntu安装JDK-8\n\n1. 查看apt库都有哪些jdk版本\n\n```shell\n$ apt-cache search java|grep jdk\n```\n\n2. 选择版本进行安装\n\n```shell\n$ sudo apt-get install openjdk-8-jdk\n```\n\n3. 设置环境变量\n\n```shell\n$ sudo vim /etc/profile\n```\n\n4. 添加以下内容\n\n```shell\n# set java environment\nJAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64\nJRE_HOME=$JAVA_HOME/jre\nCLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nexport JAVA_HOME JRE_HOME CLASS_PATH PATH\n```\n\n5. 让修改生效\n\n```shell\nsource /etc/profile\n```\n\n6. 验证\n\n```shelll\njava -version\n```\n\n\n\n","slug":"ubuntu安装软件","published":1,"updated":"2018-08-17T07:35:36.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvr003aoaqosgcqjycg","content":"<h2 id=\"安装ubuntu版TeamViewer\"><a href=\"#安装ubuntu版TeamViewer\" class=\"headerlink\" title=\"安装ubuntu版TeamViewer\"></a>安装ubuntu版TeamViewer</h2><ol>\n<li><p>下载软件包：<a href=\"https://www.teamviewer.com/zhcn/download/linux/\" target=\"_blank\" rel=\"noopener\">https://www.teamviewer.com/zhcn/download/linux/</a></p>\n</li>\n<li><p>添加32位架构</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo dpkg --add-architecture i386</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get update</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo  dpkg  -i teamviewer_13.1.3026_amd64.deb</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"ubuntu安装微信\"><a href=\"#ubuntu安装微信\" class=\"headerlink\" title=\"ubuntu安装微信\"></a>ubuntu安装微信</h2><ol>\n<li>下载安装包:<a href=\"https://github.com/geeeeeeeeek/electronic-wechat/releases\" target=\"_blank\" rel=\"noopener\">https://github.com/geeeeeeeeek/electronic-wechat/releases</a></li>\n<li>解压</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf linux-x64.tar.gz</span><br></pre></td></tr></table></figure>\n<ol>\n<li>找到解压后的<code>electronic-wechat</code>文件，双击运行或者右键选择运行即可</li>\n</ol>\n<h2 id=\"ubuntu安装JDK-8\"><a href=\"#ubuntu安装JDK-8\" class=\"headerlink\" title=\"ubuntu安装JDK-8\"></a>ubuntu安装JDK-8</h2><ol>\n<li>查看apt库都有哪些jdk版本</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> apt-cache search java|grep jdk</span><br></pre></td></tr></table></figure>\n<ol>\n<li>选择版本进行安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure>\n<ol>\n<li>设置环境变量</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo vim /etc/profile</span><br></pre></td></tr></table></figure>\n<ol>\n<li>添加以下内容</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> set java environment</span><br><span class=\"line\">JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64</span><br><span class=\"line\">JRE_HOME=$JAVA_HOME/jre</span><br><span class=\"line\">CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br><span class=\"line\">export JAVA_HOME JRE_HOME CLASS_PATH PATH</span><br></pre></td></tr></table></figure>\n<ol>\n<li>让修改生效</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<ol>\n<li>验证</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装ubuntu版TeamViewer\"><a href=\"#安装ubuntu版TeamViewer\" class=\"headerlink\" title=\"安装ubuntu版TeamViewer\"></a>安装ubuntu版TeamViewer</h2><ol>\n<li><p>下载软件包：<a href=\"https://www.teamviewer.com/zhcn/download/linux/\" target=\"_blank\" rel=\"noopener\">https://www.teamviewer.com/zhcn/download/linux/</a></p>\n</li>\n<li><p>添加32位架构</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo dpkg --add-architecture i386</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get update</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo  dpkg  -i teamviewer_13.1.3026_amd64.deb</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"ubuntu安装微信\"><a href=\"#ubuntu安装微信\" class=\"headerlink\" title=\"ubuntu安装微信\"></a>ubuntu安装微信</h2><ol>\n<li>下载安装包:<a href=\"https://github.com/geeeeeeeeek/electronic-wechat/releases\" target=\"_blank\" rel=\"noopener\">https://github.com/geeeeeeeeek/electronic-wechat/releases</a></li>\n<li>解压</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar zxvf linux-x64.tar.gz</span><br></pre></td></tr></table></figure>\n<ol>\n<li>找到解压后的<code>electronic-wechat</code>文件，双击运行或者右键选择运行即可</li>\n</ol>\n<h2 id=\"ubuntu安装JDK-8\"><a href=\"#ubuntu安装JDK-8\" class=\"headerlink\" title=\"ubuntu安装JDK-8\"></a>ubuntu安装JDK-8</h2><ol>\n<li>查看apt库都有哪些jdk版本</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> apt-cache search java|grep jdk</span><br></pre></td></tr></table></figure>\n<ol>\n<li>选择版本进行安装</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure>\n<ol>\n<li>设置环境变量</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo vim /etc/profile</span><br></pre></td></tr></table></figure>\n<ol>\n<li>添加以下内容</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> set java environment</span><br><span class=\"line\">JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64</span><br><span class=\"line\">JRE_HOME=$JAVA_HOME/jre</span><br><span class=\"line\">CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib</span><br><span class=\"line\">PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br><span class=\"line\">export JAVA_HOME JRE_HOME CLASS_PATH PATH</span><br></pre></td></tr></table></figure>\n<ol>\n<li>让修改生效</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n<ol>\n<li>验证</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -version</span><br></pre></td></tr></table></figure>\n"},{"title":"第一个单元测试","date":"2017-12-06T08:42:08.000Z","_content":"\n![JPG](http://p1cjg886l.bkt.clouddn.com/unit-vue1.jpg)\n\n一开始让我学单元测试我是拒绝的，但是无奈师傅交给的任务。看了一早上的测试文章云里雾里差点睡着，下午就决定自己先来动手实践一下单元测试，到底单元测试是什么怎么写结果是怎样。\n\n## 开始\n\n#### 创建项目\n\n使用vue-cli先创建一个vuejs项目，这里就不累赘了，另一篇文章《新建Vue项目》有写。\n\n>注意！npm install安装依赖的时候要有耐心(其实是我网速慢)千万不要随便停止，因为那可能会漏装了东西导致后面会出BUG。我就是心急导致后面测试运行失败，只好默默地把node_modules删了再重新运行npm install\n\n安装好依赖，接下来我们执行下面的命令，这个命令将会在本地运行你的应用并在浏览器中打开。\n\n```\nnpm run dev\n```\n\n在项目中，可以找到下面这些目录：`build`、`config`、`node_modules`、`src`、`static` 和 `test`。对于本教程来说最重要的是`src`，它包括我们应用的代码，用来测试。\n\n#### 第一次测试\n\n我们将从创建简单的列表组件开始。在 `src/components` 里创建一个新文件叫做 `list.vue` 并且将下面代码写进去。\n\n**list.vue**\n\n```\n<template>\n    <div>\n        <h1>My To Do List</h1>\n        <br>\n        <!-- displays list -->\n        <ul>\n            <li v-for=\"item in listItems\">{{item}}</li>\n        </ul>\n    </div>  \n</template>\n\n<script>\nexport default {\n  name: 'list',\n  data () {\n    return {\n      listItems: ['buy food', 'play games', 'sleep']\n    }\n  }\n}\n</script>\n\n```\n\n在这个组件中，列表项被储存在数组（`listItems`）里面。数据被传递到模板，然后被遍历`v-for`，最后展现在页面上。\n\n我们需要看到刚刚创建的列表，所以我们创建一个新的路由来展示这个组件。在`src/router/index.js`中创建一个路由，添加完了代码应该是下面这样的：\n\n```\nimport Vue from 'vue'\nimport Router from 'vue-router'\nimport HelloWorld from '@/components/HelloWorld'\nimport List from '@/components/list'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'HelloWorld',\n      component: HelloWorld\n    },\n    {\n      path: '/to-do',\n      name: 'ToDo',\n      component: List\n    }\n  ]\n})\n```\n\n现在，访问[localhost:8080/#/to-do](http://localhost:8080/#/to-do)，可以看到我们做的页面。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit-vue2.png)\n\n首先，我们要测试的是数据的正确性。在`test/unit/specs`目录下创建一个`list.spec.js`，并且写入下面的代码：\n\n```\n// 在这个文件中我们describing了list.vue组件，并且创建了一个空的测试，\n// 它将要检查这个组件的列表展示，这是一个基本的Mocha测试文件\nimport Vue from 'vue'\nimport List from '@/components/list'\n\ndescribe('list.vue', () => {\n  it('display items from the list', () => {\n    // our test goes here\n    // build component   我们继承了Vue组件并安装了这个组件\n    const Constructor = Vue.extend(List)\n    const ListComponent = new Constructor().$mount()\n    // 下面是第一个断言，我们使用Chai断言提供的'expect'模式还有'should'和'assert'模式。这个断言用来检查HTML列表中的文本是否和组件的data里的数据列表吻合。\n    expect(ListComponent.$el.textContent).to.contain('play game') \n    // 可以使用ListComponent.$el来获取组件的HTML，用ListComponent.$el.textContent获取HTML内的内容\n  })\n})\n\n```\n\n\n\n最后就是使用`npm run unit`来运行`cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run`。\n\n>我就是被卡在了这里，运行`npm run unit`出现错误\n>\n>![PNG](http://p1cjg886l.bkt.clouddn.com/unit-vue3.png)\n>\n>综合github和stack overflow的回答，想了想问题可能出现在依赖安装上，我没有等它自己安装完就停止了，后来又用cnpm安装但是应该没装全，所以我把node_modules卸载了重装，现在还在装网速简直慢到不行\n>\n>![PNG](http://p1cjg886l.bkt.clouddn.com/unit-vue4.png)\n>\n>保持这个进度已经很久了，简直崩溃。\n>\n>最后建议网络慢的使用cnpm装，我用cnpm装快得飞起。\n\n如果测试都通过了，将会有一个绿色的列表来显示测试报告，让你了解测试都覆盖了哪些代码。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit-vue5.png)\n\n#### 模拟用户输入\n\n上一步做了一个简单的功能，只能展示数据并不能做交互，下一步要做的就是做简单的交互往to-do list中添加新项目。\n\n创建一个Input框来输入内容，一个button用来提交内容。\n\n**list.vue**\n\n```\n<!--使用v-model，输入框里面的内容将和newItem进行双向绑定。\n当按钮被点击后执行addItemToList，将newItem添加到to-do list数组里，并且清空newItem里面的内容，新的项目将会被添加到列表中-->\n<template>\n    <div>\n        <h1>My To Do List</h1>\n        <br>\n        <!-- displays list -->\n        <input type=\"text\" v-model=\"newItem\"> \n        <button @click=\"addItemToList\">Add</button>\n        <ul>\n            <li v-for=\"item in listItems\">{{item}}</li>\n        </ul>\n    </div>  \n</template>\n\n<script>\nexport default {\n  name: 'test',\n  data () {\n    return {\n      listItems: ['buy food', 'play games', 'sleep'],\n      newItem: ''\n    }\n  },\n  methods: {\n    addItemToList () {\n      this.listItems.push(this.newItem)\n      this.newItem = '' // 清空newItem里面的内容\n    }\n  }\n}\n</script>\n```\n\n然后更新测试文件\n\n**list.spec.js**\n\n```\nimport Vue from 'vue'\nimport List from '@/components/list'\n\ndescribe('list.vue', () => {\n  it('add a new item to list on click', () => {\n    // build component   我们继承了Vue组件并安装了这个组件\n    const Constructor = Vue.extend(List)\n    const ListComponent = new Constructor().$mount()\n\n    // set value of new item  给newItem设置内容\n    ListComponent.newItem = 'brush my teeth'\n\n    // find button  querySelector可以像选择真的元素一样选择这个按钮。\n    const button = ListComponent.$el.querySelector('button')\n\n    // simulate click event  模拟点击事件\n    const clickEvent = new window.Event('click')\n    button.dispatchEvent(clickEvent)\n    ListComponent._watcher.run()\n\n    // assert list contains new item  检查断言列表包含新项目\n    expect(ListComponent.$el.textContent).to.contain('brush my teeth')\n    expect(ListComponent.listItems).to.contain('brush my teeth')\n  })\n})\n```\n\n运行这个测试文件`npm run unit`\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit-vue6.png)\n\n一个完整的成功的单元测试就完成啦~","source":"_posts/unit-test.md","raw":"---\ntitle: 第一个单元测试\ndate: 2017-12-06 16:42:08\ntags: [单元测试, unit test]\ncategories: 测试\n---\n\n![JPG](http://p1cjg886l.bkt.clouddn.com/unit-vue1.jpg)\n\n一开始让我学单元测试我是拒绝的，但是无奈师傅交给的任务。看了一早上的测试文章云里雾里差点睡着，下午就决定自己先来动手实践一下单元测试，到底单元测试是什么怎么写结果是怎样。\n\n## 开始\n\n#### 创建项目\n\n使用vue-cli先创建一个vuejs项目，这里就不累赘了，另一篇文章《新建Vue项目》有写。\n\n>注意！npm install安装依赖的时候要有耐心(其实是我网速慢)千万不要随便停止，因为那可能会漏装了东西导致后面会出BUG。我就是心急导致后面测试运行失败，只好默默地把node_modules删了再重新运行npm install\n\n安装好依赖，接下来我们执行下面的命令，这个命令将会在本地运行你的应用并在浏览器中打开。\n\n```\nnpm run dev\n```\n\n在项目中，可以找到下面这些目录：`build`、`config`、`node_modules`、`src`、`static` 和 `test`。对于本教程来说最重要的是`src`，它包括我们应用的代码，用来测试。\n\n#### 第一次测试\n\n我们将从创建简单的列表组件开始。在 `src/components` 里创建一个新文件叫做 `list.vue` 并且将下面代码写进去。\n\n**list.vue**\n\n```\n<template>\n    <div>\n        <h1>My To Do List</h1>\n        <br>\n        <!-- displays list -->\n        <ul>\n            <li v-for=\"item in listItems\">{{item}}</li>\n        </ul>\n    </div>  \n</template>\n\n<script>\nexport default {\n  name: 'list',\n  data () {\n    return {\n      listItems: ['buy food', 'play games', 'sleep']\n    }\n  }\n}\n</script>\n\n```\n\n在这个组件中，列表项被储存在数组（`listItems`）里面。数据被传递到模板，然后被遍历`v-for`，最后展现在页面上。\n\n我们需要看到刚刚创建的列表，所以我们创建一个新的路由来展示这个组件。在`src/router/index.js`中创建一个路由，添加完了代码应该是下面这样的：\n\n```\nimport Vue from 'vue'\nimport Router from 'vue-router'\nimport HelloWorld from '@/components/HelloWorld'\nimport List from '@/components/list'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'HelloWorld',\n      component: HelloWorld\n    },\n    {\n      path: '/to-do',\n      name: 'ToDo',\n      component: List\n    }\n  ]\n})\n```\n\n现在，访问[localhost:8080/#/to-do](http://localhost:8080/#/to-do)，可以看到我们做的页面。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit-vue2.png)\n\n首先，我们要测试的是数据的正确性。在`test/unit/specs`目录下创建一个`list.spec.js`，并且写入下面的代码：\n\n```\n// 在这个文件中我们describing了list.vue组件，并且创建了一个空的测试，\n// 它将要检查这个组件的列表展示，这是一个基本的Mocha测试文件\nimport Vue from 'vue'\nimport List from '@/components/list'\n\ndescribe('list.vue', () => {\n  it('display items from the list', () => {\n    // our test goes here\n    // build component   我们继承了Vue组件并安装了这个组件\n    const Constructor = Vue.extend(List)\n    const ListComponent = new Constructor().$mount()\n    // 下面是第一个断言，我们使用Chai断言提供的'expect'模式还有'should'和'assert'模式。这个断言用来检查HTML列表中的文本是否和组件的data里的数据列表吻合。\n    expect(ListComponent.$el.textContent).to.contain('play game') \n    // 可以使用ListComponent.$el来获取组件的HTML，用ListComponent.$el.textContent获取HTML内的内容\n  })\n})\n\n```\n\n\n\n最后就是使用`npm run unit`来运行`cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run`。\n\n>我就是被卡在了这里，运行`npm run unit`出现错误\n>\n>![PNG](http://p1cjg886l.bkt.clouddn.com/unit-vue3.png)\n>\n>综合github和stack overflow的回答，想了想问题可能出现在依赖安装上，我没有等它自己安装完就停止了，后来又用cnpm安装但是应该没装全，所以我把node_modules卸载了重装，现在还在装网速简直慢到不行\n>\n>![PNG](http://p1cjg886l.bkt.clouddn.com/unit-vue4.png)\n>\n>保持这个进度已经很久了，简直崩溃。\n>\n>最后建议网络慢的使用cnpm装，我用cnpm装快得飞起。\n\n如果测试都通过了，将会有一个绿色的列表来显示测试报告，让你了解测试都覆盖了哪些代码。\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit-vue5.png)\n\n#### 模拟用户输入\n\n上一步做了一个简单的功能，只能展示数据并不能做交互，下一步要做的就是做简单的交互往to-do list中添加新项目。\n\n创建一个Input框来输入内容，一个button用来提交内容。\n\n**list.vue**\n\n```\n<!--使用v-model，输入框里面的内容将和newItem进行双向绑定。\n当按钮被点击后执行addItemToList，将newItem添加到to-do list数组里，并且清空newItem里面的内容，新的项目将会被添加到列表中-->\n<template>\n    <div>\n        <h1>My To Do List</h1>\n        <br>\n        <!-- displays list -->\n        <input type=\"text\" v-model=\"newItem\"> \n        <button @click=\"addItemToList\">Add</button>\n        <ul>\n            <li v-for=\"item in listItems\">{{item}}</li>\n        </ul>\n    </div>  \n</template>\n\n<script>\nexport default {\n  name: 'test',\n  data () {\n    return {\n      listItems: ['buy food', 'play games', 'sleep'],\n      newItem: ''\n    }\n  },\n  methods: {\n    addItemToList () {\n      this.listItems.push(this.newItem)\n      this.newItem = '' // 清空newItem里面的内容\n    }\n  }\n}\n</script>\n```\n\n然后更新测试文件\n\n**list.spec.js**\n\n```\nimport Vue from 'vue'\nimport List from '@/components/list'\n\ndescribe('list.vue', () => {\n  it('add a new item to list on click', () => {\n    // build component   我们继承了Vue组件并安装了这个组件\n    const Constructor = Vue.extend(List)\n    const ListComponent = new Constructor().$mount()\n\n    // set value of new item  给newItem设置内容\n    ListComponent.newItem = 'brush my teeth'\n\n    // find button  querySelector可以像选择真的元素一样选择这个按钮。\n    const button = ListComponent.$el.querySelector('button')\n\n    // simulate click event  模拟点击事件\n    const clickEvent = new window.Event('click')\n    button.dispatchEvent(clickEvent)\n    ListComponent._watcher.run()\n\n    // assert list contains new item  检查断言列表包含新项目\n    expect(ListComponent.$el.textContent).to.contain('brush my teeth')\n    expect(ListComponent.listItems).to.contain('brush my teeth')\n  })\n})\n```\n\n运行这个测试文件`npm run unit`\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit-vue6.png)\n\n一个完整的成功的单元测试就完成啦~","slug":"unit-test","published":1,"updated":"2018-08-17T07:35:36.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvs003doaqowo0z3zu8","content":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue1.jpg\" alt=\"JPG\"></p>\n<p>一开始让我学单元测试我是拒绝的，但是无奈师傅交给的任务。看了一早上的测试文章云里雾里差点睡着，下午就决定自己先来动手实践一下单元测试，到底单元测试是什么怎么写结果是怎样。</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><h4 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h4><p>使用vue-cli先创建一个vuejs项目，这里就不累赘了，另一篇文章《新建Vue项目》有写。</p>\n<blockquote>\n<p>注意！npm install安装依赖的时候要有耐心(其实是我网速慢)千万不要随便停止，因为那可能会漏装了东西导致后面会出BUG。我就是心急导致后面测试运行失败，只好默默地把node_modules删了再重新运行npm install</p>\n</blockquote>\n<p>安装好依赖，接下来我们执行下面的命令，这个命令将会在本地运行你的应用并在浏览器中打开。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<p>在项目中，可以找到下面这些目录：<code>build</code>、<code>config</code>、<code>node_modules</code>、<code>src</code>、<code>static</code> 和 <code>test</code>。对于本教程来说最重要的是<code>src</code>，它包括我们应用的代码，用来测试。</p>\n<h4 id=\"第一次测试\"><a href=\"#第一次测试\" class=\"headerlink\" title=\"第一次测试\"></a>第一次测试</h4><p>我们将从创建简单的列表组件开始。在 <code>src/components</code> 里创建一个新文件叫做 <code>list.vue</code> 并且将下面代码写进去。</p>\n<p><strong>list.vue</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;h1&gt;My To Do List&lt;/h1&gt;</span><br><span class=\"line\">        &lt;br&gt;</span><br><span class=\"line\">        &lt;!-- displays list --&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=&quot;item in listItems&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">    &lt;/div&gt;  </span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &apos;list&apos;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      listItems: [&apos;buy food&apos;, &apos;play games&apos;, &apos;sleep&apos;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>在这个组件中，列表项被储存在数组（<code>listItems</code>）里面。数据被传递到模板，然后被遍历<code>v-for</code>，最后展现在页面上。</p>\n<p>我们需要看到刚刚创建的列表，所以我们创建一个新的路由来展示这个组件。在<code>src/router/index.js</code>中创建一个路由，添加完了代码应该是下面这样的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import Router from &apos;vue-router&apos;</span><br><span class=\"line\">import HelloWorld from &apos;@/components/HelloWorld&apos;</span><br><span class=\"line\">import List from &apos;@/components/list&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Router)</span><br><span class=\"line\"></span><br><span class=\"line\">export default new Router(&#123;</span><br><span class=\"line\">  routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: &apos;/&apos;,</span><br><span class=\"line\">      name: &apos;HelloWorld&apos;,</span><br><span class=\"line\">      component: HelloWorld</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: &apos;/to-do&apos;,</span><br><span class=\"line\">      name: &apos;ToDo&apos;,</span><br><span class=\"line\">      component: List</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>现在，访问<a href=\"http://localhost:8080/#/to-do\" target=\"_blank\" rel=\"noopener\">localhost:8080/#/to-do</a>，可以看到我们做的页面。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue2.png\" alt=\"PNG\"></p>\n<p>首先，我们要测试的是数据的正确性。在<code>test/unit/specs</code>目录下创建一个<code>list.spec.js</code>，并且写入下面的代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 在这个文件中我们describing了list.vue组件，并且创建了一个空的测试，</span><br><span class=\"line\">// 它将要检查这个组件的列表展示，这是一个基本的Mocha测试文件</span><br><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import List from &apos;@/components/list&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">describe(&apos;list.vue&apos;, () =&gt; &#123;</span><br><span class=\"line\">  it(&apos;display items from the list&apos;, () =&gt; &#123;</span><br><span class=\"line\">    // our test goes here</span><br><span class=\"line\">    // build component   我们继承了Vue组件并安装了这个组件</span><br><span class=\"line\">    const Constructor = Vue.extend(List)</span><br><span class=\"line\">    const ListComponent = new Constructor().$mount()</span><br><span class=\"line\">    // 下面是第一个断言，我们使用Chai断言提供的&apos;expect&apos;模式还有&apos;should&apos;和&apos;assert&apos;模式。这个断言用来检查HTML列表中的文本是否和组件的data里的数据列表吻合。</span><br><span class=\"line\">    expect(ListComponent.$el.textContent).to.contain(&apos;play game&apos;) </span><br><span class=\"line\">    // 可以使用ListComponent.$el来获取组件的HTML，用ListComponent.$el.textContent获取HTML内的内容</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>最后就是使用<code>npm run unit</code>来运行<code>cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run</code>。</p>\n<blockquote>\n<p>我就是被卡在了这里，运行<code>npm run unit</code>出现错误</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue3.png\" alt=\"PNG\"></p>\n<p>综合github和stack overflow的回答，想了想问题可能出现在依赖安装上，我没有等它自己安装完就停止了，后来又用cnpm安装但是应该没装全，所以我把node_modules卸载了重装，现在还在装网速简直慢到不行</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue4.png\" alt=\"PNG\"></p>\n<p>保持这个进度已经很久了，简直崩溃。</p>\n<p>最后建议网络慢的使用cnpm装，我用cnpm装快得飞起。</p>\n</blockquote>\n<p>如果测试都通过了，将会有一个绿色的列表来显示测试报告，让你了解测试都覆盖了哪些代码。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue5.png\" alt=\"PNG\"></p>\n<h4 id=\"模拟用户输入\"><a href=\"#模拟用户输入\" class=\"headerlink\" title=\"模拟用户输入\"></a>模拟用户输入</h4><p>上一步做了一个简单的功能，只能展示数据并不能做交互，下一步要做的就是做简单的交互往to-do list中添加新项目。</p>\n<p>创建一个Input框来输入内容，一个button用来提交内容。</p>\n<p><strong>list.vue</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--使用v-model，输入框里面的内容将和newItem进行双向绑定。</span><br><span class=\"line\">当按钮被点击后执行addItemToList，将newItem添加到to-do list数组里，并且清空newItem里面的内容，新的项目将会被添加到列表中--&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;h1&gt;My To Do List&lt;/h1&gt;</span><br><span class=\"line\">        &lt;br&gt;</span><br><span class=\"line\">        &lt;!-- displays list --&gt;</span><br><span class=\"line\">        &lt;input type=&quot;text&quot; v-model=&quot;newItem&quot;&gt; </span><br><span class=\"line\">        &lt;button @click=&quot;addItemToList&quot;&gt;Add&lt;/button&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=&quot;item in listItems&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">    &lt;/div&gt;  </span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &apos;test&apos;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      listItems: [&apos;buy food&apos;, &apos;play games&apos;, &apos;sleep&apos;],</span><br><span class=\"line\">      newItem: &apos;&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    addItemToList () &#123;</span><br><span class=\"line\">      this.listItems.push(this.newItem)</span><br><span class=\"line\">      this.newItem = &apos;&apos; // 清空newItem里面的内容</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>然后更新测试文件</p>\n<p><strong>list.spec.js</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import List from &apos;@/components/list&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">describe(&apos;list.vue&apos;, () =&gt; &#123;</span><br><span class=\"line\">  it(&apos;add a new item to list on click&apos;, () =&gt; &#123;</span><br><span class=\"line\">    // build component   我们继承了Vue组件并安装了这个组件</span><br><span class=\"line\">    const Constructor = Vue.extend(List)</span><br><span class=\"line\">    const ListComponent = new Constructor().$mount()</span><br><span class=\"line\"></span><br><span class=\"line\">    // set value of new item  给newItem设置内容</span><br><span class=\"line\">    ListComponent.newItem = &apos;brush my teeth&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">    // find button  querySelector可以像选择真的元素一样选择这个按钮。</span><br><span class=\"line\">    const button = ListComponent.$el.querySelector(&apos;button&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">    // simulate click event  模拟点击事件</span><br><span class=\"line\">    const clickEvent = new window.Event(&apos;click&apos;)</span><br><span class=\"line\">    button.dispatchEvent(clickEvent)</span><br><span class=\"line\">    ListComponent._watcher.run()</span><br><span class=\"line\"></span><br><span class=\"line\">    // assert list contains new item  检查断言列表包含新项目</span><br><span class=\"line\">    expect(ListComponent.$el.textContent).to.contain(&apos;brush my teeth&apos;)</span><br><span class=\"line\">    expect(ListComponent.listItems).to.contain(&apos;brush my teeth&apos;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>运行这个测试文件<code>npm run unit</code></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue6.png\" alt=\"PNG\"></p>\n<p>一个完整的成功的单元测试就完成啦~</p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue1.jpg\" alt=\"JPG\"></p>\n<p>一开始让我学单元测试我是拒绝的，但是无奈师傅交给的任务。看了一早上的测试文章云里雾里差点睡着，下午就决定自己先来动手实践一下单元测试，到底单元测试是什么怎么写结果是怎样。</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><h4 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h4><p>使用vue-cli先创建一个vuejs项目，这里就不累赘了，另一篇文章《新建Vue项目》有写。</p>\n<blockquote>\n<p>注意！npm install安装依赖的时候要有耐心(其实是我网速慢)千万不要随便停止，因为那可能会漏装了东西导致后面会出BUG。我就是心急导致后面测试运行失败，只好默默地把node_modules删了再重新运行npm install</p>\n</blockquote>\n<p>安装好依赖，接下来我们执行下面的命令，这个命令将会在本地运行你的应用并在浏览器中打开。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<p>在项目中，可以找到下面这些目录：<code>build</code>、<code>config</code>、<code>node_modules</code>、<code>src</code>、<code>static</code> 和 <code>test</code>。对于本教程来说最重要的是<code>src</code>，它包括我们应用的代码，用来测试。</p>\n<h4 id=\"第一次测试\"><a href=\"#第一次测试\" class=\"headerlink\" title=\"第一次测试\"></a>第一次测试</h4><p>我们将从创建简单的列表组件开始。在 <code>src/components</code> 里创建一个新文件叫做 <code>list.vue</code> 并且将下面代码写进去。</p>\n<p><strong>list.vue</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;h1&gt;My To Do List&lt;/h1&gt;</span><br><span class=\"line\">        &lt;br&gt;</span><br><span class=\"line\">        &lt;!-- displays list --&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=&quot;item in listItems&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">    &lt;/div&gt;  </span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &apos;list&apos;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      listItems: [&apos;buy food&apos;, &apos;play games&apos;, &apos;sleep&apos;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>在这个组件中，列表项被储存在数组（<code>listItems</code>）里面。数据被传递到模板，然后被遍历<code>v-for</code>，最后展现在页面上。</p>\n<p>我们需要看到刚刚创建的列表，所以我们创建一个新的路由来展示这个组件。在<code>src/router/index.js</code>中创建一个路由，添加完了代码应该是下面这样的：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import Router from &apos;vue-router&apos;</span><br><span class=\"line\">import HelloWorld from &apos;@/components/HelloWorld&apos;</span><br><span class=\"line\">import List from &apos;@/components/list&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(Router)</span><br><span class=\"line\"></span><br><span class=\"line\">export default new Router(&#123;</span><br><span class=\"line\">  routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: &apos;/&apos;,</span><br><span class=\"line\">      name: &apos;HelloWorld&apos;,</span><br><span class=\"line\">      component: HelloWorld</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: &apos;/to-do&apos;,</span><br><span class=\"line\">      name: &apos;ToDo&apos;,</span><br><span class=\"line\">      component: List</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>现在，访问<a href=\"http://localhost:8080/#/to-do\" target=\"_blank\" rel=\"noopener\">localhost:8080/#/to-do</a>，可以看到我们做的页面。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue2.png\" alt=\"PNG\"></p>\n<p>首先，我们要测试的是数据的正确性。在<code>test/unit/specs</code>目录下创建一个<code>list.spec.js</code>，并且写入下面的代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 在这个文件中我们describing了list.vue组件，并且创建了一个空的测试，</span><br><span class=\"line\">// 它将要检查这个组件的列表展示，这是一个基本的Mocha测试文件</span><br><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import List from &apos;@/components/list&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">describe(&apos;list.vue&apos;, () =&gt; &#123;</span><br><span class=\"line\">  it(&apos;display items from the list&apos;, () =&gt; &#123;</span><br><span class=\"line\">    // our test goes here</span><br><span class=\"line\">    // build component   我们继承了Vue组件并安装了这个组件</span><br><span class=\"line\">    const Constructor = Vue.extend(List)</span><br><span class=\"line\">    const ListComponent = new Constructor().$mount()</span><br><span class=\"line\">    // 下面是第一个断言，我们使用Chai断言提供的&apos;expect&apos;模式还有&apos;should&apos;和&apos;assert&apos;模式。这个断言用来检查HTML列表中的文本是否和组件的data里的数据列表吻合。</span><br><span class=\"line\">    expect(ListComponent.$el.textContent).to.contain(&apos;play game&apos;) </span><br><span class=\"line\">    // 可以使用ListComponent.$el来获取组件的HTML，用ListComponent.$el.textContent获取HTML内的内容</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>最后就是使用<code>npm run unit</code>来运行<code>cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run</code>。</p>\n<blockquote>\n<p>我就是被卡在了这里，运行<code>npm run unit</code>出现错误</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue3.png\" alt=\"PNG\"></p>\n<p>综合github和stack overflow的回答，想了想问题可能出现在依赖安装上，我没有等它自己安装完就停止了，后来又用cnpm安装但是应该没装全，所以我把node_modules卸载了重装，现在还在装网速简直慢到不行</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue4.png\" alt=\"PNG\"></p>\n<p>保持这个进度已经很久了，简直崩溃。</p>\n<p>最后建议网络慢的使用cnpm装，我用cnpm装快得飞起。</p>\n</blockquote>\n<p>如果测试都通过了，将会有一个绿色的列表来显示测试报告，让你了解测试都覆盖了哪些代码。</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue5.png\" alt=\"PNG\"></p>\n<h4 id=\"模拟用户输入\"><a href=\"#模拟用户输入\" class=\"headerlink\" title=\"模拟用户输入\"></a>模拟用户输入</h4><p>上一步做了一个简单的功能，只能展示数据并不能做交互，下一步要做的就是做简单的交互往to-do list中添加新项目。</p>\n<p>创建一个Input框来输入内容，一个button用来提交内容。</p>\n<p><strong>list.vue</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--使用v-model，输入框里面的内容将和newItem进行双向绑定。</span><br><span class=\"line\">当按钮被点击后执行addItemToList，将newItem添加到to-do list数组里，并且清空newItem里面的内容，新的项目将会被添加到列表中--&gt;</span><br><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">    &lt;div&gt;</span><br><span class=\"line\">        &lt;h1&gt;My To Do List&lt;/h1&gt;</span><br><span class=\"line\">        &lt;br&gt;</span><br><span class=\"line\">        &lt;!-- displays list --&gt;</span><br><span class=\"line\">        &lt;input type=&quot;text&quot; v-model=&quot;newItem&quot;&gt; </span><br><span class=\"line\">        &lt;button @click=&quot;addItemToList&quot;&gt;Add&lt;/button&gt;</span><br><span class=\"line\">        &lt;ul&gt;</span><br><span class=\"line\">            &lt;li v-for=&quot;item in listItems&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/li&gt;</span><br><span class=\"line\">        &lt;/ul&gt;</span><br><span class=\"line\">    &lt;/div&gt;  </span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &apos;test&apos;,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      listItems: [&apos;buy food&apos;, &apos;play games&apos;, &apos;sleep&apos;],</span><br><span class=\"line\">      newItem: &apos;&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    addItemToList () &#123;</span><br><span class=\"line\">      this.listItems.push(this.newItem)</span><br><span class=\"line\">      this.newItem = &apos;&apos; // 清空newItem里面的内容</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>然后更新测试文件</p>\n<p><strong>list.spec.js</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import List from &apos;@/components/list&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">describe(&apos;list.vue&apos;, () =&gt; &#123;</span><br><span class=\"line\">  it(&apos;add a new item to list on click&apos;, () =&gt; &#123;</span><br><span class=\"line\">    // build component   我们继承了Vue组件并安装了这个组件</span><br><span class=\"line\">    const Constructor = Vue.extend(List)</span><br><span class=\"line\">    const ListComponent = new Constructor().$mount()</span><br><span class=\"line\"></span><br><span class=\"line\">    // set value of new item  给newItem设置内容</span><br><span class=\"line\">    ListComponent.newItem = &apos;brush my teeth&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">    // find button  querySelector可以像选择真的元素一样选择这个按钮。</span><br><span class=\"line\">    const button = ListComponent.$el.querySelector(&apos;button&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">    // simulate click event  模拟点击事件</span><br><span class=\"line\">    const clickEvent = new window.Event(&apos;click&apos;)</span><br><span class=\"line\">    button.dispatchEvent(clickEvent)</span><br><span class=\"line\">    ListComponent._watcher.run()</span><br><span class=\"line\"></span><br><span class=\"line\">    // assert list contains new item  检查断言列表包含新项目</span><br><span class=\"line\">    expect(ListComponent.$el.textContent).to.contain(&apos;brush my teeth&apos;)</span><br><span class=\"line\">    expect(ListComponent.listItems).to.contain(&apos;brush my teeth&apos;)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>运行这个测试文件<code>npm run unit</code></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit-vue6.png\" alt=\"PNG\"></p>\n<p>一个完整的成功的单元测试就完成啦~</p>\n"},{"title":"新建Vue项目","date":"2017-12-04T02:04:43.000Z","_content":"\n\n\n> 在新建vue项目之前应该先检查一下是否已经安装好npm、node\n\n## 新建一个vue项目\n\n1. 设置镜像\n\n   ```\n   npm install -g cnpm --registry=https://registry.npm.taobao.org\n   ```\n\n2. 安装webpack\n\n   ```\n   npm install webpack -g\n   ```\n\n3. 安装vue-cli\n\n   ```\n   npm install vue-cli -g\n   ```\n\n4. 创建项目\n\n   ```\n   vue init webpack-simple 项目名称\n   ```\n\n5. 进入项目所在目录，安装依赖\n\n   ```\n   npm install\n   ```\n\n6. 启动项目\n\n   ```\n   npm run dev\n   ```\n\n> 在创建项目初始化的时候（也就是第四步）遇到了问题。\n>\n> ### 问题：\n>\n> vue-cli · Failed to download repo vuejs-templates/webpack-simple: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80\n>\n> ### 解决：\n>\n> 删除无效代理\n>\n> ### 定位问题的过程：\n>\n> 1. 本机ping外网发现正常，说明本机网络OK\n> 2. 本机尝试安装其他的包，发现进度条不动；其他机器尝试安装一样的包，发现能安装成功，证明包本身没问题\n> 3. 经过上面两步确定不是网络问题不是包问题而是本机有问题，然后npm config查看本机配置与其他机器配置有什么不一样，发现本机比其他机器多了无效代理\n> 4. 删除无效代理。vim /usr/local/etc/npmc找到设置代理的语句然后删除\n>\n>\n\n启动后的界面\n\n![选区_007.png](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_007.png)","source":"_posts/vue-start.md","raw":"---\ntitle: 新建Vue项目\ndate: 2017-12-04 10:04:43\ntags: vue 教程\ncategories: vue\n---\n\n\n\n> 在新建vue项目之前应该先检查一下是否已经安装好npm、node\n\n## 新建一个vue项目\n\n1. 设置镜像\n\n   ```\n   npm install -g cnpm --registry=https://registry.npm.taobao.org\n   ```\n\n2. 安装webpack\n\n   ```\n   npm install webpack -g\n   ```\n\n3. 安装vue-cli\n\n   ```\n   npm install vue-cli -g\n   ```\n\n4. 创建项目\n\n   ```\n   vue init webpack-simple 项目名称\n   ```\n\n5. 进入项目所在目录，安装依赖\n\n   ```\n   npm install\n   ```\n\n6. 启动项目\n\n   ```\n   npm run dev\n   ```\n\n> 在创建项目初始化的时候（也就是第四步）遇到了问题。\n>\n> ### 问题：\n>\n> vue-cli · Failed to download repo vuejs-templates/webpack-simple: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80\n>\n> ### 解决：\n>\n> 删除无效代理\n>\n> ### 定位问题的过程：\n>\n> 1. 本机ping外网发现正常，说明本机网络OK\n> 2. 本机尝试安装其他的包，发现进度条不动；其他机器尝试安装一样的包，发现能安装成功，证明包本身没问题\n> 3. 经过上面两步确定不是网络问题不是包问题而是本机有问题，然后npm config查看本机配置与其他机器配置有什么不一样，发现本机比其他机器多了无效代理\n> 4. 删除无效代理。vim /usr/local/etc/npmc找到设置代理的语句然后删除\n>\n>\n\n启动后的界面\n\n![选区_007.png](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_007.png)","slug":"vue-start","published":1,"updated":"2018-08-17T07:35:36.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvt003hoaqo74xzxtip","content":"<blockquote>\n<p>在新建vue项目之前应该先检查一下是否已经安装好npm、node</p>\n</blockquote>\n<h2 id=\"新建一个vue项目\"><a href=\"#新建一个vue项目\" class=\"headerlink\" title=\"新建一个vue项目\"></a>新建一个vue项目</h2><ol>\n<li><p>设置镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装webpack</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webpack -g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装vue-cli</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue-cli -g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack-simple 项目名称</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>进入项目所在目录，安装依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<blockquote>\n<p>在创建项目初始化的时候（也就是第四步）遇到了问题。</p>\n<h3 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h3><p>vue-cli · Failed to download repo vuejs-templates/webpack-simple: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80</p>\n<h3 id=\"解决：\"><a href=\"#解决：\" class=\"headerlink\" title=\"解决：\"></a>解决：</h3><p>删除无效代理</p>\n<h3 id=\"定位问题的过程：\"><a href=\"#定位问题的过程：\" class=\"headerlink\" title=\"定位问题的过程：\"></a>定位问题的过程：</h3><ol>\n<li>本机ping外网发现正常，说明本机网络OK</li>\n<li>本机尝试安装其他的包，发现进度条不动；其他机器尝试安装一样的包，发现能安装成功，证明包本身没问题</li>\n<li>经过上面两步确定不是网络问题不是包问题而是本机有问题，然后npm config查看本机配置与其他机器配置有什么不一样，发现本机比其他机器多了无效代理</li>\n<li>删除无效代理。vim /usr/local/etc/npmc找到设置代理的语句然后删除</li>\n</ol>\n</blockquote>\n<p>启动后的界面</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_007.png\" alt=\"选区_007.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>在新建vue项目之前应该先检查一下是否已经安装好npm、node</p>\n</blockquote>\n<h2 id=\"新建一个vue项目\"><a href=\"#新建一个vue项目\" class=\"headerlink\" title=\"新建一个vue项目\"></a>新建一个vue项目</h2><ol>\n<li><p>设置镜像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装webpack</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webpack -g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装vue-cli</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue-cli -g</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack-simple 项目名称</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>进入项目所在目录，安装依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动项目</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<blockquote>\n<p>在创建项目初始化的时候（也就是第四步）遇到了问题。</p>\n<h3 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h3><p>vue-cli · Failed to download repo vuejs-templates/webpack-simple: tunneling socket could not be established, cause=connect ECONNREFUSED 127.0.0.1:80</p>\n<h3 id=\"解决：\"><a href=\"#解决：\" class=\"headerlink\" title=\"解决：\"></a>解决：</h3><p>删除无效代理</p>\n<h3 id=\"定位问题的过程：\"><a href=\"#定位问题的过程：\" class=\"headerlink\" title=\"定位问题的过程：\"></a>定位问题的过程：</h3><ol>\n<li>本机ping外网发现正常，说明本机网络OK</li>\n<li>本机尝试安装其他的包，发现进度条不动；其他机器尝试安装一样的包，发现能安装成功，证明包本身没问题</li>\n<li>经过上面两步确定不是网络问题不是包问题而是本机有问题，然后npm config查看本机配置与其他机器配置有什么不一样，发现本机比其他机器多了无效代理</li>\n<li>删除无效代理。vim /usr/local/etc/npmc找到设置代理的语句然后删除</li>\n</ol>\n</blockquote>\n<p>启动后的界面</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_007.png\" alt=\"选区_007.png\"></p>\n"},{"title":"Vuelidate表单验证插件","date":"2017-12-12T14:14:10.000Z","_content":"\n\n\n# Vuelidate\n\nVuelidate是一款简单轻量级的基于模块的Vue.js验证插件。当前最新的版本是0.6.1,详情可以戳链接看官方文档（<https://monterail.github.io/vuelidate/>）或者前往github（<https://github.com/monterail/vuelidate>）。接触Vuelidate源于工作的需求，当时需要做表单验证然后师傅甩给我一个链接让我去学习。学习以后发现这是真的好用，它有以下功能特征：\n\n- 基于模型\n- 脱离模型\n- 依赖自由，简约的库\n- 支持收集验证\n- 支持嵌套模型\n- 上下文验证\n- 自定义验证，便于使用\n- 支持功能组合\n- 验证了不同数据源：Vuex getter，计算值，等等。\n\n在接触Vuelidate之前还用过另一个表单验证插件veelidate(<http://vee-validate.logaretm.com/index.html#>)用法跟Vuelidate差不多，但是Vuelidate更深得我心。\n\n# 安装\n\n安装很简单，用npm来安装只需要一句话：\n\n```\nnpm install vuelidate --save\n```\n\n# 使用\n\n### main.js\n\n在main.js中导入库并用作Vue插件，以便在包含验证配置的所有组件上全局启用该功能：\n\n```\nimport Vue from 'vue'\nimport Vuelidate from 'vuelidate'\nVue.use(Vuelidate)\n```\n\n### Example\n\n#### JS\n\n```\nimport { required, maxLength } from 'vuelidate/lib/validators'\n\nexport default {\n  data () {\n    return {\n      username: ''\n    }\n  },\n  validations: {\n    username: {\n      required,\n      minLength: minLength(6)\n    }\n  }\n}\n```\n\n#### HTML\n\n![选区_012](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_012.png)\n\n## 内置验证规则\n\n- required: 需要非空数据。检查仅包含空格的空数组和字符串。\n- maxLength:要求输入具有最大指定长度（包括最大值）。适用于数组。\n- minLength:要求输入具有最小指定长度（包括最小值）。适用于数组。\n- email: 接受有效的电子邮件地址。请记住，您仍然需要在服务器上进行仔细验证，因为无法发送验证电子邮件地址是否是真实的。\n- between: 检查数字或日期是否在指定范围内。最小值和最大值都包括在内。\n- ipAddress: 接受点分十进制表示形式的有效IPv4地址，如127.0.0.1。\n- alpha: 只接受字母字符。\n- alphaNum: 只接受字母数字。\n- numeric: 只接受数字。\n- sameAs: 检查给定属性是否相等。\n- url: 只接受网址。\n- or: 当至少有一个提供的验证器通过时通过。\n- and: 所有提供的验证器都通过时通过。\n- requiredIf: 仅当提供的属性或谓词为真时才需要非空数据。\n- requiredUnless: 仅当提供的属性或谓词为假时才需要非空数据。\n- minValue: 要求输入具有指定的最小数值或日期。\n- maxValue: 要求输入具有指定的最大数值或日期。\n\n## 自定义验证规则\n\n除了使用Vuelidate自带的内置验证规则外还可以使用自定义规则满足需求。只需要再新建一个js文件加入自己的验证规则就可以了。\n\n#### Example\n\n新建一个自定义验证规则name.js代码如图所示，基本可以参照内置验证规则写，要注意路径写正确。\n\n###### index.js\n\n```\n'use strict'\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n})\nexports.name  = undefined\n\nvar _name = require('./name')\n\nvar _name2 = _interopRequireDefault(_name)\n\nfunction _interopRequireDefault (obj) { return obj && obj.__esModule ? obj : { default: obj } }\n\nexports.name = _name2.default\n```\n\n###### name.js\n\n```\n'use strict'\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n})\n\nvar _common = require('vuelidate/lib/validators/common')\n\nvar nameRegex = /^[\\w-]+$/\n\nexports.default = (0, _common.regex)('name', nameRegex)\n```\n\n当这些设置好以后就可以像内置规则那样使用了，这里我是在utils下新建了vuelidate验证规则，所以路径可以这么写。\n\n```\nimport { name } from 'utils/vuelidate/lib/validators'\n```\n\n ","source":"_posts/vuelidate.md","raw":"---\ntitle: Vuelidate表单验证插件\ndate: 2017-12-12 22:14:10\ntags: validate 表单验证插件\ncategories: validate\n---\n\n\n\n# Vuelidate\n\nVuelidate是一款简单轻量级的基于模块的Vue.js验证插件。当前最新的版本是0.6.1,详情可以戳链接看官方文档（<https://monterail.github.io/vuelidate/>）或者前往github（<https://github.com/monterail/vuelidate>）。接触Vuelidate源于工作的需求，当时需要做表单验证然后师傅甩给我一个链接让我去学习。学习以后发现这是真的好用，它有以下功能特征：\n\n- 基于模型\n- 脱离模型\n- 依赖自由，简约的库\n- 支持收集验证\n- 支持嵌套模型\n- 上下文验证\n- 自定义验证，便于使用\n- 支持功能组合\n- 验证了不同数据源：Vuex getter，计算值，等等。\n\n在接触Vuelidate之前还用过另一个表单验证插件veelidate(<http://vee-validate.logaretm.com/index.html#>)用法跟Vuelidate差不多，但是Vuelidate更深得我心。\n\n# 安装\n\n安装很简单，用npm来安装只需要一句话：\n\n```\nnpm install vuelidate --save\n```\n\n# 使用\n\n### main.js\n\n在main.js中导入库并用作Vue插件，以便在包含验证配置的所有组件上全局启用该功能：\n\n```\nimport Vue from 'vue'\nimport Vuelidate from 'vuelidate'\nVue.use(Vuelidate)\n```\n\n### Example\n\n#### JS\n\n```\nimport { required, maxLength } from 'vuelidate/lib/validators'\n\nexport default {\n  data () {\n    return {\n      username: ''\n    }\n  },\n  validations: {\n    username: {\n      required,\n      minLength: minLength(6)\n    }\n  }\n}\n```\n\n#### HTML\n\n![选区_012](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_012.png)\n\n## 内置验证规则\n\n- required: 需要非空数据。检查仅包含空格的空数组和字符串。\n- maxLength:要求输入具有最大指定长度（包括最大值）。适用于数组。\n- minLength:要求输入具有最小指定长度（包括最小值）。适用于数组。\n- email: 接受有效的电子邮件地址。请记住，您仍然需要在服务器上进行仔细验证，因为无法发送验证电子邮件地址是否是真实的。\n- between: 检查数字或日期是否在指定范围内。最小值和最大值都包括在内。\n- ipAddress: 接受点分十进制表示形式的有效IPv4地址，如127.0.0.1。\n- alpha: 只接受字母字符。\n- alphaNum: 只接受字母数字。\n- numeric: 只接受数字。\n- sameAs: 检查给定属性是否相等。\n- url: 只接受网址。\n- or: 当至少有一个提供的验证器通过时通过。\n- and: 所有提供的验证器都通过时通过。\n- requiredIf: 仅当提供的属性或谓词为真时才需要非空数据。\n- requiredUnless: 仅当提供的属性或谓词为假时才需要非空数据。\n- minValue: 要求输入具有指定的最小数值或日期。\n- maxValue: 要求输入具有指定的最大数值或日期。\n\n## 自定义验证规则\n\n除了使用Vuelidate自带的内置验证规则外还可以使用自定义规则满足需求。只需要再新建一个js文件加入自己的验证规则就可以了。\n\n#### Example\n\n新建一个自定义验证规则name.js代码如图所示，基本可以参照内置验证规则写，要注意路径写正确。\n\n###### index.js\n\n```\n'use strict'\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n})\nexports.name  = undefined\n\nvar _name = require('./name')\n\nvar _name2 = _interopRequireDefault(_name)\n\nfunction _interopRequireDefault (obj) { return obj && obj.__esModule ? obj : { default: obj } }\n\nexports.name = _name2.default\n```\n\n###### name.js\n\n```\n'use strict'\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n})\n\nvar _common = require('vuelidate/lib/validators/common')\n\nvar nameRegex = /^[\\w-]+$/\n\nexports.default = (0, _common.regex)('name', nameRegex)\n```\n\n当这些设置好以后就可以像内置规则那样使用了，这里我是在utils下新建了vuelidate验证规则，所以路径可以这么写。\n\n```\nimport { name } from 'utils/vuelidate/lib/validators'\n```\n\n ","slug":"vuelidate","published":1,"updated":"2018-08-17T07:35:36.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvu003koaqox8dtvr84","content":"<h1 id=\"Vuelidate\"><a href=\"#Vuelidate\" class=\"headerlink\" title=\"Vuelidate\"></a>Vuelidate</h1><p>Vuelidate是一款简单轻量级的基于模块的Vue.js验证插件。当前最新的版本是0.6.1,详情可以戳链接看官方文档（<a href=\"https://monterail.github.io/vuelidate/\" target=\"_blank\" rel=\"noopener\">https://monterail.github.io/vuelidate/</a>）或者前往github（<a href=\"https://github.com/monterail/vuelidate\" target=\"_blank\" rel=\"noopener\">https://github.com/monterail/vuelidate</a>）。接触Vuelidate源于工作的需求，当时需要做表单验证然后师傅甩给我一个链接让我去学习。学习以后发现这是真的好用，它有以下功能特征：</p>\n<ul>\n<li>基于模型</li>\n<li>脱离模型</li>\n<li>依赖自由，简约的库</li>\n<li>支持收集验证</li>\n<li>支持嵌套模型</li>\n<li>上下文验证</li>\n<li>自定义验证，便于使用</li>\n<li>支持功能组合</li>\n<li>验证了不同数据源：Vuex getter，计算值，等等。</li>\n</ul>\n<p>在接触Vuelidate之前还用过另一个表单验证插件veelidate(<a href=\"http://vee-validate.logaretm.com/index.html#\" target=\"_blank\" rel=\"noopener\">http://vee-validate.logaretm.com/index.html#</a>)用法跟Vuelidate差不多，但是Vuelidate更深得我心。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>安装很简单，用npm来安装只需要一句话：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vuelidate --save</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><h3 id=\"main-js\"><a href=\"#main-js\" class=\"headerlink\" title=\"main.js\"></a>main.js</h3><p>在main.js中导入库并用作Vue插件，以便在包含验证配置的所有组件上全局启用该功能：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import Vuelidate from &apos;vuelidate&apos;</span><br><span class=\"line\">Vue.use(Vuelidate)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h3><h4 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; required, maxLength &#125; from &apos;vuelidate/lib/validators&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      username: &apos;&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  validations: &#123;</span><br><span class=\"line\">    username: &#123;</span><br><span class=\"line\">      required,</span><br><span class=\"line\">      minLength: minLength(6)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_012.png\" alt=\"选区_012\"></p>\n<h2 id=\"内置验证规则\"><a href=\"#内置验证规则\" class=\"headerlink\" title=\"内置验证规则\"></a>内置验证规则</h2><ul>\n<li>required: 需要非空数据。检查仅包含空格的空数组和字符串。</li>\n<li>maxLength:要求输入具有最大指定长度（包括最大值）。适用于数组。</li>\n<li>minLength:要求输入具有最小指定长度（包括最小值）。适用于数组。</li>\n<li>email: 接受有效的电子邮件地址。请记住，您仍然需要在服务器上进行仔细验证，因为无法发送验证电子邮件地址是否是真实的。</li>\n<li>between: 检查数字或日期是否在指定范围内。最小值和最大值都包括在内。</li>\n<li>ipAddress: 接受点分十进制表示形式的有效IPv4地址，如127.0.0.1。</li>\n<li>alpha: 只接受字母字符。</li>\n<li>alphaNum: 只接受字母数字。</li>\n<li>numeric: 只接受数字。</li>\n<li>sameAs: 检查给定属性是否相等。</li>\n<li>url: 只接受网址。</li>\n<li>or: 当至少有一个提供的验证器通过时通过。</li>\n<li>and: 所有提供的验证器都通过时通过。</li>\n<li>requiredIf: 仅当提供的属性或谓词为真时才需要非空数据。</li>\n<li>requiredUnless: 仅当提供的属性或谓词为假时才需要非空数据。</li>\n<li>minValue: 要求输入具有指定的最小数值或日期。</li>\n<li>maxValue: 要求输入具有指定的最大数值或日期。</li>\n</ul>\n<h2 id=\"自定义验证规则\"><a href=\"#自定义验证规则\" class=\"headerlink\" title=\"自定义验证规则\"></a>自定义验证规则</h2><p>除了使用Vuelidate自带的内置验证规则外还可以使用自定义规则满足需求。只需要再新建一个js文件加入自己的验证规则就可以了。</p>\n<h4 id=\"Example-1\"><a href=\"#Example-1\" class=\"headerlink\" title=\"Example\"></a>Example</h4><p>新建一个自定义验证规则name.js代码如图所示，基本可以参照内置验证规则写，要注意路径写正确。</p>\n<h6 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;use strict&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, &apos;__esModule&apos;, &#123;</span><br><span class=\"line\">  value: true</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">exports.name  = undefined</span><br><span class=\"line\"></span><br><span class=\"line\">var _name = require(&apos;./name&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">var _name2 = _interopRequireDefault(_name)</span><br><span class=\"line\"></span><br><span class=\"line\">function _interopRequireDefault (obj) &#123; return obj &amp;&amp; obj.__esModule ? obj : &#123; default: obj &#125; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.name = _name2.default</span><br></pre></td></tr></table></figure>\n<h6 id=\"name-js\"><a href=\"#name-js\" class=\"headerlink\" title=\"name.js\"></a>name.js</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;use strict&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, &apos;__esModule&apos;, &#123;</span><br><span class=\"line\">  value: true</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">var _common = require(&apos;vuelidate/lib/validators/common&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">var nameRegex = /^[\\w-]+$/</span><br><span class=\"line\"></span><br><span class=\"line\">exports.default = (0, _common.regex)(&apos;name&apos;, nameRegex)</span><br></pre></td></tr></table></figure>\n<p>当这些设置好以后就可以像内置规则那样使用了，这里我是在utils下新建了vuelidate验证规则，所以路径可以这么写。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; name &#125; from &apos;utils/vuelidate/lib/validators&apos;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vuelidate\"><a href=\"#Vuelidate\" class=\"headerlink\" title=\"Vuelidate\"></a>Vuelidate</h1><p>Vuelidate是一款简单轻量级的基于模块的Vue.js验证插件。当前最新的版本是0.6.1,详情可以戳链接看官方文档（<a href=\"https://monterail.github.io/vuelidate/\" target=\"_blank\" rel=\"noopener\">https://monterail.github.io/vuelidate/</a>）或者前往github（<a href=\"https://github.com/monterail/vuelidate\" target=\"_blank\" rel=\"noopener\">https://github.com/monterail/vuelidate</a>）。接触Vuelidate源于工作的需求，当时需要做表单验证然后师傅甩给我一个链接让我去学习。学习以后发现这是真的好用，它有以下功能特征：</p>\n<ul>\n<li>基于模型</li>\n<li>脱离模型</li>\n<li>依赖自由，简约的库</li>\n<li>支持收集验证</li>\n<li>支持嵌套模型</li>\n<li>上下文验证</li>\n<li>自定义验证，便于使用</li>\n<li>支持功能组合</li>\n<li>验证了不同数据源：Vuex getter，计算值，等等。</li>\n</ul>\n<p>在接触Vuelidate之前还用过另一个表单验证插件veelidate(<a href=\"http://vee-validate.logaretm.com/index.html#\" target=\"_blank\" rel=\"noopener\">http://vee-validate.logaretm.com/index.html#</a>)用法跟Vuelidate差不多，但是Vuelidate更深得我心。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>安装很简单，用npm来安装只需要一句话：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vuelidate --save</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><h3 id=\"main-js\"><a href=\"#main-js\" class=\"headerlink\" title=\"main.js\"></a>main.js</h3><p>在main.js中导入库并用作Vue插件，以便在包含验证配置的所有组件上全局启用该功能：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import Vue from &apos;vue&apos;</span><br><span class=\"line\">import Vuelidate from &apos;vuelidate&apos;</span><br><span class=\"line\">Vue.use(Vuelidate)</span><br></pre></td></tr></table></figure>\n<h3 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h3><h4 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; required, maxLength &#125; from &apos;vuelidate/lib/validators&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      username: &apos;&apos;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  validations: &#123;</span><br><span class=\"line\">    username: &#123;</span><br><span class=\"line\">      required,</span><br><span class=\"line\">      minLength: minLength(6)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h4><p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_012.png\" alt=\"选区_012\"></p>\n<h2 id=\"内置验证规则\"><a href=\"#内置验证规则\" class=\"headerlink\" title=\"内置验证规则\"></a>内置验证规则</h2><ul>\n<li>required: 需要非空数据。检查仅包含空格的空数组和字符串。</li>\n<li>maxLength:要求输入具有最大指定长度（包括最大值）。适用于数组。</li>\n<li>minLength:要求输入具有最小指定长度（包括最小值）。适用于数组。</li>\n<li>email: 接受有效的电子邮件地址。请记住，您仍然需要在服务器上进行仔细验证，因为无法发送验证电子邮件地址是否是真实的。</li>\n<li>between: 检查数字或日期是否在指定范围内。最小值和最大值都包括在内。</li>\n<li>ipAddress: 接受点分十进制表示形式的有效IPv4地址，如127.0.0.1。</li>\n<li>alpha: 只接受字母字符。</li>\n<li>alphaNum: 只接受字母数字。</li>\n<li>numeric: 只接受数字。</li>\n<li>sameAs: 检查给定属性是否相等。</li>\n<li>url: 只接受网址。</li>\n<li>or: 当至少有一个提供的验证器通过时通过。</li>\n<li>and: 所有提供的验证器都通过时通过。</li>\n<li>requiredIf: 仅当提供的属性或谓词为真时才需要非空数据。</li>\n<li>requiredUnless: 仅当提供的属性或谓词为假时才需要非空数据。</li>\n<li>minValue: 要求输入具有指定的最小数值或日期。</li>\n<li>maxValue: 要求输入具有指定的最大数值或日期。</li>\n</ul>\n<h2 id=\"自定义验证规则\"><a href=\"#自定义验证规则\" class=\"headerlink\" title=\"自定义验证规则\"></a>自定义验证规则</h2><p>除了使用Vuelidate自带的内置验证规则外还可以使用自定义规则满足需求。只需要再新建一个js文件加入自己的验证规则就可以了。</p>\n<h4 id=\"Example-1\"><a href=\"#Example-1\" class=\"headerlink\" title=\"Example\"></a>Example</h4><p>新建一个自定义验证规则name.js代码如图所示，基本可以参照内置验证规则写，要注意路径写正确。</p>\n<h6 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;use strict&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, &apos;__esModule&apos;, &#123;</span><br><span class=\"line\">  value: true</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">exports.name  = undefined</span><br><span class=\"line\"></span><br><span class=\"line\">var _name = require(&apos;./name&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">var _name2 = _interopRequireDefault(_name)</span><br><span class=\"line\"></span><br><span class=\"line\">function _interopRequireDefault (obj) &#123; return obj &amp;&amp; obj.__esModule ? obj : &#123; default: obj &#125; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.name = _name2.default</span><br></pre></td></tr></table></figure>\n<h6 id=\"name-js\"><a href=\"#name-js\" class=\"headerlink\" title=\"name.js\"></a>name.js</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&apos;use strict&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">Object.defineProperty(exports, &apos;__esModule&apos;, &#123;</span><br><span class=\"line\">  value: true</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">var _common = require(&apos;vuelidate/lib/validators/common&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">var nameRegex = /^[\\w-]+$/</span><br><span class=\"line\"></span><br><span class=\"line\">exports.default = (0, _common.regex)(&apos;name&apos;, nameRegex)</span><br></pre></td></tr></table></figure>\n<p>当这些设置好以后就可以像内置规则那样使用了，这里我是在utils下新建了vuelidate验证规则，所以路径可以这么写。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; name &#125; from &apos;utils/vuelidate/lib/validators&apos;</span><br></pre></td></tr></table></figure>\n"},{"title":"vue项目使用npm出现的问题","date":"2018-08-21T02:23:47.000Z","_content":"\n\n\n## 现象\n\n运行单元测试`npm run test`出现问题：\n\n> No parser and no filepath given, using 'babylon' the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred.\n\n\n\n## 解决\n\n参考原issues：[https://github.com/nuxt/nuxt.js/issues/3400](https://github.com/nuxt/nuxt.js/issues/3400)，解决方案为:\n\n```shell\nnpm install vue-loader@13.7.2 --save-dev\n```\n\n\n\n\n\n","source":"_posts/vue-npm.md","raw":"---\ntitle: vue项目使用npm出现的问题\ndate: 2018-08-21 10:23:47\ntags: [vue, npm]\ncategories: NPM\n---\n\n\n\n## 现象\n\n运行单元测试`npm run test`出现问题：\n\n> No parser and no filepath given, using 'babylon' the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred.\n\n\n\n## 解决\n\n参考原issues：[https://github.com/nuxt/nuxt.js/issues/3400](https://github.com/nuxt/nuxt.js/issues/3400)，解决方案为:\n\n```shell\nnpm install vue-loader@13.7.2 --save-dev\n```\n\n\n\n\n\n","slug":"vue-npm","published":1,"updated":"2018-08-21T02:24:54.470Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvv003ooaqo4ec9kaep","content":"<h2 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h2><p>运行单元测试<code>npm run test</code>出现问题：</p>\n<blockquote>\n<p>No parser and no filepath given, using ‘babylon’ the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred.</p>\n</blockquote>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><p>参考原issues：<a href=\"https://github.com/nuxt/nuxt.js/issues/3400\" target=\"_blank\" rel=\"noopener\">https://github.com/nuxt/nuxt.js/issues/3400</a>，解决方案为:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue-loader@13.7.2 --save-dev</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"现象\"><a href=\"#现象\" class=\"headerlink\" title=\"现象\"></a>现象</h2><p>运行单元测试<code>npm run test</code>出现问题：</p>\n<blockquote>\n<p>No parser and no filepath given, using ‘babylon’ the parser now but this will throw an error in the future. Please specify a parser or a filepath so one can be inferred.</p>\n</blockquote>\n<h2 id=\"解决\"><a href=\"#解决\" class=\"headerlink\" title=\"解决\"></a>解决</h2><p>参考原issues：<a href=\"https://github.com/nuxt/nuxt.js/issues/3400\" target=\"_blank\" rel=\"noopener\">https://github.com/nuxt/nuxt.js/issues/3400</a>，解决方案为:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue-loader@13.7.2 --save-dev</span><br></pre></td></tr></table></figure>\n"},{"title":"web工程师的前端书单","date":"2017-12-12T08:30:29.000Z","_content":"\n#### JavaScript\n\n###### 入门\n\n- 《JavaScript权威指南（第六版）》\n- 《JavaScript高级程序设计》\n- 《JavaScript DOM编程艺术》\n- 《ECMAScript6入门》\n\n###### 进阶\n\n- 《编写可维护的JavaScript》\n- 《JavaScript异步编程》\n- 《JAVASCRIPT语言精髓与编程实践》\n- 《高性能JavaScript》\n- 《You Don't Know JS》\n\n#### CSS\n\n###### 进阶\n\n- 《CSS权威指南（第三版）》\n- 《精通CSS（第2版）》\n\n#### 网络协议&架构\n\n- 《HTTP权威指南》\n- 《Web性能权威指南》\n- 《大型网站技术架构》\n\n#### NodeJS\n\n###### 入门\n\n- 《Node.js开发指南》\n\n###### 进阶\n\n- 《深入浅出Node.js》\n\n#### 用户体验&产品\n\n- 《点石成金》\n- 《结网@改变世界的互联网产品经理》\n\n\n","source":"_posts/web.md","raw":"---\ntitle: web工程师的前端书单\ndate: 2017-12-12 16:30:29\ntags: web前端\ncategories: 读书\n---\n\n#### JavaScript\n\n###### 入门\n\n- 《JavaScript权威指南（第六版）》\n- 《JavaScript高级程序设计》\n- 《JavaScript DOM编程艺术》\n- 《ECMAScript6入门》\n\n###### 进阶\n\n- 《编写可维护的JavaScript》\n- 《JavaScript异步编程》\n- 《JAVASCRIPT语言精髓与编程实践》\n- 《高性能JavaScript》\n- 《You Don't Know JS》\n\n#### CSS\n\n###### 进阶\n\n- 《CSS权威指南（第三版）》\n- 《精通CSS（第2版）》\n\n#### 网络协议&架构\n\n- 《HTTP权威指南》\n- 《Web性能权威指南》\n- 《大型网站技术架构》\n\n#### NodeJS\n\n###### 入门\n\n- 《Node.js开发指南》\n\n###### 进阶\n\n- 《深入浅出Node.js》\n\n#### 用户体验&产品\n\n- 《点石成金》\n- 《结网@改变世界的互联网产品经理》\n\n\n","slug":"web","published":1,"updated":"2018-08-17T07:35:36.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvw003qoaqob0lpyzwf","content":"<h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><h6 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h6><ul>\n<li>《JavaScript权威指南（第六版）》</li>\n<li>《JavaScript高级程序设计》</li>\n<li>《JavaScript DOM编程艺术》</li>\n<li>《ECMAScript6入门》</li>\n</ul>\n<h6 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h6><ul>\n<li>《编写可维护的JavaScript》</li>\n<li>《JavaScript异步编程》</li>\n<li>《JAVASCRIPT语言精髓与编程实践》</li>\n<li>《高性能JavaScript》</li>\n<li>《You Don’t Know JS》</li>\n</ul>\n<h4 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h4><h6 id=\"进阶-1\"><a href=\"#进阶-1\" class=\"headerlink\" title=\"进阶\"></a>进阶</h6><ul>\n<li>《CSS权威指南（第三版）》</li>\n<li>《精通CSS（第2版）》</li>\n</ul>\n<h4 id=\"网络协议-amp-架构\"><a href=\"#网络协议-amp-架构\" class=\"headerlink\" title=\"网络协议&amp;架构\"></a>网络协议&amp;架构</h4><ul>\n<li>《HTTP权威指南》</li>\n<li>《Web性能权威指南》</li>\n<li>《大型网站技术架构》</li>\n</ul>\n<h4 id=\"NodeJS\"><a href=\"#NodeJS\" class=\"headerlink\" title=\"NodeJS\"></a>NodeJS</h4><h6 id=\"入门-1\"><a href=\"#入门-1\" class=\"headerlink\" title=\"入门\"></a>入门</h6><ul>\n<li>《Node.js开发指南》</li>\n</ul>\n<h6 id=\"进阶-2\"><a href=\"#进阶-2\" class=\"headerlink\" title=\"进阶\"></a>进阶</h6><ul>\n<li>《深入浅出Node.js》</li>\n</ul>\n<h4 id=\"用户体验-amp-产品\"><a href=\"#用户体验-amp-产品\" class=\"headerlink\" title=\"用户体验&amp;产品\"></a>用户体验&amp;产品</h4><ul>\n<li>《点石成金》</li>\n<li>《结网@改变世界的互联网产品经理》</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h4><h6 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h6><ul>\n<li>《JavaScript权威指南（第六版）》</li>\n<li>《JavaScript高级程序设计》</li>\n<li>《JavaScript DOM编程艺术》</li>\n<li>《ECMAScript6入门》</li>\n</ul>\n<h6 id=\"进阶\"><a href=\"#进阶\" class=\"headerlink\" title=\"进阶\"></a>进阶</h6><ul>\n<li>《编写可维护的JavaScript》</li>\n<li>《JavaScript异步编程》</li>\n<li>《JAVASCRIPT语言精髓与编程实践》</li>\n<li>《高性能JavaScript》</li>\n<li>《You Don’t Know JS》</li>\n</ul>\n<h4 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h4><h6 id=\"进阶-1\"><a href=\"#进阶-1\" class=\"headerlink\" title=\"进阶\"></a>进阶</h6><ul>\n<li>《CSS权威指南（第三版）》</li>\n<li>《精通CSS（第2版）》</li>\n</ul>\n<h4 id=\"网络协议-amp-架构\"><a href=\"#网络协议-amp-架构\" class=\"headerlink\" title=\"网络协议&amp;架构\"></a>网络协议&amp;架构</h4><ul>\n<li>《HTTP权威指南》</li>\n<li>《Web性能权威指南》</li>\n<li>《大型网站技术架构》</li>\n</ul>\n<h4 id=\"NodeJS\"><a href=\"#NodeJS\" class=\"headerlink\" title=\"NodeJS\"></a>NodeJS</h4><h6 id=\"入门-1\"><a href=\"#入门-1\" class=\"headerlink\" title=\"入门\"></a>入门</h6><ul>\n<li>《Node.js开发指南》</li>\n</ul>\n<h6 id=\"进阶-2\"><a href=\"#进阶-2\" class=\"headerlink\" title=\"进阶\"></a>进阶</h6><ul>\n<li>《深入浅出Node.js》</li>\n</ul>\n<h4 id=\"用户体验-amp-产品\"><a href=\"#用户体验-amp-产品\" class=\"headerlink\" title=\"用户体验&amp;产品\"></a>用户体验&amp;产品</h4><ul>\n<li>《点石成金》</li>\n<li>《结网@改变世界的互联网产品经理》</li>\n</ul>\n"},{"title":"值得收藏的网站","date":"2018-04-24T10:14:07.000Z","_content":"\n#### 毕业论文/毕设\n\n- [Docx88.com](http://www.docx88.com/)\n\n>文库大全、免费文库资料下载，可以复制文章后面的code到百度文库打开查看原文。\n>\n>比如，在Docx88.com搜索到的文章url是`http://www.docx88.com/wkid-11312839e97101f69e3143323968011ca300f7e2-11.html`，则在百度文库中的地址为：`https://wenku.baidu.com/view/11312839e97101f69e3143323968011ca300f7e2-11.html`\n\n- [paperpass](http://www.paperpass.com/)\n\n> 论文查重\n\n- [知网](http://www.cnki.net/)\n\n#### 工具类\n\n- [蓝湖](https://lanhuapp.com/)\n\n>团队工作平台，sketch的好朋友\n\n- [processOn](https://www.processon.com/)\n\n>免费在线作图，实时协作\n\n- [正则调试工具1](http://regex.zjmainstay.cn/)\n- [正则调试工具2](https://jex.im/regulex/#!flags=&re=%5E(a%7Cb)*%3F%24)\n- [jsplumbtoolkit](https://jsplumbtoolkit.com/)\n\n>画流程图的软件\n\n- [Json.cn](https://www.json.cn/)\n\n>Json在线解析格式\n\n- [web开发速查表](http://www.css88.com/dev/)\n\n>超实用的！！比如查css flex，就会看到flex的基本用法和所有属性\n\n- [css参考手册](http://www.css88.com/book/css/)\n- [jsbin](http://jsbin.com/deluyetidi/edit?html,js,console)\n\n>js在线编辑器\n\n","source":"_posts/website-address.md","raw":"---\ntitle: 值得收藏的网站\ndate: 2018-04-24 18:14:07\ntags: 网址\ncategories: 其他\n---\n\n#### 毕业论文/毕设\n\n- [Docx88.com](http://www.docx88.com/)\n\n>文库大全、免费文库资料下载，可以复制文章后面的code到百度文库打开查看原文。\n>\n>比如，在Docx88.com搜索到的文章url是`http://www.docx88.com/wkid-11312839e97101f69e3143323968011ca300f7e2-11.html`，则在百度文库中的地址为：`https://wenku.baidu.com/view/11312839e97101f69e3143323968011ca300f7e2-11.html`\n\n- [paperpass](http://www.paperpass.com/)\n\n> 论文查重\n\n- [知网](http://www.cnki.net/)\n\n#### 工具类\n\n- [蓝湖](https://lanhuapp.com/)\n\n>团队工作平台，sketch的好朋友\n\n- [processOn](https://www.processon.com/)\n\n>免费在线作图，实时协作\n\n- [正则调试工具1](http://regex.zjmainstay.cn/)\n- [正则调试工具2](https://jex.im/regulex/#!flags=&re=%5E(a%7Cb)*%3F%24)\n- [jsplumbtoolkit](https://jsplumbtoolkit.com/)\n\n>画流程图的软件\n\n- [Json.cn](https://www.json.cn/)\n\n>Json在线解析格式\n\n- [web开发速查表](http://www.css88.com/dev/)\n\n>超实用的！！比如查css flex，就会看到flex的基本用法和所有属性\n\n- [css参考手册](http://www.css88.com/book/css/)\n- [jsbin](http://jsbin.com/deluyetidi/edit?html,js,console)\n\n>js在线编辑器\n\n","slug":"website-address","published":1,"updated":"2018-08-17T07:35:36.765Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvy003uoaqocntrw66u","content":"<h4 id=\"毕业论文-毕设\"><a href=\"#毕业论文-毕设\" class=\"headerlink\" title=\"毕业论文/毕设\"></a>毕业论文/毕设</h4><ul>\n<li><a href=\"http://www.docx88.com/\" target=\"_blank\" rel=\"noopener\">Docx88.com</a></li>\n</ul>\n<blockquote>\n<p>文库大全、免费文库资料下载，可以复制文章后面的code到百度文库打开查看原文。</p>\n<p>比如，在Docx88.com搜索到的文章url是<code>http://www.docx88.com/wkid-11312839e97101f69e3143323968011ca300f7e2-11.html</code>，则在百度文库中的地址为：<code>https://wenku.baidu.com/view/11312839e97101f69e3143323968011ca300f7e2-11.html</code></p>\n</blockquote>\n<ul>\n<li><a href=\"http://www.paperpass.com/\" target=\"_blank\" rel=\"noopener\">paperpass</a></li>\n</ul>\n<blockquote>\n<p>论文查重</p>\n</blockquote>\n<ul>\n<li><a href=\"http://www.cnki.net/\" target=\"_blank\" rel=\"noopener\">知网</a></li>\n</ul>\n<h4 id=\"工具类\"><a href=\"#工具类\" class=\"headerlink\" title=\"工具类\"></a>工具类</h4><ul>\n<li><a href=\"https://lanhuapp.com/\" target=\"_blank\" rel=\"noopener\">蓝湖</a></li>\n</ul>\n<blockquote>\n<p>团队工作平台，sketch的好朋友</p>\n</blockquote>\n<ul>\n<li><a href=\"https://www.processon.com/\" target=\"_blank\" rel=\"noopener\">processOn</a></li>\n</ul>\n<blockquote>\n<p>免费在线作图，实时协作</p>\n</blockquote>\n<ul>\n<li><a href=\"http://regex.zjmainstay.cn/\" target=\"_blank\" rel=\"noopener\">正则调试工具1</a></li>\n<li><a href=\"https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb\" target=\"_blank\" rel=\"noopener\">正则调试工具2</a>*%3F%24)</li>\n<li><a href=\"https://jsplumbtoolkit.com/\" target=\"_blank\" rel=\"noopener\">jsplumbtoolkit</a></li>\n</ul>\n<blockquote>\n<p>画流程图的软件</p>\n</blockquote>\n<ul>\n<li><a href=\"https://www.json.cn/\" target=\"_blank\" rel=\"noopener\">Json.cn</a></li>\n</ul>\n<blockquote>\n<p>Json在线解析格式</p>\n</blockquote>\n<ul>\n<li><a href=\"http://www.css88.com/dev/\" target=\"_blank\" rel=\"noopener\">web开发速查表</a></li>\n</ul>\n<blockquote>\n<p>超实用的！！比如查css flex，就会看到flex的基本用法和所有属性</p>\n</blockquote>\n<ul>\n<li><a href=\"http://www.css88.com/book/css/\" target=\"_blank\" rel=\"noopener\">css参考手册</a></li>\n<li><a href=\"http://jsbin.com/deluyetidi/edit?html,js,console\" target=\"_blank\" rel=\"noopener\">jsbin</a></li>\n</ul>\n<blockquote>\n<p>js在线编辑器</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"毕业论文-毕设\"><a href=\"#毕业论文-毕设\" class=\"headerlink\" title=\"毕业论文/毕设\"></a>毕业论文/毕设</h4><ul>\n<li><a href=\"http://www.docx88.com/\" target=\"_blank\" rel=\"noopener\">Docx88.com</a></li>\n</ul>\n<blockquote>\n<p>文库大全、免费文库资料下载，可以复制文章后面的code到百度文库打开查看原文。</p>\n<p>比如，在Docx88.com搜索到的文章url是<code>http://www.docx88.com/wkid-11312839e97101f69e3143323968011ca300f7e2-11.html</code>，则在百度文库中的地址为：<code>https://wenku.baidu.com/view/11312839e97101f69e3143323968011ca300f7e2-11.html</code></p>\n</blockquote>\n<ul>\n<li><a href=\"http://www.paperpass.com/\" target=\"_blank\" rel=\"noopener\">paperpass</a></li>\n</ul>\n<blockquote>\n<p>论文查重</p>\n</blockquote>\n<ul>\n<li><a href=\"http://www.cnki.net/\" target=\"_blank\" rel=\"noopener\">知网</a></li>\n</ul>\n<h4 id=\"工具类\"><a href=\"#工具类\" class=\"headerlink\" title=\"工具类\"></a>工具类</h4><ul>\n<li><a href=\"https://lanhuapp.com/\" target=\"_blank\" rel=\"noopener\">蓝湖</a></li>\n</ul>\n<blockquote>\n<p>团队工作平台，sketch的好朋友</p>\n</blockquote>\n<ul>\n<li><a href=\"https://www.processon.com/\" target=\"_blank\" rel=\"noopener\">processOn</a></li>\n</ul>\n<blockquote>\n<p>免费在线作图，实时协作</p>\n</blockquote>\n<ul>\n<li><a href=\"http://regex.zjmainstay.cn/\" target=\"_blank\" rel=\"noopener\">正则调试工具1</a></li>\n<li><a href=\"https://jex.im/regulex/#!flags=&amp;re=%5E(a%7Cb\" target=\"_blank\" rel=\"noopener\">正则调试工具2</a>*%3F%24)</li>\n<li><a href=\"https://jsplumbtoolkit.com/\" target=\"_blank\" rel=\"noopener\">jsplumbtoolkit</a></li>\n</ul>\n<blockquote>\n<p>画流程图的软件</p>\n</blockquote>\n<ul>\n<li><a href=\"https://www.json.cn/\" target=\"_blank\" rel=\"noopener\">Json.cn</a></li>\n</ul>\n<blockquote>\n<p>Json在线解析格式</p>\n</blockquote>\n<ul>\n<li><a href=\"http://www.css88.com/dev/\" target=\"_blank\" rel=\"noopener\">web开发速查表</a></li>\n</ul>\n<blockquote>\n<p>超实用的！！比如查css flex，就会看到flex的基本用法和所有属性</p>\n</blockquote>\n<ul>\n<li><a href=\"http://www.css88.com/book/css/\" target=\"_blank\" rel=\"noopener\">css参考手册</a></li>\n<li><a href=\"http://jsbin.com/deluyetidi/edit?html,js,console\" target=\"_blank\" rel=\"noopener\">jsbin</a></li>\n</ul>\n<blockquote>\n<p>js在线编辑器</p>\n</blockquote>\n"},{"title":"Ubuntu下安装Xmind","date":"2017-12-12T13:54:28.000Z","_content":"\n\n\n## 为什么要选择Xmind\n\n因为我需要一款思维导图软件，之前有个手机APP就叫思维导图觉得还可以，搜了一下并没有PC版然后搜到了xmind，感觉linux系统的电脑应用软件不是很多啊（或许是我见识短）anyway~我决定装xmind。\n\n## 我为什么要写出来\n\n选就选了呗用就用了呗写什么写啊，老子喜欢写就写你管我。哎呀其实是第一次装的时候踩坑了没装成功于是这次我决定写出来。\n\n## 安装\n\n首先先去官网<http://www.xmind.net/download/linux/> 把安装包下载下来。\n\n![选区_011.png](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_011.png)\n\n一般来说点击这个红色按钮download就可以了，我第一次也是这么做的，然而并没有成功至于为什么没成功具体原因我也不记得了，大概是有些依赖没装什么的吧。这次我学乖了，把页面拉到底部\n\n![选区_012](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_0121.png)\n\n点击Previous  Versions按钮跳转到另一个页面\n\n![选区_013.png](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_013.png)\n\n我是linux系统64位，当然选第四个啦，下载下来是一个deb包，运行以下代码即可安装成功~惊不惊喜意不意外！\n\n> $ sudo dpkg -i xmind-7.5-update1-linux_amd64.deb\n\n成功了当然要上图晒一下啦，有模板也有空白的随便选\n\n![选区_010.png](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_010.png)\n\n## By the way\n\nXmind现在有个测试版本叫Xmind ZAN,感觉界面很炫酷啊，可以去官网申请测试资格，很伤心测试版本没有Linux版本!!!!宝宝不开心，只有Windows和Mac。但是还是放一些图满足一下吧\n\n![v2-73dde99ace6d08cf9c3fa3b42496016d_r.jpg](https://eveywongblog.files.wordpress.com/2017/11/v2-73dde99ace6d08cf9c3fa3b42496016d_r.jpg)\n\n![v2-225708c5c410d45633ee789aa22adfe1_r.jpg](https://eveywongblog.files.wordpress.com/2017/11/v2-225708c5c410d45633ee789aa22adfe1_r.jpg)\n\n![v2-723f59c4304a16ff25bdef1f26ad279a_r.jpg](https://eveywongblog.files.wordpress.com/2017/11/v2-723f59c4304a16ff25bdef1f26ad279a_r.jpg)\n\n![v2-82f3604a60fefa4e3293f9580eb5ff13_r.jpg](https://eveywongblog.files.wordpress.com/2017/11/v2-82f3604a60fefa4e3293f9580eb5ff13_r.jpg)","source":"_posts/xmind.md","raw":"---\ntitle: Ubuntu下安装Xmind\ndate: 2017-12-12 21:54:28\ntags: [ubuntu, xmind]\ncategories: Ubuntu\n---\n\n\n\n## 为什么要选择Xmind\n\n因为我需要一款思维导图软件，之前有个手机APP就叫思维导图觉得还可以，搜了一下并没有PC版然后搜到了xmind，感觉linux系统的电脑应用软件不是很多啊（或许是我见识短）anyway~我决定装xmind。\n\n## 我为什么要写出来\n\n选就选了呗用就用了呗写什么写啊，老子喜欢写就写你管我。哎呀其实是第一次装的时候踩坑了没装成功于是这次我决定写出来。\n\n## 安装\n\n首先先去官网<http://www.xmind.net/download/linux/> 把安装包下载下来。\n\n![选区_011.png](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_011.png)\n\n一般来说点击这个红色按钮download就可以了，我第一次也是这么做的，然而并没有成功至于为什么没成功具体原因我也不记得了，大概是有些依赖没装什么的吧。这次我学乖了，把页面拉到底部\n\n![选区_012](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_0121.png)\n\n点击Previous  Versions按钮跳转到另一个页面\n\n![选区_013.png](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_013.png)\n\n我是linux系统64位，当然选第四个啦，下载下来是一个deb包，运行以下代码即可安装成功~惊不惊喜意不意外！\n\n> $ sudo dpkg -i xmind-7.5-update1-linux_amd64.deb\n\n成功了当然要上图晒一下啦，有模板也有空白的随便选\n\n![选区_010.png](https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_010.png)\n\n## By the way\n\nXmind现在有个测试版本叫Xmind ZAN,感觉界面很炫酷啊，可以去官网申请测试资格，很伤心测试版本没有Linux版本!!!!宝宝不开心，只有Windows和Mac。但是还是放一些图满足一下吧\n\n![v2-73dde99ace6d08cf9c3fa3b42496016d_r.jpg](https://eveywongblog.files.wordpress.com/2017/11/v2-73dde99ace6d08cf9c3fa3b42496016d_r.jpg)\n\n![v2-225708c5c410d45633ee789aa22adfe1_r.jpg](https://eveywongblog.files.wordpress.com/2017/11/v2-225708c5c410d45633ee789aa22adfe1_r.jpg)\n\n![v2-723f59c4304a16ff25bdef1f26ad279a_r.jpg](https://eveywongblog.files.wordpress.com/2017/11/v2-723f59c4304a16ff25bdef1f26ad279a_r.jpg)\n\n![v2-82f3604a60fefa4e3293f9580eb5ff13_r.jpg](https://eveywongblog.files.wordpress.com/2017/11/v2-82f3604a60fefa4e3293f9580eb5ff13_r.jpg)","slug":"xmind","published":1,"updated":"2018-08-17T07:35:36.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gvz003xoaqo6lcxupew","content":"<h2 id=\"为什么要选择Xmind\"><a href=\"#为什么要选择Xmind\" class=\"headerlink\" title=\"为什么要选择Xmind\"></a>为什么要选择Xmind</h2><p>因为我需要一款思维导图软件，之前有个手机APP就叫思维导图觉得还可以，搜了一下并没有PC版然后搜到了xmind，感觉linux系统的电脑应用软件不是很多啊（或许是我见识短）anyway~我决定装xmind。</p>\n<h2 id=\"我为什么要写出来\"><a href=\"#我为什么要写出来\" class=\"headerlink\" title=\"我为什么要写出来\"></a>我为什么要写出来</h2><p>选就选了呗用就用了呗写什么写啊，老子喜欢写就写你管我。哎呀其实是第一次装的时候踩坑了没装成功于是这次我决定写出来。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>首先先去官网<a href=\"http://www.xmind.net/download/linux/\" target=\"_blank\" rel=\"noopener\">http://www.xmind.net/download/linux/</a> 把安装包下载下来。</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_011.png\" alt=\"选区_011.png\"></p>\n<p>一般来说点击这个红色按钮download就可以了，我第一次也是这么做的，然而并没有成功至于为什么没成功具体原因我也不记得了，大概是有些依赖没装什么的吧。这次我学乖了，把页面拉到底部</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_0121.png\" alt=\"选区_012\"></p>\n<p>点击Previous  Versions按钮跳转到另一个页面</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_013.png\" alt=\"选区_013.png\"></p>\n<p>我是linux系统64位，当然选第四个啦，下载下来是一个deb包，运行以下代码即可安装成功~惊不惊喜意不意外！</p>\n<blockquote>\n<p>$ sudo dpkg -i xmind-7.5-update1-linux_amd64.deb</p>\n</blockquote>\n<p>成功了当然要上图晒一下啦，有模板也有空白的随便选</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_010.png\" alt=\"选区_010.png\"></p>\n<h2 id=\"By-the-way\"><a href=\"#By-the-way\" class=\"headerlink\" title=\"By the way\"></a>By the way</h2><p>Xmind现在有个测试版本叫Xmind ZAN,感觉界面很炫酷啊，可以去官网申请测试资格，很伤心测试版本没有Linux版本!!!!宝宝不开心，只有Windows和Mac。但是还是放一些图满足一下吧</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/v2-73dde99ace6d08cf9c3fa3b42496016d_r.jpg\" alt=\"v2-73dde99ace6d08cf9c3fa3b42496016d_r.jpg\"></p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/v2-225708c5c410d45633ee789aa22adfe1_r.jpg\" alt=\"v2-225708c5c410d45633ee789aa22adfe1_r.jpg\"></p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/v2-723f59c4304a16ff25bdef1f26ad279a_r.jpg\" alt=\"v2-723f59c4304a16ff25bdef1f26ad279a_r.jpg\"></p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/v2-82f3604a60fefa4e3293f9580eb5ff13_r.jpg\" alt=\"v2-82f3604a60fefa4e3293f9580eb5ff13_r.jpg\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"为什么要选择Xmind\"><a href=\"#为什么要选择Xmind\" class=\"headerlink\" title=\"为什么要选择Xmind\"></a>为什么要选择Xmind</h2><p>因为我需要一款思维导图软件，之前有个手机APP就叫思维导图觉得还可以，搜了一下并没有PC版然后搜到了xmind，感觉linux系统的电脑应用软件不是很多啊（或许是我见识短）anyway~我决定装xmind。</p>\n<h2 id=\"我为什么要写出来\"><a href=\"#我为什么要写出来\" class=\"headerlink\" title=\"我为什么要写出来\"></a>我为什么要写出来</h2><p>选就选了呗用就用了呗写什么写啊，老子喜欢写就写你管我。哎呀其实是第一次装的时候踩坑了没装成功于是这次我决定写出来。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>首先先去官网<a href=\"http://www.xmind.net/download/linux/\" target=\"_blank\" rel=\"noopener\">http://www.xmind.net/download/linux/</a> 把安装包下载下来。</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_011.png\" alt=\"选区_011.png\"></p>\n<p>一般来说点击这个红色按钮download就可以了，我第一次也是这么做的，然而并没有成功至于为什么没成功具体原因我也不记得了，大概是有些依赖没装什么的吧。这次我学乖了，把页面拉到底部</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_0121.png\" alt=\"选区_012\"></p>\n<p>点击Previous  Versions按钮跳转到另一个页面</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_013.png\" alt=\"选区_013.png\"></p>\n<p>我是linux系统64位，当然选第四个啦，下载下来是一个deb包，运行以下代码即可安装成功~惊不惊喜意不意外！</p>\n<blockquote>\n<p>$ sudo dpkg -i xmind-7.5-update1-linux_amd64.deb</p>\n</blockquote>\n<p>成功了当然要上图晒一下啦，有模板也有空白的随便选</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/e98089e58cba_010.png\" alt=\"选区_010.png\"></p>\n<h2 id=\"By-the-way\"><a href=\"#By-the-way\" class=\"headerlink\" title=\"By the way\"></a>By the way</h2><p>Xmind现在有个测试版本叫Xmind ZAN,感觉界面很炫酷啊，可以去官网申请测试资格，很伤心测试版本没有Linux版本!!!!宝宝不开心，只有Windows和Mac。但是还是放一些图满足一下吧</p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/v2-73dde99ace6d08cf9c3fa3b42496016d_r.jpg\" alt=\"v2-73dde99ace6d08cf9c3fa3b42496016d_r.jpg\"></p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/v2-225708c5c410d45633ee789aa22adfe1_r.jpg\" alt=\"v2-225708c5c410d45633ee789aa22adfe1_r.jpg\"></p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/v2-723f59c4304a16ff25bdef1f26ad279a_r.jpg\" alt=\"v2-723f59c4304a16ff25bdef1f26ad279a_r.jpg\"></p>\n<p><img src=\"https://eveywongblog.files.wordpress.com/2017/11/v2-82f3604a60fefa4e3293f9580eb5ff13_r.jpg\" alt=\"v2-82f3604a60fefa4e3293f9580eb5ff13_r.jpg\"></p>\n"},{"title":"使用NAP安装包失败解决办法","date":"2018-06-28T10:40:27.000Z","_content":"\n#### 方法一：通过config命令\n\n```shell\n$ npm config set registry https://registry.npm.taobao.org\n$ npm info underscore \n```\n\n\n\n#### 方法二：命令行指定\n\n```shell\n$ npm --registry https://registry.npm.taobao.org info underscore\n```\n\n\n\n#### 方法三：编辑~/.npmrc(推荐)\n\n```shell\n$ registry = https://registry.npm.taobao.org\n```\n\n\n\n","source":"_posts/使用NAP安装包失败解决办法.md","raw":"---\ntitle: 使用NAP安装包失败解决办法\ndate: 2018-06-28 18:40:27\ntags: NAP\ncategories: NPM\n---\n\n#### 方法一：通过config命令\n\n```shell\n$ npm config set registry https://registry.npm.taobao.org\n$ npm info underscore \n```\n\n\n\n#### 方法二：命令行指定\n\n```shell\n$ npm --registry https://registry.npm.taobao.org info underscore\n```\n\n\n\n#### 方法三：编辑~/.npmrc(推荐)\n\n```shell\n$ registry = https://registry.npm.taobao.org\n```\n\n\n\n","slug":"使用NAP安装包失败解决办法","published":1,"updated":"2018-08-21T02:08:43.426Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gw00041oaqobcw2de7z","content":"<h4 id=\"方法一：通过config命令\"><a href=\"#方法一：通过config命令\" class=\"headerlink\" title=\"方法一：通过config命令\"></a>方法一：通过config命令</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm config set registry https://registry.npm.taobao.org</span><br><span class=\"line\"><span class=\"meta\">$</span> npm info underscore</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：命令行指定\"><a href=\"#方法二：命令行指定\" class=\"headerlink\" title=\"方法二：命令行指定\"></a>方法二：命令行指定</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm --registry https://registry.npm.taobao.org info underscore</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法三：编辑-npmrc-推荐\"><a href=\"#方法三：编辑-npmrc-推荐\" class=\"headerlink\" title=\"方法三：编辑~/.npmrc(推荐)\"></a>方法三：编辑~/.npmrc(推荐)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> registry = https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"方法一：通过config命令\"><a href=\"#方法一：通过config命令\" class=\"headerlink\" title=\"方法一：通过config命令\"></a>方法一：通过config命令</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm config set registry https://registry.npm.taobao.org</span><br><span class=\"line\"><span class=\"meta\">$</span> npm info underscore</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法二：命令行指定\"><a href=\"#方法二：命令行指定\" class=\"headerlink\" title=\"方法二：命令行指定\"></a>方法二：命令行指定</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm --registry https://registry.npm.taobao.org info underscore</span><br></pre></td></tr></table></figure>\n<h4 id=\"方法三：编辑-npmrc-推荐\"><a href=\"#方法三：编辑-npmrc-推荐\" class=\"headerlink\" title=\"方法三：编辑~/.npmrc(推荐)\"></a>方法三：编辑~/.npmrc(推荐)</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> registry = https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n"},{"title":"六种方法实现JavaScript数组去重","date":"2018-06-28T10:38:49.000Z","_content":"\n#### 方法1——Set\n\nES6提供了新的数据结构`Set`。它类似于数组，但是成员的值都是唯一的，没有重复的值。\n\n`Set`本身是一个构造函数，用来生成`Set`数据结构，`Array.from`方法可以将`Set`结构转为数组，在`Set`内部两个`NaN`是相等的，两个对象是总不相等的\n\n\n\n```js\nfunction unique(arr){\n  return Array.from(new Set(arr));\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null, NaN]\n```\n\n\n\n#### 方法2——forEach\n\n声明一个数组`newArr`，直接遍历待去重数组`arr`，然后把新数组中没有的元素推进去，在`forEach`中两个`NaN`不相等\n\n```js\nfunction unique(arr){\n  var newArr = [];\n  arr.forEach(function(item){\n    if(newArr.indexOf(item) === -1){\n      newArr.push(item);\n    }\n  });\n  return newArr;\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null, NaN, NaN]\n```\n\n\n\n\n\n#### 方法3——reduce\n\n在`reduce`中两个`NaN`不相等\n\n```js\nfunction unique(arr){\n  return arr.reduce(function(prev, next){\n    if(prev.indexOf(next) === -1){\n      prev.push(next);\n    }\n    return prev;\n  }, []);\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr));// [1, 2, 3, null, NaN, NaN]\n```\n\n\n\n```js\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nvar result = arr.sort().reduce(function(init, current){\n    if(init.length===0 || init[init.length-1]!==current){\n        init.push(current);\n    }\n    return init;\n}, []);\nconsole.log(result); //[1, 2, 3, NaN, NaN, null]\n```\n\n\n\n\n\n#### 方法4——indexOf\n\n判断数组元素的indexOf索引判断和元素本身的索引是否相同  如果相同，代表这是数组第一次出现的该元素值\n\n```js\nfunction unique(arr){\n  var newArr = [arr[0]];\n  var item;\n  for(var i = 1, len = arr.length; i < len; i++){\n    item = arr[i];\n    if(arr.indexOf(item) === i){\n      newArr.push(item);\n    }\n  }\n  return newArr;\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null]\n```\n\n\n\n\n\n#### 方法5——优化遍历\n\n对数组的每一个元素都进行判断（使用指针i），另一个指针从判断元素的下一位进行判断，移动这个指针（指针j下移），如果发现判断元素与指针指向的值相等，证明该判断元素不是数组中唯一的，那就继续往下判断（指针i下移，指针j回到i的下一位），直到j移到数组终点，证明判断元素（指针i指向的元素）是数组中唯一的并将该元素推入新数组\n\n```js\nfunction unique(arr){\n  var newArr = [];\n  for(var i = 0, len = arr.length; i < len; i++){\n    for(var j = i + 1; j < len; j++){\n      if(arr[i] === arr[j]){\n        j = ++i;\n      }\n    }\n    newArr.push(arr[i]);\n  }\n  return newArr;\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null, NaN, NaN]\n```\n\n\n\n\n\n#### 方法6——排序去邻\n\n首先调用数组的`sort`方法对数组的元素进行排序并返回数组，只需要判断数组元素值和上一个索引值不同就可以了\n\n```js\nfunction unique(arr){\n  var newArr = [arr[0]];\n  var item;\n  arr.sort();\n  for(var i = 1, len = arr.length; i < len; i++){\n    item = arr[i];\n    if(item !== arr[i - 1]){\n      newArr.push(item);\n    }\n  }\n  return newArr;\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, NaN, NaN, null]\n```\n\n","source":"_posts/六种方法实现JavaScript数组去重.md","raw":"---\ntitle: 六种方法实现JavaScript数组去重\ndate: 2018-06-28 18:38:49\ntags: [js, 数组]\ncategories: JS\n---\n\n#### 方法1——Set\n\nES6提供了新的数据结构`Set`。它类似于数组，但是成员的值都是唯一的，没有重复的值。\n\n`Set`本身是一个构造函数，用来生成`Set`数据结构，`Array.from`方法可以将`Set`结构转为数组，在`Set`内部两个`NaN`是相等的，两个对象是总不相等的\n\n\n\n```js\nfunction unique(arr){\n  return Array.from(new Set(arr));\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null, NaN]\n```\n\n\n\n#### 方法2——forEach\n\n声明一个数组`newArr`，直接遍历待去重数组`arr`，然后把新数组中没有的元素推进去，在`forEach`中两个`NaN`不相等\n\n```js\nfunction unique(arr){\n  var newArr = [];\n  arr.forEach(function(item){\n    if(newArr.indexOf(item) === -1){\n      newArr.push(item);\n    }\n  });\n  return newArr;\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null, NaN, NaN]\n```\n\n\n\n\n\n#### 方法3——reduce\n\n在`reduce`中两个`NaN`不相等\n\n```js\nfunction unique(arr){\n  return arr.reduce(function(prev, next){\n    if(prev.indexOf(next) === -1){\n      prev.push(next);\n    }\n    return prev;\n  }, []);\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr));// [1, 2, 3, null, NaN, NaN]\n```\n\n\n\n```js\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nvar result = arr.sort().reduce(function(init, current){\n    if(init.length===0 || init[init.length-1]!==current){\n        init.push(current);\n    }\n    return init;\n}, []);\nconsole.log(result); //[1, 2, 3, NaN, NaN, null]\n```\n\n\n\n\n\n#### 方法4——indexOf\n\n判断数组元素的indexOf索引判断和元素本身的索引是否相同  如果相同，代表这是数组第一次出现的该元素值\n\n```js\nfunction unique(arr){\n  var newArr = [arr[0]];\n  var item;\n  for(var i = 1, len = arr.length; i < len; i++){\n    item = arr[i];\n    if(arr.indexOf(item) === i){\n      newArr.push(item);\n    }\n  }\n  return newArr;\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null]\n```\n\n\n\n\n\n#### 方法5——优化遍历\n\n对数组的每一个元素都进行判断（使用指针i），另一个指针从判断元素的下一位进行判断，移动这个指针（指针j下移），如果发现判断元素与指针指向的值相等，证明该判断元素不是数组中唯一的，那就继续往下判断（指针i下移，指针j回到i的下一位），直到j移到数组终点，证明判断元素（指针i指向的元素）是数组中唯一的并将该元素推入新数组\n\n```js\nfunction unique(arr){\n  var newArr = [];\n  for(var i = 0, len = arr.length; i < len; i++){\n    for(var j = i + 1; j < len; j++){\n      if(arr[i] === arr[j]){\n        j = ++i;\n      }\n    }\n    newArr.push(arr[i]);\n  }\n  return newArr;\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null, NaN, NaN]\n```\n\n\n\n\n\n#### 方法6——排序去邻\n\n首先调用数组的`sort`方法对数组的元素进行排序并返回数组，只需要判断数组元素值和上一个索引值不同就可以了\n\n```js\nfunction unique(arr){\n  var newArr = [arr[0]];\n  var item;\n  arr.sort();\n  for(var i = 1, len = arr.length; i < len; i++){\n    item = arr[i];\n    if(item !== arr[i - 1]){\n      newArr.push(item);\n    }\n  }\n  return newArr;\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, NaN, NaN, null]\n```\n\n","slug":"六种方法实现JavaScript数组去重","published":1,"updated":"2018-08-17T07:35:36.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gw20044oaqohpbtij8z","content":"<h4 id=\"方法1——Set\"><a href=\"#方法1——Set\" class=\"headerlink\" title=\"方法1——Set\"></a>方法1——Set</h4><p>ES6提供了新的数据结构<code>Set</code>。它类似于数组，但是成员的值都是唯一的，没有重复的值。</p>\n<p><code>Set</code>本身是一个构造函数，用来生成<code>Set</code>数据结构，<code>Array.from</code>方法可以将<code>Set</code>结构转为数组，在<code>Set</code>内部两个<code>NaN</code>是相等的，两个对象是总不相等的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.from(<span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>(arr));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null, NaN]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法2——forEach\"><a href=\"#方法2——forEach\" class=\"headerlink\" title=\"方法2——forEach\"></a>方法2——forEach</h4><p>声明一个数组<code>newArr</code>，直接遍历待去重数组<code>arr</code>，然后把新数组中没有的元素推进去，在<code>forEach</code>中两个<code>NaN</code>不相等</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">  arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(newArr.indexOf(item) === <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">      newArr.push(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null, NaN, NaN]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法3——reduce\"><a href=\"#方法3——reduce\" class=\"headerlink\" title=\"方法3——reduce\"></a>方法3——reduce</h4><p>在<code>reduce</code>中两个<code>NaN</code>不相等</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev, next</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(prev.indexOf(next) === <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">      prev.push(next);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev;</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr));<span class=\"comment\">// [1, 2, 3, null, NaN, NaN]</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = arr.sort().reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">init, current</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(init.length===<span class=\"number\">0</span> || init[init.length<span class=\"number\">-1</span>]!==current)&#123;</span><br><span class=\"line\">        init.push(current);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> init;</span><br><span class=\"line\">&#125;, []);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result); <span class=\"comment\">//[1, 2, 3, NaN, NaN, null]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法4——indexOf\"><a href=\"#方法4——indexOf\" class=\"headerlink\" title=\"方法4——indexOf\"></a>方法4——indexOf</h4><p>判断数组元素的indexOf索引判断和元素本身的索引是否相同  如果相同，代表这是数组第一次出现的该元素值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [arr[<span class=\"number\">0</span>]];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> item;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>, len = arr.length; i &lt; len; i++)&#123;</span><br><span class=\"line\">    item = arr[i];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr.indexOf(item) === i)&#123;</span><br><span class=\"line\">      newArr.push(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法5——优化遍历\"><a href=\"#方法5——优化遍历\" class=\"headerlink\" title=\"方法5——优化遍历\"></a>方法5——优化遍历</h4><p>对数组的每一个元素都进行判断（使用指针i），另一个指针从判断元素的下一位进行判断，移动这个指针（指针j下移），如果发现判断元素与指针指向的值相等，证明该判断元素不是数组中唯一的，那就继续往下判断（指针i下移，指针j回到i的下一位），直到j移到数组终点，证明判断元素（指针i指向的元素）是数组中唯一的并将该元素推入新数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = arr.length; i &lt; len; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j = i + <span class=\"number\">1</span>; j &lt; len; j++)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(arr[i] === arr[j])&#123;</span><br><span class=\"line\">        j = ++i;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    newArr.push(arr[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null, NaN, NaN]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法6——排序去邻\"><a href=\"#方法6——排序去邻\" class=\"headerlink\" title=\"方法6——排序去邻\"></a>方法6——排序去邻</h4><p>首先调用数组的<code>sort</code>方法对数组的元素进行排序并返回数组，只需要判断数组元素值和上一个索引值不同就可以了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [arr[<span class=\"number\">0</span>]];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> item;</span><br><span class=\"line\">  arr.sort();</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>, len = arr.length; i &lt; len; i++)&#123;</span><br><span class=\"line\">    item = arr[i];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(item !== arr[i - <span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">      newArr.push(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, NaN, NaN, null]</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"方法1——Set\"><a href=\"#方法1——Set\" class=\"headerlink\" title=\"方法1——Set\"></a>方法1——Set</h4><p>ES6提供了新的数据结构<code>Set</code>。它类似于数组，但是成员的值都是唯一的，没有重复的值。</p>\n<p><code>Set</code>本身是一个构造函数，用来生成<code>Set</code>数据结构，<code>Array.from</code>方法可以将<code>Set</code>结构转为数组，在<code>Set</code>内部两个<code>NaN</code>是相等的，两个对象是总不相等的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.from(<span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>(arr));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null, NaN]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法2——forEach\"><a href=\"#方法2——forEach\" class=\"headerlink\" title=\"方法2——forEach\"></a>方法2——forEach</h4><p>声明一个数组<code>newArr</code>，直接遍历待去重数组<code>arr</code>，然后把新数组中没有的元素推进去，在<code>forEach</code>中两个<code>NaN</code>不相等</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">  arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(newArr.indexOf(item) === <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">      newArr.push(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null, NaN, NaN]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法3——reduce\"><a href=\"#方法3——reduce\" class=\"headerlink\" title=\"方法3——reduce\"></a>方法3——reduce</h4><p>在<code>reduce</code>中两个<code>NaN</code>不相等</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">prev, next</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(prev.indexOf(next) === <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">      prev.push(next);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev;</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr));<span class=\"comment\">// [1, 2, 3, null, NaN, NaN]</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = arr.sort().reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">init, current</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(init.length===<span class=\"number\">0</span> || init[init.length<span class=\"number\">-1</span>]!==current)&#123;</span><br><span class=\"line\">        init.push(current);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> init;</span><br><span class=\"line\">&#125;, []);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result); <span class=\"comment\">//[1, 2, 3, NaN, NaN, null]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法4——indexOf\"><a href=\"#方法4——indexOf\" class=\"headerlink\" title=\"方法4——indexOf\"></a>方法4——indexOf</h4><p>判断数组元素的indexOf索引判断和元素本身的索引是否相同  如果相同，代表这是数组第一次出现的该元素值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [arr[<span class=\"number\">0</span>]];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> item;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>, len = arr.length; i &lt; len; i++)&#123;</span><br><span class=\"line\">    item = arr[i];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(arr.indexOf(item) === i)&#123;</span><br><span class=\"line\">      newArr.push(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法5——优化遍历\"><a href=\"#方法5——优化遍历\" class=\"headerlink\" title=\"方法5——优化遍历\"></a>方法5——优化遍历</h4><p>对数组的每一个元素都进行判断（使用指针i），另一个指针从判断元素的下一位进行判断，移动这个指针（指针j下移），如果发现判断元素与指针指向的值相等，证明该判断元素不是数组中唯一的，那就继续往下判断（指针i下移，指针j回到i的下一位），直到j移到数组终点，证明判断元素（指针i指向的元素）是数组中唯一的并将该元素推入新数组</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>, len = arr.length; i &lt; len; i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> j = i + <span class=\"number\">1</span>; j &lt; len; j++)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(arr[i] === arr[j])&#123;</span><br><span class=\"line\">        j = ++i;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    newArr.push(arr[i]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null, NaN, NaN]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法6——排序去邻\"><a href=\"#方法6——排序去邻\" class=\"headerlink\" title=\"方法6——排序去邻\"></a>方法6——排序去邻</h4><p>首先调用数组的<code>sort</code>方法对数组的元素进行排序并返回数组，只需要判断数组元素值和上一个索引值不同就可以了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [arr[<span class=\"number\">0</span>]];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> item;</span><br><span class=\"line\">  arr.sort();</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>, len = arr.length; i &lt; len; i++)&#123;</span><br><span class=\"line\">    item = arr[i];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(item !== arr[i - <span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">      newArr.push(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, NaN, NaN, null]</span></span><br></pre></td></tr></table></figure>\n"},{"title":"前端开发工程师面试问题","date":"2018-06-28T10:46:24.000Z","_content":"\n## JS问题\n\n\n\n### JavaScript原型、原型链 ? 有什么特点？\n\n每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时，如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，于是就这样一直找下去，也就是我们平时所说的原型链的概念。\n\n###### 关系：\n\n`instance.constructor.prototype = instance._proto`_\n\n###### 特点：\n\n JavaScript对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。\n\n### javascript作用链域?\n\n全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，直至全局函数，这种组织形式就是作用域链。\n\n### eval是做什么的？\n\n 它的功能是把对应的字符串解析成JS代码并运行；应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。由JSON字符串转换为JSON对象的时候可以用eval，var obj =eval('('+ str +')');\n\n### 什么是闭包（closure），为什么要用它？\n\n闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量,利用闭包可以突破作用链域，将函数内部的变量和方法传递到外部。\n\n###### 闭包的特性：\n\n1. 函数内再嵌套函数\n2. 内部函数可以引用外层的参数和变量\n3. 参数和变量不会被垃圾回收机制回收\n\n### js延迟加载的方式有哪些?\n\ndefer和async、动态创建DOM方式（用得最多）、按需异步载入js\n\n### AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？\n\nAsynchronous Module Definition，异步模块定义，所有的模块将被异步加载，模块加载不影响后面语句运行。所有依赖某些模块的语句均放置在回调函数中。\n\n###### 区别：\n\n1. 对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible.\n2. CMD 推崇依赖就近，AMD 推崇依赖前置。\n\n### es6 Object.is() 与原来的比较操作符“ ===”、“ ==”的区别？\n\n两等号判等，会在比较时进行类型转换；三等号判等(判断严格)，比较时不进行隐式类型转换,（类型不同则会返回false）；Object.is 在三等号判等的基础上特别处理了 NaN 、-0 和 +0 ，保证 -0 和 +0 不再相同，但 Object.is(NaN, NaN) 会返回 true，Object.is 应被认为有其特殊的用途，而不能用它认为它比其它的相等对比更宽松或严格。\n\n### js中有哪些实现异步的方式\n\n1. 回调函数\n2. 事件监听\n3. Promise\n\n\n\n\n\n## CSS问题\n\n### 元素竖向的百分比设定是相对于容器的高度吗？\n\n 相对于容器的宽度\n\n### margin和padding分别适合什么场景使用？\n\nmargin是用来隔开元素与元素的间距；padding是用来隔开元素与内容的间隔。\n\nmargin用于布局分开元素使元素与元素互不相干；\n\npadding用于元素与内容之间的间隔，让内容（文字）与（包裹）元素之间有一段\n\n### CSS3有哪些新特性？\n\n1. 新增各种CSS选择器（: not(.input)：所有 class 不是“input”的节点）\n2. 圆角（border-radius:8px）\n3. 多列布局（multi-column layout）\n4. 阴影和反射（Shadow\\Reflect）\n   . 文字特效\t（text-shadow、）\n   . 文字渲染\t（Text-decoration）\n   . 线性渐变\t（gradient）\n5. 旋转（transform）\n6. 缩放,定位,倾斜,动画,多背景\n\n例如:transform:\\scale(0.85,0.90)\\ translate(0px,-30px)\\ skew(-9deg,0deg)\\Animation:\n\n\n\n\n\n## HTML问题\n\n### 简述一下你对HTML语义化的理解？\n\n   用正确的标签做正确的事情。\n\n   html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;\n\n   即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;\n\n   搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;\n\n   使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。\n\n### iframe有那些缺点？\n\n1. iframe会阻塞主页面的Onload事件；\n2. 搜索引擎的检索程序无法解读这种页面，不利于SEO;\n3. iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。\n4. 使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript\n5. 动态给iframe添加src属性值，这样可以绕开以上两个问题。","source":"_posts/前端开发工程师面试问题.md","raw":"---\ntitle: 前端开发工程师面试问题\ndate: 2018-06-28 18:46:24\ntags: [js, html, css, 面试]\ncategories: 面试题\n---\n\n## JS问题\n\n\n\n### JavaScript原型、原型链 ? 有什么特点？\n\n每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时，如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，于是就这样一直找下去，也就是我们平时所说的原型链的概念。\n\n###### 关系：\n\n`instance.constructor.prototype = instance._proto`_\n\n###### 特点：\n\n JavaScript对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。\n\n### javascript作用链域?\n\n全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，直至全局函数，这种组织形式就是作用域链。\n\n### eval是做什么的？\n\n 它的功能是把对应的字符串解析成JS代码并运行；应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。由JSON字符串转换为JSON对象的时候可以用eval，var obj =eval('('+ str +')');\n\n### 什么是闭包（closure），为什么要用它？\n\n闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量,利用闭包可以突破作用链域，将函数内部的变量和方法传递到外部。\n\n###### 闭包的特性：\n\n1. 函数内再嵌套函数\n2. 内部函数可以引用外层的参数和变量\n3. 参数和变量不会被垃圾回收机制回收\n\n### js延迟加载的方式有哪些?\n\ndefer和async、动态创建DOM方式（用得最多）、按需异步载入js\n\n### AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？\n\nAsynchronous Module Definition，异步模块定义，所有的模块将被异步加载，模块加载不影响后面语句运行。所有依赖某些模块的语句均放置在回调函数中。\n\n###### 区别：\n\n1. 对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible.\n2. CMD 推崇依赖就近，AMD 推崇依赖前置。\n\n### es6 Object.is() 与原来的比较操作符“ ===”、“ ==”的区别？\n\n两等号判等，会在比较时进行类型转换；三等号判等(判断严格)，比较时不进行隐式类型转换,（类型不同则会返回false）；Object.is 在三等号判等的基础上特别处理了 NaN 、-0 和 +0 ，保证 -0 和 +0 不再相同，但 Object.is(NaN, NaN) 会返回 true，Object.is 应被认为有其特殊的用途，而不能用它认为它比其它的相等对比更宽松或严格。\n\n### js中有哪些实现异步的方式\n\n1. 回调函数\n2. 事件监听\n3. Promise\n\n\n\n\n\n## CSS问题\n\n### 元素竖向的百分比设定是相对于容器的高度吗？\n\n 相对于容器的宽度\n\n### margin和padding分别适合什么场景使用？\n\nmargin是用来隔开元素与元素的间距；padding是用来隔开元素与内容的间隔。\n\nmargin用于布局分开元素使元素与元素互不相干；\n\npadding用于元素与内容之间的间隔，让内容（文字）与（包裹）元素之间有一段\n\n### CSS3有哪些新特性？\n\n1. 新增各种CSS选择器（: not(.input)：所有 class 不是“input”的节点）\n2. 圆角（border-radius:8px）\n3. 多列布局（multi-column layout）\n4. 阴影和反射（Shadow\\Reflect）\n   . 文字特效\t（text-shadow、）\n   . 文字渲染\t（Text-decoration）\n   . 线性渐变\t（gradient）\n5. 旋转（transform）\n6. 缩放,定位,倾斜,动画,多背景\n\n例如:transform:\\scale(0.85,0.90)\\ translate(0px,-30px)\\ skew(-9deg,0deg)\\Animation:\n\n\n\n\n\n## HTML问题\n\n### 简述一下你对HTML语义化的理解？\n\n   用正确的标签做正确的事情。\n\n   html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;\n\n   即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;\n\n   搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;\n\n   使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。\n\n### iframe有那些缺点？\n\n1. iframe会阻塞主页面的Onload事件；\n2. 搜索引擎的检索程序无法解读这种页面，不利于SEO;\n3. iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。\n4. 使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript\n5. 动态给iframe添加src属性值，这样可以绕开以上两个问题。","slug":"前端开发工程师面试问题","published":1,"updated":"2018-08-17T07:35:36.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gw20047oaqoda7r6ybn","content":"<h2 id=\"JS问题\"><a href=\"#JS问题\" class=\"headerlink\" title=\"JS问题\"></a>JS问题</h2><h3 id=\"JavaScript原型、原型链-有什么特点？\"><a href=\"#JavaScript原型、原型链-有什么特点？\" class=\"headerlink\" title=\"JavaScript原型、原型链 ? 有什么特点？\"></a>JavaScript原型、原型链 ? 有什么特点？</h3><p>每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时，如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，于是就这样一直找下去，也就是我们平时所说的原型链的概念。</p>\n<h6 id=\"关系：\"><a href=\"#关系：\" class=\"headerlink\" title=\"关系：\"></a>关系：</h6><p><code>instance.constructor.prototype = instance._proto</code>_</p>\n<h6 id=\"特点：\"><a href=\"#特点：\" class=\"headerlink\" title=\"特点：\"></a>特点：</h6><p> JavaScript对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。</p>\n<h3 id=\"javascript作用链域\"><a href=\"#javascript作用链域\" class=\"headerlink\" title=\"javascript作用链域?\"></a>javascript作用链域?</h3><p>全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，直至全局函数，这种组织形式就是作用域链。</p>\n<h3 id=\"eval是做什么的？\"><a href=\"#eval是做什么的？\" class=\"headerlink\" title=\"eval是做什么的？\"></a>eval是做什么的？</h3><p> 它的功能是把对应的字符串解析成JS代码并运行；应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。由JSON字符串转换为JSON对象的时候可以用eval，var obj =eval(‘(‘+ str +’)’);</p>\n<h3 id=\"什么是闭包（closure），为什么要用它？\"><a href=\"#什么是闭包（closure），为什么要用它？\" class=\"headerlink\" title=\"什么是闭包（closure），为什么要用它？\"></a>什么是闭包（closure），为什么要用它？</h3><p>闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量,利用闭包可以突破作用链域，将函数内部的变量和方法传递到外部。</p>\n<h6 id=\"闭包的特性：\"><a href=\"#闭包的特性：\" class=\"headerlink\" title=\"闭包的特性：\"></a>闭包的特性：</h6><ol>\n<li>函数内再嵌套函数</li>\n<li>内部函数可以引用外层的参数和变量</li>\n<li>参数和变量不会被垃圾回收机制回收</li>\n</ol>\n<h3 id=\"js延迟加载的方式有哪些\"><a href=\"#js延迟加载的方式有哪些\" class=\"headerlink\" title=\"js延迟加载的方式有哪些?\"></a>js延迟加载的方式有哪些?</h3><p>defer和async、动态创建DOM方式（用得最多）、按需异步载入js</p>\n<h3 id=\"AMD（Modules-Asynchronous-Definition）、CMD（Common-Module-Definition）规范区别？\"><a href=\"#AMD（Modules-Asynchronous-Definition）、CMD（Common-Module-Definition）规范区别？\" class=\"headerlink\" title=\"AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？\"></a>AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？</h3><p>Asynchronous Module Definition，异步模块定义，所有的模块将被异步加载，模块加载不影响后面语句运行。所有依赖某些模块的语句均放置在回调函数中。</p>\n<h6 id=\"区别：\"><a href=\"#区别：\" class=\"headerlink\" title=\"区别：\"></a>区别：</h6><ol>\n<li>对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible.</li>\n<li>CMD 推崇依赖就近，AMD 推崇依赖前置。</li>\n</ol>\n<h3 id=\"es6-Object-is-与原来的比较操作符“-”、“-”的区别？\"><a href=\"#es6-Object-is-与原来的比较操作符“-”、“-”的区别？\" class=\"headerlink\" title=\"es6 Object.is() 与原来的比较操作符“ ===”、“ ==”的区别？\"></a>es6 Object.is() 与原来的比较操作符“ ===”、“ ==”的区别？</h3><p>两等号判等，会在比较时进行类型转换；三等号判等(判断严格)，比较时不进行隐式类型转换,（类型不同则会返回false）；Object.is 在三等号判等的基础上特别处理了 NaN 、-0 和 +0 ，保证 -0 和 +0 不再相同，但 Object.is(NaN, NaN) 会返回 true，Object.is 应被认为有其特殊的用途，而不能用它认为它比其它的相等对比更宽松或严格。</p>\n<h3 id=\"js中有哪些实现异步的方式\"><a href=\"#js中有哪些实现异步的方式\" class=\"headerlink\" title=\"js中有哪些实现异步的方式\"></a>js中有哪些实现异步的方式</h3><ol>\n<li>回调函数</li>\n<li>事件监听</li>\n<li>Promise</li>\n</ol>\n<h2 id=\"CSS问题\"><a href=\"#CSS问题\" class=\"headerlink\" title=\"CSS问题\"></a>CSS问题</h2><h3 id=\"元素竖向的百分比设定是相对于容器的高度吗？\"><a href=\"#元素竖向的百分比设定是相对于容器的高度吗？\" class=\"headerlink\" title=\"元素竖向的百分比设定是相对于容器的高度吗？\"></a>元素竖向的百分比设定是相对于容器的高度吗？</h3><p> 相对于容器的宽度</p>\n<h3 id=\"margin和padding分别适合什么场景使用？\"><a href=\"#margin和padding分别适合什么场景使用？\" class=\"headerlink\" title=\"margin和padding分别适合什么场景使用？\"></a>margin和padding分别适合什么场景使用？</h3><p>margin是用来隔开元素与元素的间距；padding是用来隔开元素与内容的间隔。</p>\n<p>margin用于布局分开元素使元素与元素互不相干；</p>\n<p>padding用于元素与内容之间的间隔，让内容（文字）与（包裹）元素之间有一段</p>\n<h3 id=\"CSS3有哪些新特性？\"><a href=\"#CSS3有哪些新特性？\" class=\"headerlink\" title=\"CSS3有哪些新特性？\"></a>CSS3有哪些新特性？</h3><ol>\n<li>新增各种CSS选择器（: not(.input)：所有 class 不是“input”的节点）</li>\n<li>圆角（border-radius:8px）</li>\n<li>多列布局（multi-column layout）</li>\n<li>阴影和反射（Shadow\\Reflect）<br>. 文字特效    （text-shadow、）<br>. 文字渲染    （Text-decoration）<br>. 线性渐变    （gradient）</li>\n<li>旋转（transform）</li>\n<li>缩放,定位,倾斜,动画,多背景</li>\n</ol>\n<p>例如:transform:\\scale(0.85,0.90)\\ translate(0px,-30px)\\ skew(-9deg,0deg)\\Animation:</p>\n<h2 id=\"HTML问题\"><a href=\"#HTML问题\" class=\"headerlink\" title=\"HTML问题\"></a>HTML问题</h2><h3 id=\"简述一下你对HTML语义化的理解？\"><a href=\"#简述一下你对HTML语义化的理解？\" class=\"headerlink\" title=\"简述一下你对HTML语义化的理解？\"></a>简述一下你对HTML语义化的理解？</h3><p>   用正确的标签做正确的事情。</p>\n<p>   html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;</p>\n<p>   即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;</p>\n<p>   搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;</p>\n<p>   使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。</p>\n<h3 id=\"iframe有那些缺点？\"><a href=\"#iframe有那些缺点？\" class=\"headerlink\" title=\"iframe有那些缺点？\"></a>iframe有那些缺点？</h3><ol>\n<li>iframe会阻塞主页面的Onload事件；</li>\n<li>搜索引擎的检索程序无法解读这种页面，不利于SEO;</li>\n<li>iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。</li>\n<li>使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript</li>\n<li>动态给iframe添加src属性值，这样可以绕开以上两个问题。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"JS问题\"><a href=\"#JS问题\" class=\"headerlink\" title=\"JS问题\"></a>JS问题</h2><h3 id=\"JavaScript原型、原型链-有什么特点？\"><a href=\"#JavaScript原型、原型链-有什么特点？\" class=\"headerlink\" title=\"JavaScript原型、原型链 ? 有什么特点？\"></a>JavaScript原型、原型链 ? 有什么特点？</h3><p>每个对象都会在其内部初始化一个属性，就是prototype(原型)，当我们访问一个对象的属性时，如果这个对象内部不存在这个属性，那么他就会去prototype里找这个属性，这个prototype又会有自己的prototype，于是就这样一直找下去，也就是我们平时所说的原型链的概念。</p>\n<h6 id=\"关系：\"><a href=\"#关系：\" class=\"headerlink\" title=\"关系：\"></a>关系：</h6><p><code>instance.constructor.prototype = instance._proto</code>_</p>\n<h6 id=\"特点：\"><a href=\"#特点：\" class=\"headerlink\" title=\"特点：\"></a>特点：</h6><p> JavaScript对象是通过引用来传递的，我们创建的每个新对象实体中并没有一份属于自己的原型副本。当我们修改原型时，与之相关的对象也会继承这一改变。</p>\n<h3 id=\"javascript作用链域\"><a href=\"#javascript作用链域\" class=\"headerlink\" title=\"javascript作用链域?\"></a>javascript作用链域?</h3><p>全局函数无法查看局部函数的内部细节，但局部函数可以查看其上层的函数细节，直至全局细节。当需要从局部函数查找某一属性或方法时，如果当前作用域没有找到，就会上溯到上层作用域查找，直至全局函数，这种组织形式就是作用域链。</p>\n<h3 id=\"eval是做什么的？\"><a href=\"#eval是做什么的？\" class=\"headerlink\" title=\"eval是做什么的？\"></a>eval是做什么的？</h3><p> 它的功能是把对应的字符串解析成JS代码并运行；应该避免使用eval，不安全，非常耗性能（2次，一次解析成js语句，一次执行）。由JSON字符串转换为JSON对象的时候可以用eval，var obj =eval(‘(‘+ str +’)’);</p>\n<h3 id=\"什么是闭包（closure），为什么要用它？\"><a href=\"#什么是闭包（closure），为什么要用它？\" class=\"headerlink\" title=\"什么是闭包（closure），为什么要用它？\"></a>什么是闭包（closure），为什么要用它？</h3><p>闭包是指有权访问另一个函数作用域中变量的函数，创建闭包的最常见的方式就是在一个函数内创建另一个函数，通过另一个函数访问这个函数的局部变量,利用闭包可以突破作用链域，将函数内部的变量和方法传递到外部。</p>\n<h6 id=\"闭包的特性：\"><a href=\"#闭包的特性：\" class=\"headerlink\" title=\"闭包的特性：\"></a>闭包的特性：</h6><ol>\n<li>函数内再嵌套函数</li>\n<li>内部函数可以引用外层的参数和变量</li>\n<li>参数和变量不会被垃圾回收机制回收</li>\n</ol>\n<h3 id=\"js延迟加载的方式有哪些\"><a href=\"#js延迟加载的方式有哪些\" class=\"headerlink\" title=\"js延迟加载的方式有哪些?\"></a>js延迟加载的方式有哪些?</h3><p>defer和async、动态创建DOM方式（用得最多）、按需异步载入js</p>\n<h3 id=\"AMD（Modules-Asynchronous-Definition）、CMD（Common-Module-Definition）规范区别？\"><a href=\"#AMD（Modules-Asynchronous-Definition）、CMD（Common-Module-Definition）规范区别？\" class=\"headerlink\" title=\"AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？\"></a>AMD（Modules/Asynchronous-Definition）、CMD（Common Module Definition）规范区别？</h3><p>Asynchronous Module Definition，异步模块定义，所有的模块将被异步加载，模块加载不影响后面语句运行。所有依赖某些模块的语句均放置在回调函数中。</p>\n<h6 id=\"区别：\"><a href=\"#区别：\" class=\"headerlink\" title=\"区别：\"></a>区别：</h6><ol>\n<li>对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible.</li>\n<li>CMD 推崇依赖就近，AMD 推崇依赖前置。</li>\n</ol>\n<h3 id=\"es6-Object-is-与原来的比较操作符“-”、“-”的区别？\"><a href=\"#es6-Object-is-与原来的比较操作符“-”、“-”的区别？\" class=\"headerlink\" title=\"es6 Object.is() 与原来的比较操作符“ ===”、“ ==”的区别？\"></a>es6 Object.is() 与原来的比较操作符“ ===”、“ ==”的区别？</h3><p>两等号判等，会在比较时进行类型转换；三等号判等(判断严格)，比较时不进行隐式类型转换,（类型不同则会返回false）；Object.is 在三等号判等的基础上特别处理了 NaN 、-0 和 +0 ，保证 -0 和 +0 不再相同，但 Object.is(NaN, NaN) 会返回 true，Object.is 应被认为有其特殊的用途，而不能用它认为它比其它的相等对比更宽松或严格。</p>\n<h3 id=\"js中有哪些实现异步的方式\"><a href=\"#js中有哪些实现异步的方式\" class=\"headerlink\" title=\"js中有哪些实现异步的方式\"></a>js中有哪些实现异步的方式</h3><ol>\n<li>回调函数</li>\n<li>事件监听</li>\n<li>Promise</li>\n</ol>\n<h2 id=\"CSS问题\"><a href=\"#CSS问题\" class=\"headerlink\" title=\"CSS问题\"></a>CSS问题</h2><h3 id=\"元素竖向的百分比设定是相对于容器的高度吗？\"><a href=\"#元素竖向的百分比设定是相对于容器的高度吗？\" class=\"headerlink\" title=\"元素竖向的百分比设定是相对于容器的高度吗？\"></a>元素竖向的百分比设定是相对于容器的高度吗？</h3><p> 相对于容器的宽度</p>\n<h3 id=\"margin和padding分别适合什么场景使用？\"><a href=\"#margin和padding分别适合什么场景使用？\" class=\"headerlink\" title=\"margin和padding分别适合什么场景使用？\"></a>margin和padding分别适合什么场景使用？</h3><p>margin是用来隔开元素与元素的间距；padding是用来隔开元素与内容的间隔。</p>\n<p>margin用于布局分开元素使元素与元素互不相干；</p>\n<p>padding用于元素与内容之间的间隔，让内容（文字）与（包裹）元素之间有一段</p>\n<h3 id=\"CSS3有哪些新特性？\"><a href=\"#CSS3有哪些新特性？\" class=\"headerlink\" title=\"CSS3有哪些新特性？\"></a>CSS3有哪些新特性？</h3><ol>\n<li>新增各种CSS选择器（: not(.input)：所有 class 不是“input”的节点）</li>\n<li>圆角（border-radius:8px）</li>\n<li>多列布局（multi-column layout）</li>\n<li>阴影和反射（Shadow\\Reflect）<br>. 文字特效    （text-shadow、）<br>. 文字渲染    （Text-decoration）<br>. 线性渐变    （gradient）</li>\n<li>旋转（transform）</li>\n<li>缩放,定位,倾斜,动画,多背景</li>\n</ol>\n<p>例如:transform:\\scale(0.85,0.90)\\ translate(0px,-30px)\\ skew(-9deg,0deg)\\Animation:</p>\n<h2 id=\"HTML问题\"><a href=\"#HTML问题\" class=\"headerlink\" title=\"HTML问题\"></a>HTML问题</h2><h3 id=\"简述一下你对HTML语义化的理解？\"><a href=\"#简述一下你对HTML语义化的理解？\" class=\"headerlink\" title=\"简述一下你对HTML语义化的理解？\"></a>简述一下你对HTML语义化的理解？</h3><p>   用正确的标签做正确的事情。</p>\n<p>   html语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析;</p>\n<p>   即使在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的;</p>\n<p>   搜索引擎的爬虫也依赖于HTML标记来确定上下文和各个关键字的权重，利于SEO;</p>\n<p>   使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解。</p>\n<h3 id=\"iframe有那些缺点？\"><a href=\"#iframe有那些缺点？\" class=\"headerlink\" title=\"iframe有那些缺点？\"></a>iframe有那些缺点？</h3><ol>\n<li>iframe会阻塞主页面的Onload事件；</li>\n<li>搜索引擎的检索程序无法解读这种页面，不利于SEO;</li>\n<li>iframe和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。</li>\n<li>使用iframe之前需要考虑这两个缺点。如果需要使用iframe，最好是通过javascript</li>\n<li>动态给iframe添加src属性值，这样可以绕开以上两个问题。</li>\n</ol>\n"},{"title":"前端开发工程师笔试题","date":"2018-08-21T02:52:46.000Z","_content":"\n\n\n## 1.标签上title和alt属性的区别是什么？\n\n- 含义不同\n\nalt属性在无法加载显示图片时代替文字，title属性则是为设置该属性的元素提供建议性的信息\n\n- 在浏览器中表现不同\n\n在FireFox和IE8中，当鼠标经过图片时title的值会显示，而alt的值不会显示，只有在IE6中，当鼠标经过图片时title和alt的值都会显示。\n\n- 网站SEO优化不同\n\n搜索引擎对图片意思的判断主要靠alt属性，所以在图片alt属性中以简要文字说明，同时包含关键词，也是页面优化的一部分。\n\n\n\n## 2.relative、absolute、static、fixed的作用，相对谁定位？\n\n- static是默认值，任意`position:static`的元素不会被特殊的定位。\n- fixed是固定定位，元素会相对于`视窗（body）`来定位，这意味着即便页面滚动，它还是会停留在相同的位置，`top`、`right`、`bottom`、`left`属性都可以用。\n- relative是相对定位，相对于`父元素`来定位，不脱离文档流\n- absolute是绝对定位，相对于`最近的positioned祖先元素`定位，如果绝对定位的元素没有positioned祖先元素则它相对于`body`元素定位，并且它会随着页面滚动而移动。\n\n> `positioned`元素是指position值不是static的元素\n\n\n\n## 3.请画出css盒模型。\n\n![](/home/evey/%E5%9B%BE%E7%89%87/2018-06-13%2018-44-36%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n## 4.请写一个数组去重的方法。\n\n#### 方法1——Set\n\nES6提供了新的数据结构`Set`。它类似于数组，但是成员的值都是唯一的，没有重复的值。\n\n`Set`本身是一个构造函数，用来生成`Set`数据结构，`Array.from`方法可以将`Set`结构转为数组\n\n> 在`Set`内部两个`NaN`是相等的，两个对象是总不相等的\n\n\n\n```js\nfunction unique(arr){\n  return Array.from(new Set(arr));\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null, NaN]\n```\n\n\n\n#### 方法2——forEach\n\n在`forEach`中两个`NaN`不相等\n\n```js\nfunction unique(arr){\n  var newArr = [];\n  arr.forEach(function(item){\n    if(newArr.indexOf(item) === -1){\n      newArr.push(item);\n    }\n  });\n  return newArr;\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null, NaN, NaN]\n```\n\n\n\n\n\n\n\n\n\n## 5.请写一个方法，将URL中的查询字符串解析成一个字典对象。\n\n###### 代码\n\n```js\nfunction getQueryObject(url) {\n\n    url = url == null ? window.location.href : url;\n    var search = url.substring(url.lastIndexOf(\"?\") + 1);\n    var obj = {};\n    var reg = /([^?&=]+)=([^?&=]*)/g;\n    search.replace(reg, function (rs, $1, $2) {\n        var name = decodeURIComponent($1);\n        var val = decodeURIComponent($2);               \n        val = String(val);\n        obj[name] = val;\n        return rs;\n    });\n    return obj;\n}\nvar url = \"http://www.cnblogs.com/leee/p/4456840.html?name=1&dd=ddd**\";\nconsole.log(getQueryObject(url));\n```\n\n\n\n###### 结果\n\n```js\n[object Object] {\n  dd: \"ddd**\",\n  name: \"1\"\n}\n```\n\n\n\n## 6.一个页面从输入URL到页面加载完的过程中都发生了什么事情？\n\n1. 用户输入URL地址\n2. 浏览器解析URL解析出主机名\n3. 浏览器将主机名换成服务器IP地址（浏览器先查找本地DNS缓存列表，没有的话再向浏览器默认的DNS服务器发送查询请求，同时缓存）\n4. 浏览器将端口号从URL中解析出来\n5. 浏览器建立一条与目标Web服务器的TCP连接（三次握手）\n6. 浏览器向服务器发送一条HTTP请求报文\n7. 服务器向浏览器返回一条HTTP响应报文\n8. 关闭连接，浏览器解析文档\n9. 如果文档中有资源，重复6、7、8直至资源全部加载完毕\n\n\n\n## 7.请简述页面渲染的过程。\n\n1. 处理HTML标记并构建DOM树\n2. 处理CSS标记并构建CSS DOM树\n3. 将DOM与CSS DOM合并成一个渲染树\n4. 根据渲染来布局，以计算每个节点的几何信息\n5. 将各个节点绘制到屏幕上\n\n\n\n\n\n## 9.判断一个字符串中出现次数最多的 字符，并统计这个次数。\n\n```js\nvar str = \"abcabcaaa\";\nmaxnum(str);\nfunction maxnum(str){\n    var json = {};\n    for(var i=0;i<str.length;i++){\n        if(!json[str.charAt(i)]){\n            json[str.charAt(i)] = 1;\n        }else{\n            json[str.charAt(i)]++;\n        }\n        console.log(json);\n    }\n    var max = 0;\n    var Index = '';\n    for(var i in json){\n        if(json[i]>max){\n            max = json[i];\n            Index = i;\n        }\n    }\n    console.log(max + Index);   \n}\n\n\n```\n\n\n\n\n\n## 10.请问web前端开发，如何提高页面性能优化？\n\n\n\n## 11.请简述你所了解到的web攻击技术。\n\n\n\n\n\n","source":"_posts/前端开发工程师笔试题.md","raw":"---\ntitle: 前端开发工程师笔试题\ndate: 2018-08-21 10:52:46\ntags: [js, html, css, 面试]\ncategories: 面试题\n---\n\n\n\n## 1.标签上title和alt属性的区别是什么？\n\n- 含义不同\n\nalt属性在无法加载显示图片时代替文字，title属性则是为设置该属性的元素提供建议性的信息\n\n- 在浏览器中表现不同\n\n在FireFox和IE8中，当鼠标经过图片时title的值会显示，而alt的值不会显示，只有在IE6中，当鼠标经过图片时title和alt的值都会显示。\n\n- 网站SEO优化不同\n\n搜索引擎对图片意思的判断主要靠alt属性，所以在图片alt属性中以简要文字说明，同时包含关键词，也是页面优化的一部分。\n\n\n\n## 2.relative、absolute、static、fixed的作用，相对谁定位？\n\n- static是默认值，任意`position:static`的元素不会被特殊的定位。\n- fixed是固定定位，元素会相对于`视窗（body）`来定位，这意味着即便页面滚动，它还是会停留在相同的位置，`top`、`right`、`bottom`、`left`属性都可以用。\n- relative是相对定位，相对于`父元素`来定位，不脱离文档流\n- absolute是绝对定位，相对于`最近的positioned祖先元素`定位，如果绝对定位的元素没有positioned祖先元素则它相对于`body`元素定位，并且它会随着页面滚动而移动。\n\n> `positioned`元素是指position值不是static的元素\n\n\n\n## 3.请画出css盒模型。\n\n![](/home/evey/%E5%9B%BE%E7%89%87/2018-06-13%2018-44-36%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png)\n\n## 4.请写一个数组去重的方法。\n\n#### 方法1——Set\n\nES6提供了新的数据结构`Set`。它类似于数组，但是成员的值都是唯一的，没有重复的值。\n\n`Set`本身是一个构造函数，用来生成`Set`数据结构，`Array.from`方法可以将`Set`结构转为数组\n\n> 在`Set`内部两个`NaN`是相等的，两个对象是总不相等的\n\n\n\n```js\nfunction unique(arr){\n  return Array.from(new Set(arr));\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null, NaN]\n```\n\n\n\n#### 方法2——forEach\n\n在`forEach`中两个`NaN`不相等\n\n```js\nfunction unique(arr){\n  var newArr = [];\n  arr.forEach(function(item){\n    if(newArr.indexOf(item) === -1){\n      newArr.push(item);\n    }\n  });\n  return newArr;\n}\nvar arr = [1, 1, 2, 3, null, null, NaN, NaN];\nconsole.log(unique(arr)); // [1, 2, 3, null, NaN, NaN]\n```\n\n\n\n\n\n\n\n\n\n## 5.请写一个方法，将URL中的查询字符串解析成一个字典对象。\n\n###### 代码\n\n```js\nfunction getQueryObject(url) {\n\n    url = url == null ? window.location.href : url;\n    var search = url.substring(url.lastIndexOf(\"?\") + 1);\n    var obj = {};\n    var reg = /([^?&=]+)=([^?&=]*)/g;\n    search.replace(reg, function (rs, $1, $2) {\n        var name = decodeURIComponent($1);\n        var val = decodeURIComponent($2);               \n        val = String(val);\n        obj[name] = val;\n        return rs;\n    });\n    return obj;\n}\nvar url = \"http://www.cnblogs.com/leee/p/4456840.html?name=1&dd=ddd**\";\nconsole.log(getQueryObject(url));\n```\n\n\n\n###### 结果\n\n```js\n[object Object] {\n  dd: \"ddd**\",\n  name: \"1\"\n}\n```\n\n\n\n## 6.一个页面从输入URL到页面加载完的过程中都发生了什么事情？\n\n1. 用户输入URL地址\n2. 浏览器解析URL解析出主机名\n3. 浏览器将主机名换成服务器IP地址（浏览器先查找本地DNS缓存列表，没有的话再向浏览器默认的DNS服务器发送查询请求，同时缓存）\n4. 浏览器将端口号从URL中解析出来\n5. 浏览器建立一条与目标Web服务器的TCP连接（三次握手）\n6. 浏览器向服务器发送一条HTTP请求报文\n7. 服务器向浏览器返回一条HTTP响应报文\n8. 关闭连接，浏览器解析文档\n9. 如果文档中有资源，重复6、7、8直至资源全部加载完毕\n\n\n\n## 7.请简述页面渲染的过程。\n\n1. 处理HTML标记并构建DOM树\n2. 处理CSS标记并构建CSS DOM树\n3. 将DOM与CSS DOM合并成一个渲染树\n4. 根据渲染来布局，以计算每个节点的几何信息\n5. 将各个节点绘制到屏幕上\n\n\n\n\n\n## 9.判断一个字符串中出现次数最多的 字符，并统计这个次数。\n\n```js\nvar str = \"abcabcaaa\";\nmaxnum(str);\nfunction maxnum(str){\n    var json = {};\n    for(var i=0;i<str.length;i++){\n        if(!json[str.charAt(i)]){\n            json[str.charAt(i)] = 1;\n        }else{\n            json[str.charAt(i)]++;\n        }\n        console.log(json);\n    }\n    var max = 0;\n    var Index = '';\n    for(var i in json){\n        if(json[i]>max){\n            max = json[i];\n            Index = i;\n        }\n    }\n    console.log(max + Index);   \n}\n\n\n```\n\n\n\n\n\n## 10.请问web前端开发，如何提高页面性能优化？\n\n\n\n## 11.请简述你所了解到的web攻击技术。\n\n\n\n\n\n","slug":"前端开发工程师笔试题","published":1,"updated":"2018-08-21T02:54:14.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gw4004boaqolxrs3o84","content":"<h2 id=\"1-标签上title和alt属性的区别是什么？\"><a href=\"#1-标签上title和alt属性的区别是什么？\" class=\"headerlink\" title=\"1.标签上title和alt属性的区别是什么？\"></a>1.标签上title和alt属性的区别是什么？</h2><ul>\n<li>含义不同</li>\n</ul>\n<p>alt属性在无法加载显示图片时代替文字，title属性则是为设置该属性的元素提供建议性的信息</p>\n<ul>\n<li>在浏览器中表现不同</li>\n</ul>\n<p>在FireFox和IE8中，当鼠标经过图片时title的值会显示，而alt的值不会显示，只有在IE6中，当鼠标经过图片时title和alt的值都会显示。</p>\n<ul>\n<li>网站SEO优化不同</li>\n</ul>\n<p>搜索引擎对图片意思的判断主要靠alt属性，所以在图片alt属性中以简要文字说明，同时包含关键词，也是页面优化的一部分。</p>\n<h2 id=\"2-relative、absolute、static、fixed的作用，相对谁定位？\"><a href=\"#2-relative、absolute、static、fixed的作用，相对谁定位？\" class=\"headerlink\" title=\"2.relative、absolute、static、fixed的作用，相对谁定位？\"></a>2.relative、absolute、static、fixed的作用，相对谁定位？</h2><ul>\n<li>static是默认值，任意<code>position:static</code>的元素不会被特殊的定位。</li>\n<li>fixed是固定定位，元素会相对于<code>视窗（body）</code>来定位，这意味着即便页面滚动，它还是会停留在相同的位置，<code>top</code>、<code>right</code>、<code>bottom</code>、<code>left</code>属性都可以用。</li>\n<li>relative是相对定位，相对于<code>父元素</code>来定位，不脱离文档流</li>\n<li>absolute是绝对定位，相对于<code>最近的positioned祖先元素</code>定位，如果绝对定位的元素没有positioned祖先元素则它相对于<code>body</code>元素定位，并且它会随着页面滚动而移动。</li>\n</ul>\n<blockquote>\n<p><code>positioned</code>元素是指position值不是static的元素</p>\n</blockquote>\n<h2 id=\"3-请画出css盒模型。\"><a href=\"#3-请画出css盒模型。\" class=\"headerlink\" title=\"3.请画出css盒模型。\"></a>3.请画出css盒模型。</h2><p><img src=\"/home/evey/%E5%9B%BE%E7%89%87/2018-06-13%2018-44-36%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<h2 id=\"4-请写一个数组去重的方法。\"><a href=\"#4-请写一个数组去重的方法。\" class=\"headerlink\" title=\"4.请写一个数组去重的方法。\"></a>4.请写一个数组去重的方法。</h2><h4 id=\"方法1——Set\"><a href=\"#方法1——Set\" class=\"headerlink\" title=\"方法1——Set\"></a>方法1——Set</h4><p>ES6提供了新的数据结构<code>Set</code>。它类似于数组，但是成员的值都是唯一的，没有重复的值。</p>\n<p><code>Set</code>本身是一个构造函数，用来生成<code>Set</code>数据结构，<code>Array.from</code>方法可以将<code>Set</code>结构转为数组</p>\n<blockquote>\n<p>在<code>Set</code>内部两个<code>NaN</code>是相等的，两个对象是总不相等的</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.from(<span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>(arr));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null, NaN]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法2——forEach\"><a href=\"#方法2——forEach\" class=\"headerlink\" title=\"方法2——forEach\"></a>方法2——forEach</h4><p>在<code>forEach</code>中两个<code>NaN</code>不相等</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">  arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(newArr.indexOf(item) === <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">      newArr.push(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null, NaN, NaN]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-请写一个方法，将URL中的查询字符串解析成一个字典对象。\"><a href=\"#5-请写一个方法，将URL中的查询字符串解析成一个字典对象。\" class=\"headerlink\" title=\"5.请写一个方法，将URL中的查询字符串解析成一个字典对象。\"></a>5.请写一个方法，将URL中的查询字符串解析成一个字典对象。</h2><h6 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getQueryObject</span>(<span class=\"params\">url</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    url = url == <span class=\"literal\">null</span> ? <span class=\"built_in\">window</span>.location.href : url;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> search = url.substring(url.lastIndexOf(<span class=\"string\">\"?\"</span>) + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = <span class=\"regexp\">/([^?&amp;=]+)=([^?&amp;=]*)/g</span>;</span><br><span class=\"line\">    search.replace(reg, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">rs, $<span class=\"number\">1</span>, $<span class=\"number\">2</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> name = <span class=\"built_in\">decodeURIComponent</span>($<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> val = <span class=\"built_in\">decodeURIComponent</span>($<span class=\"number\">2</span>);               </span><br><span class=\"line\">        val = <span class=\"built_in\">String</span>(val);</span><br><span class=\"line\">        obj[name] = val;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rs;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">\"http://www.cnblogs.com/leee/p/4456840.html?name=1&amp;dd=ddd**\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getQueryObject(url));</span><br></pre></td></tr></table></figure>\n<h6 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[object <span class=\"built_in\">Object</span>] &#123;</span><br><span class=\"line\">  dd: <span class=\"string\">\"ddd**\"</span>,</span><br><span class=\"line\">  name: <span class=\"string\">\"1\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-一个页面从输入URL到页面加载完的过程中都发生了什么事情？\"><a href=\"#6-一个页面从输入URL到页面加载完的过程中都发生了什么事情？\" class=\"headerlink\" title=\"6.一个页面从输入URL到页面加载完的过程中都发生了什么事情？\"></a>6.一个页面从输入URL到页面加载完的过程中都发生了什么事情？</h2><ol>\n<li>用户输入URL地址</li>\n<li>浏览器解析URL解析出主机名</li>\n<li>浏览器将主机名换成服务器IP地址（浏览器先查找本地DNS缓存列表，没有的话再向浏览器默认的DNS服务器发送查询请求，同时缓存）</li>\n<li>浏览器将端口号从URL中解析出来</li>\n<li>浏览器建立一条与目标Web服务器的TCP连接（三次握手）</li>\n<li>浏览器向服务器发送一条HTTP请求报文</li>\n<li>服务器向浏览器返回一条HTTP响应报文</li>\n<li>关闭连接，浏览器解析文档</li>\n<li>如果文档中有资源，重复6、7、8直至资源全部加载完毕</li>\n</ol>\n<h2 id=\"7-请简述页面渲染的过程。\"><a href=\"#7-请简述页面渲染的过程。\" class=\"headerlink\" title=\"7.请简述页面渲染的过程。\"></a>7.请简述页面渲染的过程。</h2><ol>\n<li>处理HTML标记并构建DOM树</li>\n<li>处理CSS标记并构建CSS DOM树</li>\n<li>将DOM与CSS DOM合并成一个渲染树</li>\n<li>根据渲染来布局，以计算每个节点的几何信息</li>\n<li>将各个节点绘制到屏幕上</li>\n</ol>\n<h2 id=\"9-判断一个字符串中出现次数最多的-字符，并统计这个次数。\"><a href=\"#9-判断一个字符串中出现次数最多的-字符，并统计这个次数。\" class=\"headerlink\" title=\"9.判断一个字符串中出现次数最多的 字符，并统计这个次数。\"></a>9.判断一个字符串中出现次数最多的 字符，并统计这个次数。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"abcabcaaa\"</span>;</span><br><span class=\"line\">maxnum(str);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">maxnum</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> json = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;str.length;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!json[str.charAt(i)])&#123;</span><br><span class=\"line\">            json[str.charAt(i)] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            json[str.charAt(i)]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(json);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> Index = <span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> json)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(json[i]&gt;max)&#123;</span><br><span class=\"line\">            max = json[i];</span><br><span class=\"line\">            Index = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(max + Index);   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-请问web前端开发，如何提高页面性能优化？\"><a href=\"#10-请问web前端开发，如何提高页面性能优化？\" class=\"headerlink\" title=\"10.请问web前端开发，如何提高页面性能优化？\"></a>10.请问web前端开发，如何提高页面性能优化？</h2><h2 id=\"11-请简述你所了解到的web攻击技术。\"><a href=\"#11-请简述你所了解到的web攻击技术。\" class=\"headerlink\" title=\"11.请简述你所了解到的web攻击技术。\"></a>11.请简述你所了解到的web攻击技术。</h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-标签上title和alt属性的区别是什么？\"><a href=\"#1-标签上title和alt属性的区别是什么？\" class=\"headerlink\" title=\"1.标签上title和alt属性的区别是什么？\"></a>1.标签上title和alt属性的区别是什么？</h2><ul>\n<li>含义不同</li>\n</ul>\n<p>alt属性在无法加载显示图片时代替文字，title属性则是为设置该属性的元素提供建议性的信息</p>\n<ul>\n<li>在浏览器中表现不同</li>\n</ul>\n<p>在FireFox和IE8中，当鼠标经过图片时title的值会显示，而alt的值不会显示，只有在IE6中，当鼠标经过图片时title和alt的值都会显示。</p>\n<ul>\n<li>网站SEO优化不同</li>\n</ul>\n<p>搜索引擎对图片意思的判断主要靠alt属性，所以在图片alt属性中以简要文字说明，同时包含关键词，也是页面优化的一部分。</p>\n<h2 id=\"2-relative、absolute、static、fixed的作用，相对谁定位？\"><a href=\"#2-relative、absolute、static、fixed的作用，相对谁定位？\" class=\"headerlink\" title=\"2.relative、absolute、static、fixed的作用，相对谁定位？\"></a>2.relative、absolute、static、fixed的作用，相对谁定位？</h2><ul>\n<li>static是默认值，任意<code>position:static</code>的元素不会被特殊的定位。</li>\n<li>fixed是固定定位，元素会相对于<code>视窗（body）</code>来定位，这意味着即便页面滚动，它还是会停留在相同的位置，<code>top</code>、<code>right</code>、<code>bottom</code>、<code>left</code>属性都可以用。</li>\n<li>relative是相对定位，相对于<code>父元素</code>来定位，不脱离文档流</li>\n<li>absolute是绝对定位，相对于<code>最近的positioned祖先元素</code>定位，如果绝对定位的元素没有positioned祖先元素则它相对于<code>body</code>元素定位，并且它会随着页面滚动而移动。</li>\n</ul>\n<blockquote>\n<p><code>positioned</code>元素是指position值不是static的元素</p>\n</blockquote>\n<h2 id=\"3-请画出css盒模型。\"><a href=\"#3-请画出css盒模型。\" class=\"headerlink\" title=\"3.请画出css盒模型。\"></a>3.请画出css盒模型。</h2><p><img src=\"/home/evey/%E5%9B%BE%E7%89%87/2018-06-13%2018-44-36%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png\" alt=\"\"></p>\n<h2 id=\"4-请写一个数组去重的方法。\"><a href=\"#4-请写一个数组去重的方法。\" class=\"headerlink\" title=\"4.请写一个数组去重的方法。\"></a>4.请写一个数组去重的方法。</h2><h4 id=\"方法1——Set\"><a href=\"#方法1——Set\" class=\"headerlink\" title=\"方法1——Set\"></a>方法1——Set</h4><p>ES6提供了新的数据结构<code>Set</code>。它类似于数组，但是成员的值都是唯一的，没有重复的值。</p>\n<p><code>Set</code>本身是一个构造函数，用来生成<code>Set</code>数据结构，<code>Array.from</code>方法可以将<code>Set</code>结构转为数组</p>\n<blockquote>\n<p>在<code>Set</code>内部两个<code>NaN</code>是相等的，两个对象是总不相等的</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Array</span>.from(<span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>(arr));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null, NaN]</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"方法2——forEach\"><a href=\"#方法2——forEach\" class=\"headerlink\" title=\"方法2——forEach\"></a>方法2——forEach</h4><p>在<code>forEach</code>中两个<code>NaN</code>不相等</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> newArr = [];</span><br><span class=\"line\">  arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(newArr.indexOf(item) === <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">      newArr.push(item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> newArr;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(unique(arr)); <span class=\"comment\">// [1, 2, 3, null, NaN, NaN]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-请写一个方法，将URL中的查询字符串解析成一个字典对象。\"><a href=\"#5-请写一个方法，将URL中的查询字符串解析成一个字典对象。\" class=\"headerlink\" title=\"5.请写一个方法，将URL中的查询字符串解析成一个字典对象。\"></a>5.请写一个方法，将URL中的查询字符串解析成一个字典对象。</h2><h6 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getQueryObject</span>(<span class=\"params\">url</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    url = url == <span class=\"literal\">null</span> ? <span class=\"built_in\">window</span>.location.href : url;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> search = url.substring(url.lastIndexOf(<span class=\"string\">\"?\"</span>) + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> obj = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> reg = <span class=\"regexp\">/([^?&amp;=]+)=([^?&amp;=]*)/g</span>;</span><br><span class=\"line\">    search.replace(reg, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">rs, $<span class=\"number\">1</span>, $<span class=\"number\">2</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> name = <span class=\"built_in\">decodeURIComponent</span>($<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">var</span> val = <span class=\"built_in\">decodeURIComponent</span>($<span class=\"number\">2</span>);               </span><br><span class=\"line\">        val = <span class=\"built_in\">String</span>(val);</span><br><span class=\"line\">        obj[name] = val;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rs;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> url = <span class=\"string\">\"http://www.cnblogs.com/leee/p/4456840.html?name=1&amp;dd=ddd**\"</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getQueryObject(url));</span><br></pre></td></tr></table></figure>\n<h6 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h6><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[object <span class=\"built_in\">Object</span>] &#123;</span><br><span class=\"line\">  dd: <span class=\"string\">\"ddd**\"</span>,</span><br><span class=\"line\">  name: <span class=\"string\">\"1\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-一个页面从输入URL到页面加载完的过程中都发生了什么事情？\"><a href=\"#6-一个页面从输入URL到页面加载完的过程中都发生了什么事情？\" class=\"headerlink\" title=\"6.一个页面从输入URL到页面加载完的过程中都发生了什么事情？\"></a>6.一个页面从输入URL到页面加载完的过程中都发生了什么事情？</h2><ol>\n<li>用户输入URL地址</li>\n<li>浏览器解析URL解析出主机名</li>\n<li>浏览器将主机名换成服务器IP地址（浏览器先查找本地DNS缓存列表，没有的话再向浏览器默认的DNS服务器发送查询请求，同时缓存）</li>\n<li>浏览器将端口号从URL中解析出来</li>\n<li>浏览器建立一条与目标Web服务器的TCP连接（三次握手）</li>\n<li>浏览器向服务器发送一条HTTP请求报文</li>\n<li>服务器向浏览器返回一条HTTP响应报文</li>\n<li>关闭连接，浏览器解析文档</li>\n<li>如果文档中有资源，重复6、7、8直至资源全部加载完毕</li>\n</ol>\n<h2 id=\"7-请简述页面渲染的过程。\"><a href=\"#7-请简述页面渲染的过程。\" class=\"headerlink\" title=\"7.请简述页面渲染的过程。\"></a>7.请简述页面渲染的过程。</h2><ol>\n<li>处理HTML标记并构建DOM树</li>\n<li>处理CSS标记并构建CSS DOM树</li>\n<li>将DOM与CSS DOM合并成一个渲染树</li>\n<li>根据渲染来布局，以计算每个节点的几何信息</li>\n<li>将各个节点绘制到屏幕上</li>\n</ol>\n<h2 id=\"9-判断一个字符串中出现次数最多的-字符，并统计这个次数。\"><a href=\"#9-判断一个字符串中出现次数最多的-字符，并统计这个次数。\" class=\"headerlink\" title=\"9.判断一个字符串中出现次数最多的 字符，并统计这个次数。\"></a>9.判断一个字符串中出现次数最多的 字符，并统计这个次数。</h2><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"abcabcaaa\"</span>;</span><br><span class=\"line\">maxnum(str);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">maxnum</span>(<span class=\"params\">str</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> json = &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;str.length;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!json[str.charAt(i)])&#123;</span><br><span class=\"line\">            json[str.charAt(i)] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            json[str.charAt(i)]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(json);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> Index = <span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> json)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(json[i]&gt;max)&#123;</span><br><span class=\"line\">            max = json[i];</span><br><span class=\"line\">            Index = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(max + Index);   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-请问web前端开发，如何提高页面性能优化？\"><a href=\"#10-请问web前端开发，如何提高页面性能优化？\" class=\"headerlink\" title=\"10.请问web前端开发，如何提高页面性能优化？\"></a>10.请问web前端开发，如何提高页面性能优化？</h2><h2 id=\"11-请简述你所了解到的web攻击技术。\"><a href=\"#11-请简述你所了解到的web攻击技术。\" class=\"headerlink\" title=\"11.请简述你所了解到的web攻击技术。\"></a>11.请简述你所了解到的web攻击技术。</h2>"},{"title":"在ubuntu中使用ls和xargs命令转换png和jpg","date":"2018-06-28T10:21:28.000Z","_content":"\n#### PNG转JPG\n\n```shell\n$ ls -1 *.png | xargs -n 1 bash -c 'convert \"$0\" \"${0%.png}.jpg\"'\n```\n\n#### JPG转PNG\n\n```shell\nls -1 *.jpg | xargs -n 1 bash -c 'convert \"$0\" \"${0%.png}.png\"'\n```\n\n`ls`命令可以列出所有的`png`图像文件，`xargs`使得可以从标准输入构建和执行`convert`命令，从而将所有`.png`图像转换为`.jpg`图像。\n\n\n\n说明：\n\n- `-1`：告诉`ls`每行列出一个图像名称的选项标识\n- `-n`：指定最多参数个数，例子中为1\n- `-c`：指示bash运行给定的命令\n- `${0%.png}.jpg`：设置新转换的图像文件的名字，`%`符号用来删除源文件的扩展名\n\n","source":"_posts/在ubuntu中使用ls和xargs命令转换png和jpg.md","raw":"---\ntitle: 在ubuntu中使用ls和xargs命令转换png和jpg\ndate: 2018-06-28 18:21:28\ntags: [ubuntu18.04, jpg, png]\ncategories: Ubuntu\n---\n\n#### PNG转JPG\n\n```shell\n$ ls -1 *.png | xargs -n 1 bash -c 'convert \"$0\" \"${0%.png}.jpg\"'\n```\n\n#### JPG转PNG\n\n```shell\nls -1 *.jpg | xargs -n 1 bash -c 'convert \"$0\" \"${0%.png}.png\"'\n```\n\n`ls`命令可以列出所有的`png`图像文件，`xargs`使得可以从标准输入构建和执行`convert`命令，从而将所有`.png`图像转换为`.jpg`图像。\n\n\n\n说明：\n\n- `-1`：告诉`ls`每行列出一个图像名称的选项标识\n- `-n`：指定最多参数个数，例子中为1\n- `-c`：指示bash运行给定的命令\n- `${0%.png}.jpg`：设置新转换的图像文件的名字，`%`符号用来删除源文件的扩展名\n\n","slug":"在ubuntu中使用ls和xargs命令转换png和jpg","published":1,"updated":"2018-08-17T07:35:36.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gw6004eoaqog6rp68ni","content":"<h4 id=\"PNG转JPG\"><a href=\"#PNG转JPG\" class=\"headerlink\" title=\"PNG转JPG\"></a>PNG转JPG</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ls -1 *.png | xargs -n 1 bash -c 'convert \"$0\" \"$&#123;0%.png&#125;.jpg\"'</span><br></pre></td></tr></table></figure>\n<h4 id=\"JPG转PNG\"><a href=\"#JPG转PNG\" class=\"headerlink\" title=\"JPG转PNG\"></a>JPG转PNG</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -1 *.jpg | xargs -n 1 bash -c 'convert \"$0\" \"$&#123;0%.png&#125;.png\"'</span><br></pre></td></tr></table></figure>\n<p><code>ls</code>命令可以列出所有的<code>png</code>图像文件，<code>xargs</code>使得可以从标准输入构建和执行<code>convert</code>命令，从而将所有<code>.png</code>图像转换为<code>.jpg</code>图像。</p>\n<p>说明：</p>\n<ul>\n<li><code>-1</code>：告诉<code>ls</code>每行列出一个图像名称的选项标识</li>\n<li><code>-n</code>：指定最多参数个数，例子中为1</li>\n<li><code>-c</code>：指示bash运行给定的命令</li>\n<li><code>${0%.png}.jpg</code>：设置新转换的图像文件的名字，<code>%</code>符号用来删除源文件的扩展名</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"PNG转JPG\"><a href=\"#PNG转JPG\" class=\"headerlink\" title=\"PNG转JPG\"></a>PNG转JPG</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ls -1 *.png | xargs -n 1 bash -c 'convert \"$0\" \"$&#123;0%.png&#125;.jpg\"'</span><br></pre></td></tr></table></figure>\n<h4 id=\"JPG转PNG\"><a href=\"#JPG转PNG\" class=\"headerlink\" title=\"JPG转PNG\"></a>JPG转PNG</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -1 *.jpg | xargs -n 1 bash -c 'convert \"$0\" \"$&#123;0%.png&#125;.png\"'</span><br></pre></td></tr></table></figure>\n<p><code>ls</code>命令可以列出所有的<code>png</code>图像文件，<code>xargs</code>使得可以从标准输入构建和执行<code>convert</code>命令，从而将所有<code>.png</code>图像转换为<code>.jpg</code>图像。</p>\n<p>说明：</p>\n<ul>\n<li><code>-1</code>：告诉<code>ls</code>每行列出一个图像名称的选项标识</li>\n<li><code>-n</code>：指定最多参数个数，例子中为1</li>\n<li><code>-c</code>：指示bash运行给定的命令</li>\n<li><code>${0%.png}.jpg</code>：设置新转换的图像文件的名字，<code>%</code>符号用来删除源文件的扩展名</li>\n</ul>\n"},{"title":"前端单元测试初探","date":"2017-12-08T06:49:26.000Z","_content":"\n\n\n## 什么是单元测试\n\n来自维基百科的回答\n\n> **单元测试**（英语：Unit Testing）又称为**模块测试**, 是针对**程序的最小单元**来进行正确性检验的测试工作。程序单元是应用的最小可测试部件。一个单元可能是单个程序、函数、过程、方法等。\n\n\n\n## 需不需要写单测\n\n好的单元测试是使你开发的产品走向成功的秘密武器：\n\n1. **有助于设计**：写单元测试首先给了你一个如何设计 API 的清晰视角。\n2. **特性文档**：单元测试描述和记录了代码所要实现的所有需求。\n3. **检查开发者需求理解程度**：是否开发者足够理解问题，在测试代码里描述了所有的关键需求点？\n4. **QA（质量保证）**：依靠人工 QA 容易出错。\n5. **有助于持续交付**：自动化的 QA 能够自动防止将有缺陷的产品构建并发布上线。\n\n\n\n\n<u>**通俗地讲单测可以提高代码质量以及大幅减少bug的存在**</u>\n\n\n\n\n## 如何开始\n\n既然已经确定了单测的必要性，那么如何开始进行单测呢？\n\n\n\n### 单测工具链\n\n#### 框架\n\n目前比较火的测试框架就是[jasmine](https://jasmine.github.io/)和[mocha](https://mochajs.org/)，这里我选用mocha。\n\n##### 什么是Mocha\n\nMocha 是一个功能丰富的javascript测试框架，可以运行在nodejs和浏览器环境，使异步测试变得简单有趣。mocha 串联运行测试，允许灵活和精确地报告结果，同时映射未捕获的异常用来纠正测试用例。\n\n##### 特点\n\n- 简单\n- 灵活\n- 有趣\n\n##### 安装\n\n```shell\nnpm install -g mocha\n```\n\n\n\n#### 断言库\n\n目前比较流行的断言库主要有以下几个：\n\n- [chai](http://chaijs.com/)：`BDD/TDD` 双模 ，同时支持 `should / expect / assert` 三种风格的断言库强大插件机制。\n- [shouldjs](https://shouldjs.github.io/)：`BDD`风格断言库，由TJ Holowaychuk 发起。\n- [expectjs](https://github.com/Automattic/expect.js)：追求极简的 `BDD` 风格断言库，基于 `should.js` 简化。\n- [assert](https://nodejs.org/dist/latest-v8.x/docs/api/assert.html)：风格最保守，node 的核心模块，node 环境可以直接使用。\n\n这里我使用的是`Chai`，因为mocha+chai是黄金搭档呀\n\n##### 安装\n\n```shell\nnpm install -g chai\n```\n\n\n\n#### Mock库\n\n##### 什么是Mock\n\n编写测试的时候，可能需要和系统内的某个模块或系统外某个实体交互，例如数据库读写、邮件发送等。这时就需要使用 mock 技术来模拟。\n\n##### 有哪些Mock库\n\n[sinon.js](http://sinonjs.org/)：只用过这个，其他不大清楚。sinon允许你把代码中难以被测试的部分替换为更容易测试的内容。\n\n##### 安装\n\n```shell\nnpm install sinon\n```\n\n\n\n#### 测试集成工具\n\n[karma](https://karma-runner.github.io/)：Google Angular 团队写的，功能很强大，有很多插件\n\n##### 安装\n\n```shell\nnpm install karma --save-dev\n```\n\n\n\n### 搭建环境\n\n基于vue-cli脚手架生成的项目模板中可以自动添加测试环境，但是这不利于刚接触单测的同学去学习，以下是我从零开始搭建测试环境的经过。\n\n#### 新建项目\n\n参考另一篇文章[新建Vue项目](https://evey-huang.github.io./2017/12/04/vue-start/)也可以了解新建vue项目的步骤。\n\n##### 安装脚手架\n\n```shell\nnpm install vue-cli -g\n```\n\n\n\n##### 创建项目\n\n创建一个名为`unit-test`的项目\n\n```shell\nvue init webpack unit-test\n```\n\n\n\n然后会有询问\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit1-1.png)\n\n>这里在询问需不需要加入`unit`单测的时候选了`no`是因为本文主要是讲怎样从0开始搭建测试环境，所以创建项目的时候先不考虑加入。\n\n\n\n##### 进入项目\n\n```shell\ncd unit-test\n```\n\n\n\n##### 启动项目\n\n```shell\nnpm run dev\n```\n\n>项目正常运行的话可以开始搭建测试环境\n\n\n\n#### 测试环境搭建\n\n##### 项目整体结构\n\n```\n├── unit-test/\n    │—— build //构建脚本目录\n    |     |—— webpack.base.conf.js // wabpack基础配置\n    |     |—— webpack.prod.conf.js // wabpack生产环境配置\n    |     |—— webpack.test.conf.js // webpack测试环境配置\n    |     |—— webpack.dev.conf.js // wabpack开发环境配置\n    |     |—— vue-loader.conf.js\n    |     |—— utils.js // 构建相关工具方法\n    |\n    |—— config // 项目配置\n    |     |—— dev.env.js // 开发环境变量\n    |     |—— prod.env.js // 生产环境变量\n    |     |—— test.env.js // 测试环境变量\n    |     |—— index.js // 项目配置文件\n    |—— src // 源码目录 \n    |    |—— components\n    |            |—— HelloWorld.vue\n    |—— test\n    |    |—— unit\n    |          |—— coverage //自动生成覆盖文件夹\n    |          |—— index.js //测试文件入口\n    |          |—— karma.conf.js // karma配置文件\n    |          |—— .eslintrc //支持断言书写\n    |          |—— specs //测试用例文件夹\n    |                |—— HelloWorld.spec.js\n    |—— package.json // npm包配置文件，定义了项目的npm脚本，依赖包等信息\n```\n\n\n\n##### 安装`karma`\n\n```shell\nnpm install karma --save-dev\n```\n\n\n\n##### 进入unit文件夹\n\n```shell\ncd test/unit/\n```\n\n\n\n##### 初始化karma\n\n```shell\nkarma init\n```\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit3.png)\n\n这样就生成了一个基本的配置文件`karma.conf.js`\n\n##### 相关文件配置\n\n**karma.conf.js**\n\n```js\nvar webpackConfig = require('../../build/webpack.test.conf')\n\nmodule.exports = function (config) {\n  config.set({\n    browsers: ['PhantomJS'], // 浏览器\n    frameworks: ['mocha', 'sinon-chai', 'phantomjs-shim'], // 测试框架\n    reporters: ['spec', 'coverage'], // 测试报告\n    files: ['./index.js'], // 测试入口文件\n    preprocessors: {\n      './index.js': ['webpack', 'coverage'] // 处理测试文件\n    },\n    webpack: webpackConfig, // webpack配置\n    webpackMiddleware: {\n      noInfo: true // 不显示webpack打包日志信息\n    },\n    coverageReporter: { // 代码覆盖率报告\n      dir: './coverage',\n      reporters: [\n        { type: 'lcov', subdir: '.' },\n        { type: 'text-summary' }\n      ]\n    }\n  })\n}\n\n```\n\n\n\n**webpack.test.conf.js**\n\n```js\n\nconst utils = require('./utils')\nconst webpack = require('webpack') // 指定环境需要引入webpack\nconst merge = require('webpack-merge')\nconst baseWebpackConfig = require('./webpack.base.conf')\n\nconst webpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders()\n  },\n  devtool: '#inline-source-map',\n  resolveLoader: {\n    alias: {\n      'scss-loader': 'sass-loader'\n    }\n  },\n  // 指定环境\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': require('../config/test.env')\n    })\n  ]\n})\n\n// no need for app entry during tests\ndelete webpackConfig.entry\n\nmodule.exports = webpackConfig\n\n```\n\n\n\n**webpack.prod.conf.js**\n\n在`webpack.prod.conf.js`中引用`test.env`\n\n```js\nconst env = process.env.NODE_ENV === 'testing'\n  ? require('../config/test.env')\n  : require('../config/prod.env')\n```\n\n\n\n**test.env.js**\n\n```js\n'use strict'\nconst merge = require('webpack-merge')\nconst devEnv = require('./dev.env')\n\nmodule.exports = merge(devEnv, {\n  NODE_ENV: '\"testing\"'\n})\n\n```\n\n\n\n**index.js**\n\n```js\nimport Vue from 'vue'\n\nVue.config.productionTip = false\n\nconst testsContext = require.context('./specs', true, /\\.spec$/)\ntestsContext.keys().forEach(testsContext)\n\nconst srcContext = require.context('../../src', true, /^\\.\\/(?!main(\\.js)?$)/)\nsrcContext.keys().forEach(srcContext)\n\n```\n\n\n\n**.eclintrc.js**\n\n```js\n{\n  \"env\": { \n    \"mocha\": true\n  },\n  \"globals\": { \n    \"expect\": true,\n    \"sinon\": true\n  }\n}\n```\n\n\n\n**package.json**\n\n```json\n\"scripts\": {\n  \"unit\": \"cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\",\n  \"test\": \"npm run unit\"\n}\n\"devDependencies\": {\n  \"chai\": \"^4.1.2\",\n  \"cross-env\": \"^5.0.1\",\n  \"karma\": \"^1.7.1\",\n  \"karma-mocha\": \"^1.3.0\",\n  \"karma-coverage\": \"^1.1.1\",\n  \"karma-phantomjs-launcher\": \"^1.0.4\",\n  \"karma-phantomjs-shim\": \"^1.4.0\",\n  \"karma-sinon-chai\": \"^1.3.1\",\n  \"karma-sourcemap-loader\": \"^0.3.7\",\n  \"karma-spec-reporter\": \"0.0.31\",\n  \"karma-webpack\": \"^2.0.2\",\n  \"mocha\": \"^3.2.0\",\n  \"sinon\": \"^4.0.0\",\n  \"sinon-chai\": \"^2.8.0\"\n}\n\n```\n\n##### 安装依赖\n\n```shell\nnpm install\n```\n\n\n\n#### 测试用例\n\n官网[vue单元测试](https://cn.vuejs.org/v2/guide/unit-testing.html)有介绍测试用例怎么写，下面是一个简单的测试用例：\n\n##### 简单测试用例\n\n**HelloWorld.spec.js**\n\n```js\nimport Vue from 'vue'\nimport HelloWorld from '@/components/HelloWorld'\n\ndescribe('HelloWorld.vue', () => {\n  it('should render correct contents', () => {\n    const Constructor = Vue.extend(HelloWorld)\n    const vm = new Constructor().$mount()\n    expect(vm.$el.querySelector('.hello h1').textContent)\n    .to.equal('Welcome to Your Vue.js App')\n  })\n  it('should be Essential Links', () => {\n    const Constructor = Vue.extend(HelloWorld)\n    const vm = new Constructor().$mount()\n    expect(vm.$el.querySelector('.hello h2').textContent)\n    .to.equal('Essential Links')\n  })\n})\n\n```\n\n##### 运行测试用例\n\n```shell\nnpm run test\n```\n\n##### 生成测试报告\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit4.png)\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit5.png)\n\n##### 测试报告分析\n\n从图中我们可以看到它有四个指标：\n\n- Statements: 语句覆盖率，执行到每个语句；\n- Branches：分支覆盖率，执行到每个if代码块；\n- Functions：函数覆盖率，调用到程序中的每一个函数；\n- Lines：行覆盖率，执行到程序中的每一行。\n\n从图中我们也可以看出覆盖率极低，打开`coverage`文件夹可以看到:\n\n```\ncoverage/\n├── lcov-report\n│   ├── base.css\n│   ├── index.html\n│   ├── prettify.css\n│   ├── prettify.js\n│   ├── sort-arrow-sprite.png\n│   ├── sorter.js\n│   └── unit\n│       ├── index.html // 测试覆盖率报告\n│       └── index.js.html // 覆盖率低的原因\n└── lcov.info\n```\n\n打开`index.js.html`可以看到覆盖率低的原因\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit6.png)\n\n从图中可以看到红色部分是测试用例没有覆盖到的地方，旁边的`1x`表示执行了`一次`。因为本文所写的测试用例`HelloWorld.spec.js`很简单没有涉及到逻辑，没有覆盖到这些函数很正常。对于实际开发来说，通过这个清晰的报告，我们可以在代码中看出那些函数，那些代码块没有被执行，从而去分析原因，修正测试用例，完善代码逻辑，提高质量。\n\n\n\n打开`lcov.info`文件可以看到(这里我截取了部分)：\n\n```\nFN:50,getDefault\nFN:51,getModuleExports\nFN:57,(anonymous_7)\nFN:68,(anonymous_8)\n....\nFNF:694\nFNH:207\n....\nFNDA:0,simpleNormalizeChildren\nFNDA:0,normalizeChildren\nFNDA:0,isTextNode\nFNDA:0,normalizeArrayChildren\n.....\nDA:633,2\nDA:635,1\nDA:638,1\n```\n\n`FN`: 代表函数,`50` `51` `57` `68`这些行分布对应源代码中的函数开始的行号\n\n`FNF:694`: 代表一共有694个函数\n\n`FNH:207`: 代表其中207个函数被测试所覆盖\n\n`FNDA:0,isTextNode`: 代表了isTextNode这个函数被执行了0次\n\n`DA`: 代表当前被执行到的次数\n\n...\n\n还有很多解析想要了解可以google\n\n\n\n## 再谈单测\n\n完成以上步骤我觉得我懂单元测试了（可是单元测试不懂我，泪眼朦胧.jpg），但是翻过一座山又遇一条河，这条河让我觉得我又不懂单元测试了：\n\n- 在实际项目中单元测试到底测的是什么？\n- 确定了该测什么之后应该怎么去写测试用例？\n\n![JPG](http://p1cjg886l.bkt.clouddn.com/unit2.jpg)\n\n### 单元测试到底测的是什么\n\n就我的认知来看，这些需要测：\n\n- 和安全相关的代码逻辑\n- 核心的功能模块，函数\n- 短期不会发生变化的 UI 组件\n- 提供外部调用的接口\n\n\n\n### 怎么去写测试用例\n\n真的说不好怎样去写测试用例，很多资料只是告诉你怎么写一个简单的测试用例然后跑起来，但怎样去写一个好的测试用例却不知道。目前我经验少也总结不出什么有用的建议，<u>以后再填坑吧。</u>\n\n\n\n### 什么才是一个好的测试失败报告\n\n1. 你测试的是什么？\n2. 它是做什么的？\n3. 它实际输出了什么？（实际行为）\n4. 它本该输出什么？（预期行为）\n\n\n\n## 最后\n\n本文的代码戳这里[单元测试代码](https://github.com/Evey-huang/unit-vue)","source":"_posts/unit.md","raw":"---\ntitle: 前端单元测试初探\ndate: 2017-12-08 14:49:26\ntags: [karma, mocha, chai, 单元测试]\ncategories: 测试\n---\n\n\n\n## 什么是单元测试\n\n来自维基百科的回答\n\n> **单元测试**（英语：Unit Testing）又称为**模块测试**, 是针对**程序的最小单元**来进行正确性检验的测试工作。程序单元是应用的最小可测试部件。一个单元可能是单个程序、函数、过程、方法等。\n\n\n\n## 需不需要写单测\n\n好的单元测试是使你开发的产品走向成功的秘密武器：\n\n1. **有助于设计**：写单元测试首先给了你一个如何设计 API 的清晰视角。\n2. **特性文档**：单元测试描述和记录了代码所要实现的所有需求。\n3. **检查开发者需求理解程度**：是否开发者足够理解问题，在测试代码里描述了所有的关键需求点？\n4. **QA（质量保证）**：依靠人工 QA 容易出错。\n5. **有助于持续交付**：自动化的 QA 能够自动防止将有缺陷的产品构建并发布上线。\n\n\n\n\n<u>**通俗地讲单测可以提高代码质量以及大幅减少bug的存在**</u>\n\n\n\n\n## 如何开始\n\n既然已经确定了单测的必要性，那么如何开始进行单测呢？\n\n\n\n### 单测工具链\n\n#### 框架\n\n目前比较火的测试框架就是[jasmine](https://jasmine.github.io/)和[mocha](https://mochajs.org/)，这里我选用mocha。\n\n##### 什么是Mocha\n\nMocha 是一个功能丰富的javascript测试框架，可以运行在nodejs和浏览器环境，使异步测试变得简单有趣。mocha 串联运行测试，允许灵活和精确地报告结果，同时映射未捕获的异常用来纠正测试用例。\n\n##### 特点\n\n- 简单\n- 灵活\n- 有趣\n\n##### 安装\n\n```shell\nnpm install -g mocha\n```\n\n\n\n#### 断言库\n\n目前比较流行的断言库主要有以下几个：\n\n- [chai](http://chaijs.com/)：`BDD/TDD` 双模 ，同时支持 `should / expect / assert` 三种风格的断言库强大插件机制。\n- [shouldjs](https://shouldjs.github.io/)：`BDD`风格断言库，由TJ Holowaychuk 发起。\n- [expectjs](https://github.com/Automattic/expect.js)：追求极简的 `BDD` 风格断言库，基于 `should.js` 简化。\n- [assert](https://nodejs.org/dist/latest-v8.x/docs/api/assert.html)：风格最保守，node 的核心模块，node 环境可以直接使用。\n\n这里我使用的是`Chai`，因为mocha+chai是黄金搭档呀\n\n##### 安装\n\n```shell\nnpm install -g chai\n```\n\n\n\n#### Mock库\n\n##### 什么是Mock\n\n编写测试的时候，可能需要和系统内的某个模块或系统外某个实体交互，例如数据库读写、邮件发送等。这时就需要使用 mock 技术来模拟。\n\n##### 有哪些Mock库\n\n[sinon.js](http://sinonjs.org/)：只用过这个，其他不大清楚。sinon允许你把代码中难以被测试的部分替换为更容易测试的内容。\n\n##### 安装\n\n```shell\nnpm install sinon\n```\n\n\n\n#### 测试集成工具\n\n[karma](https://karma-runner.github.io/)：Google Angular 团队写的，功能很强大，有很多插件\n\n##### 安装\n\n```shell\nnpm install karma --save-dev\n```\n\n\n\n### 搭建环境\n\n基于vue-cli脚手架生成的项目模板中可以自动添加测试环境，但是这不利于刚接触单测的同学去学习，以下是我从零开始搭建测试环境的经过。\n\n#### 新建项目\n\n参考另一篇文章[新建Vue项目](https://evey-huang.github.io./2017/12/04/vue-start/)也可以了解新建vue项目的步骤。\n\n##### 安装脚手架\n\n```shell\nnpm install vue-cli -g\n```\n\n\n\n##### 创建项目\n\n创建一个名为`unit-test`的项目\n\n```shell\nvue init webpack unit-test\n```\n\n\n\n然后会有询问\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit1-1.png)\n\n>这里在询问需不需要加入`unit`单测的时候选了`no`是因为本文主要是讲怎样从0开始搭建测试环境，所以创建项目的时候先不考虑加入。\n\n\n\n##### 进入项目\n\n```shell\ncd unit-test\n```\n\n\n\n##### 启动项目\n\n```shell\nnpm run dev\n```\n\n>项目正常运行的话可以开始搭建测试环境\n\n\n\n#### 测试环境搭建\n\n##### 项目整体结构\n\n```\n├── unit-test/\n    │—— build //构建脚本目录\n    |     |—— webpack.base.conf.js // wabpack基础配置\n    |     |—— webpack.prod.conf.js // wabpack生产环境配置\n    |     |—— webpack.test.conf.js // webpack测试环境配置\n    |     |—— webpack.dev.conf.js // wabpack开发环境配置\n    |     |—— vue-loader.conf.js\n    |     |—— utils.js // 构建相关工具方法\n    |\n    |—— config // 项目配置\n    |     |—— dev.env.js // 开发环境变量\n    |     |—— prod.env.js // 生产环境变量\n    |     |—— test.env.js // 测试环境变量\n    |     |—— index.js // 项目配置文件\n    |—— src // 源码目录 \n    |    |—— components\n    |            |—— HelloWorld.vue\n    |—— test\n    |    |—— unit\n    |          |—— coverage //自动生成覆盖文件夹\n    |          |—— index.js //测试文件入口\n    |          |—— karma.conf.js // karma配置文件\n    |          |—— .eslintrc //支持断言书写\n    |          |—— specs //测试用例文件夹\n    |                |—— HelloWorld.spec.js\n    |—— package.json // npm包配置文件，定义了项目的npm脚本，依赖包等信息\n```\n\n\n\n##### 安装`karma`\n\n```shell\nnpm install karma --save-dev\n```\n\n\n\n##### 进入unit文件夹\n\n```shell\ncd test/unit/\n```\n\n\n\n##### 初始化karma\n\n```shell\nkarma init\n```\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit3.png)\n\n这样就生成了一个基本的配置文件`karma.conf.js`\n\n##### 相关文件配置\n\n**karma.conf.js**\n\n```js\nvar webpackConfig = require('../../build/webpack.test.conf')\n\nmodule.exports = function (config) {\n  config.set({\n    browsers: ['PhantomJS'], // 浏览器\n    frameworks: ['mocha', 'sinon-chai', 'phantomjs-shim'], // 测试框架\n    reporters: ['spec', 'coverage'], // 测试报告\n    files: ['./index.js'], // 测试入口文件\n    preprocessors: {\n      './index.js': ['webpack', 'coverage'] // 处理测试文件\n    },\n    webpack: webpackConfig, // webpack配置\n    webpackMiddleware: {\n      noInfo: true // 不显示webpack打包日志信息\n    },\n    coverageReporter: { // 代码覆盖率报告\n      dir: './coverage',\n      reporters: [\n        { type: 'lcov', subdir: '.' },\n        { type: 'text-summary' }\n      ]\n    }\n  })\n}\n\n```\n\n\n\n**webpack.test.conf.js**\n\n```js\n\nconst utils = require('./utils')\nconst webpack = require('webpack') // 指定环境需要引入webpack\nconst merge = require('webpack-merge')\nconst baseWebpackConfig = require('./webpack.base.conf')\n\nconst webpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders()\n  },\n  devtool: '#inline-source-map',\n  resolveLoader: {\n    alias: {\n      'scss-loader': 'sass-loader'\n    }\n  },\n  // 指定环境\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': require('../config/test.env')\n    })\n  ]\n})\n\n// no need for app entry during tests\ndelete webpackConfig.entry\n\nmodule.exports = webpackConfig\n\n```\n\n\n\n**webpack.prod.conf.js**\n\n在`webpack.prod.conf.js`中引用`test.env`\n\n```js\nconst env = process.env.NODE_ENV === 'testing'\n  ? require('../config/test.env')\n  : require('../config/prod.env')\n```\n\n\n\n**test.env.js**\n\n```js\n'use strict'\nconst merge = require('webpack-merge')\nconst devEnv = require('./dev.env')\n\nmodule.exports = merge(devEnv, {\n  NODE_ENV: '\"testing\"'\n})\n\n```\n\n\n\n**index.js**\n\n```js\nimport Vue from 'vue'\n\nVue.config.productionTip = false\n\nconst testsContext = require.context('./specs', true, /\\.spec$/)\ntestsContext.keys().forEach(testsContext)\n\nconst srcContext = require.context('../../src', true, /^\\.\\/(?!main(\\.js)?$)/)\nsrcContext.keys().forEach(srcContext)\n\n```\n\n\n\n**.eclintrc.js**\n\n```js\n{\n  \"env\": { \n    \"mocha\": true\n  },\n  \"globals\": { \n    \"expect\": true,\n    \"sinon\": true\n  }\n}\n```\n\n\n\n**package.json**\n\n```json\n\"scripts\": {\n  \"unit\": \"cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\",\n  \"test\": \"npm run unit\"\n}\n\"devDependencies\": {\n  \"chai\": \"^4.1.2\",\n  \"cross-env\": \"^5.0.1\",\n  \"karma\": \"^1.7.1\",\n  \"karma-mocha\": \"^1.3.0\",\n  \"karma-coverage\": \"^1.1.1\",\n  \"karma-phantomjs-launcher\": \"^1.0.4\",\n  \"karma-phantomjs-shim\": \"^1.4.0\",\n  \"karma-sinon-chai\": \"^1.3.1\",\n  \"karma-sourcemap-loader\": \"^0.3.7\",\n  \"karma-spec-reporter\": \"0.0.31\",\n  \"karma-webpack\": \"^2.0.2\",\n  \"mocha\": \"^3.2.0\",\n  \"sinon\": \"^4.0.0\",\n  \"sinon-chai\": \"^2.8.0\"\n}\n\n```\n\n##### 安装依赖\n\n```shell\nnpm install\n```\n\n\n\n#### 测试用例\n\n官网[vue单元测试](https://cn.vuejs.org/v2/guide/unit-testing.html)有介绍测试用例怎么写，下面是一个简单的测试用例：\n\n##### 简单测试用例\n\n**HelloWorld.spec.js**\n\n```js\nimport Vue from 'vue'\nimport HelloWorld from '@/components/HelloWorld'\n\ndescribe('HelloWorld.vue', () => {\n  it('should render correct contents', () => {\n    const Constructor = Vue.extend(HelloWorld)\n    const vm = new Constructor().$mount()\n    expect(vm.$el.querySelector('.hello h1').textContent)\n    .to.equal('Welcome to Your Vue.js App')\n  })\n  it('should be Essential Links', () => {\n    const Constructor = Vue.extend(HelloWorld)\n    const vm = new Constructor().$mount()\n    expect(vm.$el.querySelector('.hello h2').textContent)\n    .to.equal('Essential Links')\n  })\n})\n\n```\n\n##### 运行测试用例\n\n```shell\nnpm run test\n```\n\n##### 生成测试报告\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit4.png)\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit5.png)\n\n##### 测试报告分析\n\n从图中我们可以看到它有四个指标：\n\n- Statements: 语句覆盖率，执行到每个语句；\n- Branches：分支覆盖率，执行到每个if代码块；\n- Functions：函数覆盖率，调用到程序中的每一个函数；\n- Lines：行覆盖率，执行到程序中的每一行。\n\n从图中我们也可以看出覆盖率极低，打开`coverage`文件夹可以看到:\n\n```\ncoverage/\n├── lcov-report\n│   ├── base.css\n│   ├── index.html\n│   ├── prettify.css\n│   ├── prettify.js\n│   ├── sort-arrow-sprite.png\n│   ├── sorter.js\n│   └── unit\n│       ├── index.html // 测试覆盖率报告\n│       └── index.js.html // 覆盖率低的原因\n└── lcov.info\n```\n\n打开`index.js.html`可以看到覆盖率低的原因\n\n![PNG](http://p1cjg886l.bkt.clouddn.com/unit6.png)\n\n从图中可以看到红色部分是测试用例没有覆盖到的地方，旁边的`1x`表示执行了`一次`。因为本文所写的测试用例`HelloWorld.spec.js`很简单没有涉及到逻辑，没有覆盖到这些函数很正常。对于实际开发来说，通过这个清晰的报告，我们可以在代码中看出那些函数，那些代码块没有被执行，从而去分析原因，修正测试用例，完善代码逻辑，提高质量。\n\n\n\n打开`lcov.info`文件可以看到(这里我截取了部分)：\n\n```\nFN:50,getDefault\nFN:51,getModuleExports\nFN:57,(anonymous_7)\nFN:68,(anonymous_8)\n....\nFNF:694\nFNH:207\n....\nFNDA:0,simpleNormalizeChildren\nFNDA:0,normalizeChildren\nFNDA:0,isTextNode\nFNDA:0,normalizeArrayChildren\n.....\nDA:633,2\nDA:635,1\nDA:638,1\n```\n\n`FN`: 代表函数,`50` `51` `57` `68`这些行分布对应源代码中的函数开始的行号\n\n`FNF:694`: 代表一共有694个函数\n\n`FNH:207`: 代表其中207个函数被测试所覆盖\n\n`FNDA:0,isTextNode`: 代表了isTextNode这个函数被执行了0次\n\n`DA`: 代表当前被执行到的次数\n\n...\n\n还有很多解析想要了解可以google\n\n\n\n## 再谈单测\n\n完成以上步骤我觉得我懂单元测试了（可是单元测试不懂我，泪眼朦胧.jpg），但是翻过一座山又遇一条河，这条河让我觉得我又不懂单元测试了：\n\n- 在实际项目中单元测试到底测的是什么？\n- 确定了该测什么之后应该怎么去写测试用例？\n\n![JPG](http://p1cjg886l.bkt.clouddn.com/unit2.jpg)\n\n### 单元测试到底测的是什么\n\n就我的认知来看，这些需要测：\n\n- 和安全相关的代码逻辑\n- 核心的功能模块，函数\n- 短期不会发生变化的 UI 组件\n- 提供外部调用的接口\n\n\n\n### 怎么去写测试用例\n\n真的说不好怎样去写测试用例，很多资料只是告诉你怎么写一个简单的测试用例然后跑起来，但怎样去写一个好的测试用例却不知道。目前我经验少也总结不出什么有用的建议，<u>以后再填坑吧。</u>\n\n\n\n### 什么才是一个好的测试失败报告\n\n1. 你测试的是什么？\n2. 它是做什么的？\n3. 它实际输出了什么？（实际行为）\n4. 它本该输出什么？（预期行为）\n\n\n\n## 最后\n\n本文的代码戳这里[单元测试代码](https://github.com/Evey-huang/unit-vue)","slug":"unit","published":1,"updated":"2018-08-17T07:35:36.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gxj009roaqoe0g3k940","content":"<h2 id=\"什么是单元测试\"><a href=\"#什么是单元测试\" class=\"headerlink\" title=\"什么是单元测试\"></a>什么是单元测试</h2><p>来自维基百科的回答</p>\n<blockquote>\n<p><strong>单元测试</strong>（英语：Unit Testing）又称为<strong>模块测试</strong>, 是针对<strong>程序的最小单元</strong>来进行正确性检验的测试工作。程序单元是应用的最小可测试部件。一个单元可能是单个程序、函数、过程、方法等。</p>\n</blockquote>\n<h2 id=\"需不需要写单测\"><a href=\"#需不需要写单测\" class=\"headerlink\" title=\"需不需要写单测\"></a>需不需要写单测</h2><p>好的单元测试是使你开发的产品走向成功的秘密武器：</p>\n<ol>\n<li><strong>有助于设计</strong>：写单元测试首先给了你一个如何设计 API 的清晰视角。</li>\n<li><strong>特性文档</strong>：单元测试描述和记录了代码所要实现的所有需求。</li>\n<li><strong>检查开发者需求理解程度</strong>：是否开发者足够理解问题，在测试代码里描述了所有的关键需求点？</li>\n<li><strong>QA（质量保证）</strong>：依靠人工 QA 容易出错。</li>\n<li><strong>有助于持续交付</strong>：自动化的 QA 能够自动防止将有缺陷的产品构建并发布上线。</li>\n</ol>\n<p><u><strong>通俗地讲单测可以提高代码质量以及大幅减少bug的存在</strong></u></p>\n<h2 id=\"如何开始\"><a href=\"#如何开始\" class=\"headerlink\" title=\"如何开始\"></a>如何开始</h2><p>既然已经确定了单测的必要性，那么如何开始进行单测呢？</p>\n<h3 id=\"单测工具链\"><a href=\"#单测工具链\" class=\"headerlink\" title=\"单测工具链\"></a>单测工具链</h3><h4 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h4><p>目前比较火的测试框架就是<a href=\"https://jasmine.github.io/\" target=\"_blank\" rel=\"noopener\">jasmine</a>和<a href=\"https://mochajs.org/\" target=\"_blank\" rel=\"noopener\">mocha</a>，这里我选用mocha。</p>\n<h5 id=\"什么是Mocha\"><a href=\"#什么是Mocha\" class=\"headerlink\" title=\"什么是Mocha\"></a>什么是Mocha</h5><p>Mocha 是一个功能丰富的javascript测试框架，可以运行在nodejs和浏览器环境，使异步测试变得简单有趣。mocha 串联运行测试，允许灵活和精确地报告结果，同时映射未捕获的异常用来纠正测试用例。</p>\n<h5 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h5><ul>\n<li>简单</li>\n<li>灵活</li>\n<li>有趣</li>\n</ul>\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g mocha</span><br></pre></td></tr></table></figure>\n<h4 id=\"断言库\"><a href=\"#断言库\" class=\"headerlink\" title=\"断言库\"></a>断言库</h4><p>目前比较流行的断言库主要有以下几个：</p>\n<ul>\n<li><a href=\"http://chaijs.com/\" target=\"_blank\" rel=\"noopener\">chai</a>：<code>BDD/TDD</code> 双模 ，同时支持 <code>should / expect / assert</code> 三种风格的断言库强大插件机制。</li>\n<li><a href=\"https://shouldjs.github.io/\" target=\"_blank\" rel=\"noopener\">shouldjs</a>：<code>BDD</code>风格断言库，由TJ Holowaychuk 发起。</li>\n<li><a href=\"https://github.com/Automattic/expect.js\" target=\"_blank\" rel=\"noopener\">expectjs</a>：追求极简的 <code>BDD</code> 风格断言库，基于 <code>should.js</code> 简化。</li>\n<li><a href=\"https://nodejs.org/dist/latest-v8.x/docs/api/assert.html\" target=\"_blank\" rel=\"noopener\">assert</a>：风格最保守，node 的核心模块，node 环境可以直接使用。</li>\n</ul>\n<p>这里我使用的是<code>Chai</code>，因为mocha+chai是黄金搭档呀</p>\n<h5 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g chai</span><br></pre></td></tr></table></figure>\n<h4 id=\"Mock库\"><a href=\"#Mock库\" class=\"headerlink\" title=\"Mock库\"></a>Mock库</h4><h5 id=\"什么是Mock\"><a href=\"#什么是Mock\" class=\"headerlink\" title=\"什么是Mock\"></a>什么是Mock</h5><p>编写测试的时候，可能需要和系统内的某个模块或系统外某个实体交互，例如数据库读写、邮件发送等。这时就需要使用 mock 技术来模拟。</p>\n<h5 id=\"有哪些Mock库\"><a href=\"#有哪些Mock库\" class=\"headerlink\" title=\"有哪些Mock库\"></a>有哪些Mock库</h5><p><a href=\"http://sinonjs.org/\" target=\"_blank\" rel=\"noopener\">sinon.js</a>：只用过这个，其他不大清楚。sinon允许你把代码中难以被测试的部分替换为更容易测试的内容。</p>\n<h5 id=\"安装-2\"><a href=\"#安装-2\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install sinon</span><br></pre></td></tr></table></figure>\n<h4 id=\"测试集成工具\"><a href=\"#测试集成工具\" class=\"headerlink\" title=\"测试集成工具\"></a>测试集成工具</h4><p><a href=\"https://karma-runner.github.io/\" target=\"_blank\" rel=\"noopener\">karma</a>：Google Angular 团队写的，功能很强大，有很多插件</p>\n<h5 id=\"安装-3\"><a href=\"#安装-3\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install karma --save-dev</span><br></pre></td></tr></table></figure>\n<h3 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h3><p>基于vue-cli脚手架生成的项目模板中可以自动添加测试环境，但是这不利于刚接触单测的同学去学习，以下是我从零开始搭建测试环境的经过。</p>\n<h4 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h4><p>参考另一篇文章<a href=\"https://evey-huang.github.io./2017/12/04/vue-start/\" target=\"_blank\" rel=\"noopener\">新建Vue项目</a>也可以了解新建vue项目的步骤。</p>\n<h5 id=\"安装脚手架\"><a href=\"#安装脚手架\" class=\"headerlink\" title=\"安装脚手架\"></a>安装脚手架</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue-cli -g</span><br></pre></td></tr></table></figure>\n<h5 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h5><p>创建一个名为<code>unit-test</code>的项目</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack unit-test</span><br></pre></td></tr></table></figure>\n<p>然后会有询问</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit1-1.png\" alt=\"PNG\"></p>\n<blockquote>\n<p>这里在询问需不需要加入<code>unit</code>单测的时候选了<code>no</code>是因为本文主要是讲怎样从0开始搭建测试环境，所以创建项目的时候先不考虑加入。</p>\n</blockquote>\n<h5 id=\"进入项目\"><a href=\"#进入项目\" class=\"headerlink\" title=\"进入项目\"></a>进入项目</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd unit-test</span><br></pre></td></tr></table></figure>\n<h5 id=\"启动项目\"><a href=\"#启动项目\" class=\"headerlink\" title=\"启动项目\"></a>启动项目</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>项目正常运行的话可以开始搭建测试环境</p>\n</blockquote>\n<h4 id=\"测试环境搭建\"><a href=\"#测试环境搭建\" class=\"headerlink\" title=\"测试环境搭建\"></a>测试环境搭建</h4><h5 id=\"项目整体结构\"><a href=\"#项目整体结构\" class=\"headerlink\" title=\"项目整体结构\"></a>项目整体结构</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── unit-test/</span><br><span class=\"line\">    │—— build //构建脚本目录</span><br><span class=\"line\">    |     |—— webpack.base.conf.js // wabpack基础配置</span><br><span class=\"line\">    |     |—— webpack.prod.conf.js // wabpack生产环境配置</span><br><span class=\"line\">    |     |—— webpack.test.conf.js // webpack测试环境配置</span><br><span class=\"line\">    |     |—— webpack.dev.conf.js // wabpack开发环境配置</span><br><span class=\"line\">    |     |—— vue-loader.conf.js</span><br><span class=\"line\">    |     |—— utils.js // 构建相关工具方法</span><br><span class=\"line\">    |</span><br><span class=\"line\">    |—— config // 项目配置</span><br><span class=\"line\">    |     |—— dev.env.js // 开发环境变量</span><br><span class=\"line\">    |     |—— prod.env.js // 生产环境变量</span><br><span class=\"line\">    |     |—— test.env.js // 测试环境变量</span><br><span class=\"line\">    |     |—— index.js // 项目配置文件</span><br><span class=\"line\">    |—— src // 源码目录 </span><br><span class=\"line\">    |    |—— components</span><br><span class=\"line\">    |            |—— HelloWorld.vue</span><br><span class=\"line\">    |—— test</span><br><span class=\"line\">    |    |—— unit</span><br><span class=\"line\">    |          |—— coverage //自动生成覆盖文件夹</span><br><span class=\"line\">    |          |—— index.js //测试文件入口</span><br><span class=\"line\">    |          |—— karma.conf.js // karma配置文件</span><br><span class=\"line\">    |          |—— .eslintrc //支持断言书写</span><br><span class=\"line\">    |          |—— specs //测试用例文件夹</span><br><span class=\"line\">    |                |—— HelloWorld.spec.js</span><br><span class=\"line\">    |—— package.json // npm包配置文件，定义了项目的npm脚本，依赖包等信息</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装karma\"><a href=\"#安装karma\" class=\"headerlink\" title=\"安装karma\"></a>安装<code>karma</code></h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install karma --save-dev</span><br></pre></td></tr></table></figure>\n<h5 id=\"进入unit文件夹\"><a href=\"#进入unit文件夹\" class=\"headerlink\" title=\"进入unit文件夹\"></a>进入unit文件夹</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd test/unit/</span><br></pre></td></tr></table></figure>\n<h5 id=\"初始化karma\"><a href=\"#初始化karma\" class=\"headerlink\" title=\"初始化karma\"></a>初始化karma</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">karma init</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit3.png\" alt=\"PNG\"></p>\n<p>这样就生成了一个基本的配置文件<code>karma.conf.js</code></p>\n<h5 id=\"相关文件配置\"><a href=\"#相关文件配置\" class=\"headerlink\" title=\"相关文件配置\"></a>相关文件配置</h5><p><strong>karma.conf.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'../../build/webpack.test.conf'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">config</span>) </span>&#123;</span><br><span class=\"line\">  config.set(&#123;</span><br><span class=\"line\">    browsers: [<span class=\"string\">'PhantomJS'</span>], <span class=\"comment\">// 浏览器</span></span><br><span class=\"line\">    frameworks: [<span class=\"string\">'mocha'</span>, <span class=\"string\">'sinon-chai'</span>, <span class=\"string\">'phantomjs-shim'</span>], <span class=\"comment\">// 测试框架</span></span><br><span class=\"line\">    reporters: [<span class=\"string\">'spec'</span>, <span class=\"string\">'coverage'</span>], <span class=\"comment\">// 测试报告</span></span><br><span class=\"line\">    files: [<span class=\"string\">'./index.js'</span>], <span class=\"comment\">// 测试入口文件</span></span><br><span class=\"line\">    preprocessors: &#123;</span><br><span class=\"line\">      <span class=\"string\">'./index.js'</span>: [<span class=\"string\">'webpack'</span>, <span class=\"string\">'coverage'</span>] <span class=\"comment\">// 处理测试文件</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    webpack: webpackConfig, <span class=\"comment\">// webpack配置</span></span><br><span class=\"line\">    webpackMiddleware: &#123;</span><br><span class=\"line\">      noInfo: <span class=\"literal\">true</span> <span class=\"comment\">// 不显示webpack打包日志信息</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    coverageReporter: &#123; <span class=\"comment\">// 代码覆盖率报告</span></span><br><span class=\"line\">      dir: <span class=\"string\">'./coverage'</span>,</span><br><span class=\"line\">      reporters: [</span><br><span class=\"line\">        &#123; <span class=\"attr\">type</span>: <span class=\"string\">'lcov'</span>, <span class=\"attr\">subdir</span>: <span class=\"string\">'.'</span> &#125;,</span><br><span class=\"line\">        &#123; <span class=\"attr\">type</span>: <span class=\"string\">'text-summary'</span> &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>webpack.test.conf.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>) <span class=\"comment\">// 指定环境需要引入webpack</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = merge(baseWebpackConfig, &#123;</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: utils.styleLoaders()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  devtool: <span class=\"string\">'#inline-source-map'</span>,</span><br><span class=\"line\">  resolveLoader: &#123;</span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">      <span class=\"string\">'scss-loader'</span>: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 指定环境</span></span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">      <span class=\"string\">'process.env'</span>: <span class=\"built_in\">require</span>(<span class=\"string\">'../config/test.env'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// no need for app entry during tests</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> webpackConfig.entry</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = webpackConfig</span><br></pre></td></tr></table></figure>\n<p><strong>webpack.prod.conf.js</strong></p>\n<p>在<code>webpack.prod.conf.js</code>中引用<code>test.env</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> env = process.env.NODE_ENV === <span class=\"string\">'testing'</span></span><br><span class=\"line\">  ? <span class=\"built_in\">require</span>(<span class=\"string\">'../config/test.env'</span>)</span><br><span class=\"line\">  : <span class=\"built_in\">require</span>(<span class=\"string\">'../config/prod.env'</span>)</span><br></pre></td></tr></table></figure>\n<p><strong>test.env.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> devEnv = <span class=\"built_in\">require</span>(<span class=\"string\">'./dev.env'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(devEnv, &#123;</span><br><span class=\"line\">  NODE_ENV: <span class=\"string\">'\"testing\"'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>index.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> testsContext = <span class=\"built_in\">require</span>.context(<span class=\"string\">'./specs'</span>, <span class=\"literal\">true</span>, /\\.spec$/)</span><br><span class=\"line\">testsContext.keys().forEach(testsContext)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> srcContext = <span class=\"built_in\">require</span>.context(<span class=\"string\">'../../src'</span>, <span class=\"literal\">true</span>, /^\\.\\/(?!main(\\.js)?$)/)</span><br><span class=\"line\">srcContext.keys().forEach(srcContext)</span><br></pre></td></tr></table></figure>\n<p><strong>.eclintrc.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"env\"</span>: &#123; </span><br><span class=\"line\">    <span class=\"string\">\"mocha\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"globals\"</span>: &#123; </span><br><span class=\"line\">    <span class=\"string\">\"expect\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"string\">\"sinon\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>package.json</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"scripts\": &#123;</span><br><span class=\"line\">  \"unit\": \"cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\",</span><br><span class=\"line\">  \"test\": \"npm run unit\"</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\"devDependencies\": &#123;</span><br><span class=\"line\">  \"chai\": \"^4.1.2\",</span><br><span class=\"line\">  \"cross-env\": \"^5.0.1\",</span><br><span class=\"line\">  \"karma\": \"^1.7.1\",</span><br><span class=\"line\">  \"karma-mocha\": \"^1.3.0\",</span><br><span class=\"line\">  \"karma-coverage\": \"^1.1.1\",</span><br><span class=\"line\">  \"karma-phantomjs-launcher\": \"^1.0.4\",</span><br><span class=\"line\">  \"karma-phantomjs-shim\": \"^1.4.0\",</span><br><span class=\"line\">  \"karma-sinon-chai\": \"^1.3.1\",</span><br><span class=\"line\">  \"karma-sourcemap-loader\": \"^0.3.7\",</span><br><span class=\"line\">  \"karma-spec-reporter\": \"0.0.31\",</span><br><span class=\"line\">  \"karma-webpack\": \"^2.0.2\",</span><br><span class=\"line\">  \"mocha\": \"^3.2.0\",</span><br><span class=\"line\">  \"sinon\": \"^4.0.0\",</span><br><span class=\"line\">  \"sinon-chai\": \"^2.8.0\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h4 id=\"测试用例\"><a href=\"#测试用例\" class=\"headerlink\" title=\"测试用例\"></a>测试用例</h4><p>官网<a href=\"https://cn.vuejs.org/v2/guide/unit-testing.html\" target=\"_blank\" rel=\"noopener\">vue单元测试</a>有介绍测试用例怎么写，下面是一个简单的测试用例：</p>\n<h5 id=\"简单测试用例\"><a href=\"#简单测试用例\" class=\"headerlink\" title=\"简单测试用例\"></a>简单测试用例</h5><p><strong>HelloWorld.spec.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> HelloWorld <span class=\"keyword\">from</span> <span class=\"string\">'@/components/HelloWorld'</span></span><br><span class=\"line\"></span><br><span class=\"line\">describe(<span class=\"string\">'HelloWorld.vue'</span>, () =&gt; &#123;</span><br><span class=\"line\">  it(<span class=\"string\">'should render correct contents'</span>, () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> Constructor = Vue.extend(HelloWorld)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Constructor().$mount()</span><br><span class=\"line\">    expect(vm.$el.querySelector(<span class=\"string\">'.hello h1'</span>).textContent)</span><br><span class=\"line\">    .to.equal(<span class=\"string\">'Welcome to Your Vue.js App'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  it(<span class=\"string\">'should be Essential Links'</span>, () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> Constructor = Vue.extend(HelloWorld)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Constructor().$mount()</span><br><span class=\"line\">    expect(vm.$el.querySelector(<span class=\"string\">'.hello h2'</span>).textContent)</span><br><span class=\"line\">    .to.equal(<span class=\"string\">'Essential Links'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h5 id=\"运行测试用例\"><a href=\"#运行测试用例\" class=\"headerlink\" title=\"运行测试用例\"></a>运行测试用例</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run test</span><br></pre></td></tr></table></figure>\n<h5 id=\"生成测试报告\"><a href=\"#生成测试报告\" class=\"headerlink\" title=\"生成测试报告\"></a>生成测试报告</h5><p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit4.png\" alt=\"PNG\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit5.png\" alt=\"PNG\"></p>\n<h5 id=\"测试报告分析\"><a href=\"#测试报告分析\" class=\"headerlink\" title=\"测试报告分析\"></a>测试报告分析</h5><p>从图中我们可以看到它有四个指标：</p>\n<ul>\n<li>Statements: 语句覆盖率，执行到每个语句；</li>\n<li>Branches：分支覆盖率，执行到每个if代码块；</li>\n<li>Functions：函数覆盖率，调用到程序中的每一个函数；</li>\n<li>Lines：行覆盖率，执行到程序中的每一行。</li>\n</ul>\n<p>从图中我们也可以看出覆盖率极低，打开<code>coverage</code>文件夹可以看到:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">coverage/</span><br><span class=\"line\">├── lcov-report</span><br><span class=\"line\">│   ├── base.css</span><br><span class=\"line\">│   ├── index.html</span><br><span class=\"line\">│   ├── prettify.css</span><br><span class=\"line\">│   ├── prettify.js</span><br><span class=\"line\">│   ├── sort-arrow-sprite.png</span><br><span class=\"line\">│   ├── sorter.js</span><br><span class=\"line\">│   └── unit</span><br><span class=\"line\">│       ├── index.html // 测试覆盖率报告</span><br><span class=\"line\">│       └── index.js.html // 覆盖率低的原因</span><br><span class=\"line\">└── lcov.info</span><br></pre></td></tr></table></figure>\n<p>打开<code>index.js.html</code>可以看到覆盖率低的原因</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit6.png\" alt=\"PNG\"></p>\n<p>从图中可以看到红色部分是测试用例没有覆盖到的地方，旁边的<code>1x</code>表示执行了<code>一次</code>。因为本文所写的测试用例<code>HelloWorld.spec.js</code>很简单没有涉及到逻辑，没有覆盖到这些函数很正常。对于实际开发来说，通过这个清晰的报告，我们可以在代码中看出那些函数，那些代码块没有被执行，从而去分析原因，修正测试用例，完善代码逻辑，提高质量。</p>\n<p>打开<code>lcov.info</code>文件可以看到(这里我截取了部分)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FN:50,getDefault</span><br><span class=\"line\">FN:51,getModuleExports</span><br><span class=\"line\">FN:57,(anonymous_7)</span><br><span class=\"line\">FN:68,(anonymous_8)</span><br><span class=\"line\">....</span><br><span class=\"line\">FNF:694</span><br><span class=\"line\">FNH:207</span><br><span class=\"line\">....</span><br><span class=\"line\">FNDA:0,simpleNormalizeChildren</span><br><span class=\"line\">FNDA:0,normalizeChildren</span><br><span class=\"line\">FNDA:0,isTextNode</span><br><span class=\"line\">FNDA:0,normalizeArrayChildren</span><br><span class=\"line\">.....</span><br><span class=\"line\">DA:633,2</span><br><span class=\"line\">DA:635,1</span><br><span class=\"line\">DA:638,1</span><br></pre></td></tr></table></figure>\n<p><code>FN</code>: 代表函数,<code>50</code> <code>51</code> <code>57</code> <code>68</code>这些行分布对应源代码中的函数开始的行号</p>\n<p><code>FNF:694</code>: 代表一共有694个函数</p>\n<p><code>FNH:207</code>: 代表其中207个函数被测试所覆盖</p>\n<p><code>FNDA:0,isTextNode</code>: 代表了isTextNode这个函数被执行了0次</p>\n<p><code>DA</code>: 代表当前被执行到的次数</p>\n<p>…</p>\n<p>还有很多解析想要了解可以google</p>\n<h2 id=\"再谈单测\"><a href=\"#再谈单测\" class=\"headerlink\" title=\"再谈单测\"></a>再谈单测</h2><p>完成以上步骤我觉得我懂单元测试了（可是单元测试不懂我，泪眼朦胧.jpg），但是翻过一座山又遇一条河，这条河让我觉得我又不懂单元测试了：</p>\n<ul>\n<li>在实际项目中单元测试到底测的是什么？</li>\n<li>确定了该测什么之后应该怎么去写测试用例？</li>\n</ul>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit2.jpg\" alt=\"JPG\"></p>\n<h3 id=\"单元测试到底测的是什么\"><a href=\"#单元测试到底测的是什么\" class=\"headerlink\" title=\"单元测试到底测的是什么\"></a>单元测试到底测的是什么</h3><p>就我的认知来看，这些需要测：</p>\n<ul>\n<li>和安全相关的代码逻辑</li>\n<li>核心的功能模块，函数</li>\n<li>短期不会发生变化的 UI 组件</li>\n<li>提供外部调用的接口</li>\n</ul>\n<h3 id=\"怎么去写测试用例\"><a href=\"#怎么去写测试用例\" class=\"headerlink\" title=\"怎么去写测试用例\"></a>怎么去写测试用例</h3><p>真的说不好怎样去写测试用例，很多资料只是告诉你怎么写一个简单的测试用例然后跑起来，但怎样去写一个好的测试用例却不知道。目前我经验少也总结不出什么有用的建议，<u>以后再填坑吧。</u></p>\n<h3 id=\"什么才是一个好的测试失败报告\"><a href=\"#什么才是一个好的测试失败报告\" class=\"headerlink\" title=\"什么才是一个好的测试失败报告\"></a>什么才是一个好的测试失败报告</h3><ol>\n<li>你测试的是什么？</li>\n<li>它是做什么的？</li>\n<li>它实际输出了什么？（实际行为）</li>\n<li>它本该输出什么？（预期行为）</li>\n</ol>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>本文的代码戳这里<a href=\"https://github.com/Evey-huang/unit-vue\" target=\"_blank\" rel=\"noopener\">单元测试代码</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是单元测试\"><a href=\"#什么是单元测试\" class=\"headerlink\" title=\"什么是单元测试\"></a>什么是单元测试</h2><p>来自维基百科的回答</p>\n<blockquote>\n<p><strong>单元测试</strong>（英语：Unit Testing）又称为<strong>模块测试</strong>, 是针对<strong>程序的最小单元</strong>来进行正确性检验的测试工作。程序单元是应用的最小可测试部件。一个单元可能是单个程序、函数、过程、方法等。</p>\n</blockquote>\n<h2 id=\"需不需要写单测\"><a href=\"#需不需要写单测\" class=\"headerlink\" title=\"需不需要写单测\"></a>需不需要写单测</h2><p>好的单元测试是使你开发的产品走向成功的秘密武器：</p>\n<ol>\n<li><strong>有助于设计</strong>：写单元测试首先给了你一个如何设计 API 的清晰视角。</li>\n<li><strong>特性文档</strong>：单元测试描述和记录了代码所要实现的所有需求。</li>\n<li><strong>检查开发者需求理解程度</strong>：是否开发者足够理解问题，在测试代码里描述了所有的关键需求点？</li>\n<li><strong>QA（质量保证）</strong>：依靠人工 QA 容易出错。</li>\n<li><strong>有助于持续交付</strong>：自动化的 QA 能够自动防止将有缺陷的产品构建并发布上线。</li>\n</ol>\n<p><u><strong>通俗地讲单测可以提高代码质量以及大幅减少bug的存在</strong></u></p>\n<h2 id=\"如何开始\"><a href=\"#如何开始\" class=\"headerlink\" title=\"如何开始\"></a>如何开始</h2><p>既然已经确定了单测的必要性，那么如何开始进行单测呢？</p>\n<h3 id=\"单测工具链\"><a href=\"#单测工具链\" class=\"headerlink\" title=\"单测工具链\"></a>单测工具链</h3><h4 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h4><p>目前比较火的测试框架就是<a href=\"https://jasmine.github.io/\" target=\"_blank\" rel=\"noopener\">jasmine</a>和<a href=\"https://mochajs.org/\" target=\"_blank\" rel=\"noopener\">mocha</a>，这里我选用mocha。</p>\n<h5 id=\"什么是Mocha\"><a href=\"#什么是Mocha\" class=\"headerlink\" title=\"什么是Mocha\"></a>什么是Mocha</h5><p>Mocha 是一个功能丰富的javascript测试框架，可以运行在nodejs和浏览器环境，使异步测试变得简单有趣。mocha 串联运行测试，允许灵活和精确地报告结果，同时映射未捕获的异常用来纠正测试用例。</p>\n<h5 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h5><ul>\n<li>简单</li>\n<li>灵活</li>\n<li>有趣</li>\n</ul>\n<h5 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g mocha</span><br></pre></td></tr></table></figure>\n<h4 id=\"断言库\"><a href=\"#断言库\" class=\"headerlink\" title=\"断言库\"></a>断言库</h4><p>目前比较流行的断言库主要有以下几个：</p>\n<ul>\n<li><a href=\"http://chaijs.com/\" target=\"_blank\" rel=\"noopener\">chai</a>：<code>BDD/TDD</code> 双模 ，同时支持 <code>should / expect / assert</code> 三种风格的断言库强大插件机制。</li>\n<li><a href=\"https://shouldjs.github.io/\" target=\"_blank\" rel=\"noopener\">shouldjs</a>：<code>BDD</code>风格断言库，由TJ Holowaychuk 发起。</li>\n<li><a href=\"https://github.com/Automattic/expect.js\" target=\"_blank\" rel=\"noopener\">expectjs</a>：追求极简的 <code>BDD</code> 风格断言库，基于 <code>should.js</code> 简化。</li>\n<li><a href=\"https://nodejs.org/dist/latest-v8.x/docs/api/assert.html\" target=\"_blank\" rel=\"noopener\">assert</a>：风格最保守，node 的核心模块，node 环境可以直接使用。</li>\n</ul>\n<p>这里我使用的是<code>Chai</code>，因为mocha+chai是黄金搭档呀</p>\n<h5 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g chai</span><br></pre></td></tr></table></figure>\n<h4 id=\"Mock库\"><a href=\"#Mock库\" class=\"headerlink\" title=\"Mock库\"></a>Mock库</h4><h5 id=\"什么是Mock\"><a href=\"#什么是Mock\" class=\"headerlink\" title=\"什么是Mock\"></a>什么是Mock</h5><p>编写测试的时候，可能需要和系统内的某个模块或系统外某个实体交互，例如数据库读写、邮件发送等。这时就需要使用 mock 技术来模拟。</p>\n<h5 id=\"有哪些Mock库\"><a href=\"#有哪些Mock库\" class=\"headerlink\" title=\"有哪些Mock库\"></a>有哪些Mock库</h5><p><a href=\"http://sinonjs.org/\" target=\"_blank\" rel=\"noopener\">sinon.js</a>：只用过这个，其他不大清楚。sinon允许你把代码中难以被测试的部分替换为更容易测试的内容。</p>\n<h5 id=\"安装-2\"><a href=\"#安装-2\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install sinon</span><br></pre></td></tr></table></figure>\n<h4 id=\"测试集成工具\"><a href=\"#测试集成工具\" class=\"headerlink\" title=\"测试集成工具\"></a>测试集成工具</h4><p><a href=\"https://karma-runner.github.io/\" target=\"_blank\" rel=\"noopener\">karma</a>：Google Angular 团队写的，功能很强大，有很多插件</p>\n<h5 id=\"安装-3\"><a href=\"#安装-3\" class=\"headerlink\" title=\"安装\"></a>安装</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install karma --save-dev</span><br></pre></td></tr></table></figure>\n<h3 id=\"搭建环境\"><a href=\"#搭建环境\" class=\"headerlink\" title=\"搭建环境\"></a>搭建环境</h3><p>基于vue-cli脚手架生成的项目模板中可以自动添加测试环境，但是这不利于刚接触单测的同学去学习，以下是我从零开始搭建测试环境的经过。</p>\n<h4 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h4><p>参考另一篇文章<a href=\"https://evey-huang.github.io./2017/12/04/vue-start/\" target=\"_blank\" rel=\"noopener\">新建Vue项目</a>也可以了解新建vue项目的步骤。</p>\n<h5 id=\"安装脚手架\"><a href=\"#安装脚手架\" class=\"headerlink\" title=\"安装脚手架\"></a>安装脚手架</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue-cli -g</span><br></pre></td></tr></table></figure>\n<h5 id=\"创建项目\"><a href=\"#创建项目\" class=\"headerlink\" title=\"创建项目\"></a>创建项目</h5><p>创建一个名为<code>unit-test</code>的项目</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack unit-test</span><br></pre></td></tr></table></figure>\n<p>然后会有询问</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit1-1.png\" alt=\"PNG\"></p>\n<blockquote>\n<p>这里在询问需不需要加入<code>unit</code>单测的时候选了<code>no</code>是因为本文主要是讲怎样从0开始搭建测试环境，所以创建项目的时候先不考虑加入。</p>\n</blockquote>\n<h5 id=\"进入项目\"><a href=\"#进入项目\" class=\"headerlink\" title=\"进入项目\"></a>进入项目</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd unit-test</span><br></pre></td></tr></table></figure>\n<h5 id=\"启动项目\"><a href=\"#启动项目\" class=\"headerlink\" title=\"启动项目\"></a>启动项目</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>项目正常运行的话可以开始搭建测试环境</p>\n</blockquote>\n<h4 id=\"测试环境搭建\"><a href=\"#测试环境搭建\" class=\"headerlink\" title=\"测试环境搭建\"></a>测试环境搭建</h4><h5 id=\"项目整体结构\"><a href=\"#项目整体结构\" class=\"headerlink\" title=\"项目整体结构\"></a>项目整体结构</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├── unit-test/</span><br><span class=\"line\">    │—— build //构建脚本目录</span><br><span class=\"line\">    |     |—— webpack.base.conf.js // wabpack基础配置</span><br><span class=\"line\">    |     |—— webpack.prod.conf.js // wabpack生产环境配置</span><br><span class=\"line\">    |     |—— webpack.test.conf.js // webpack测试环境配置</span><br><span class=\"line\">    |     |—— webpack.dev.conf.js // wabpack开发环境配置</span><br><span class=\"line\">    |     |—— vue-loader.conf.js</span><br><span class=\"line\">    |     |—— utils.js // 构建相关工具方法</span><br><span class=\"line\">    |</span><br><span class=\"line\">    |—— config // 项目配置</span><br><span class=\"line\">    |     |—— dev.env.js // 开发环境变量</span><br><span class=\"line\">    |     |—— prod.env.js // 生产环境变量</span><br><span class=\"line\">    |     |—— test.env.js // 测试环境变量</span><br><span class=\"line\">    |     |—— index.js // 项目配置文件</span><br><span class=\"line\">    |—— src // 源码目录 </span><br><span class=\"line\">    |    |—— components</span><br><span class=\"line\">    |            |—— HelloWorld.vue</span><br><span class=\"line\">    |—— test</span><br><span class=\"line\">    |    |—— unit</span><br><span class=\"line\">    |          |—— coverage //自动生成覆盖文件夹</span><br><span class=\"line\">    |          |—— index.js //测试文件入口</span><br><span class=\"line\">    |          |—— karma.conf.js // karma配置文件</span><br><span class=\"line\">    |          |—— .eslintrc //支持断言书写</span><br><span class=\"line\">    |          |—— specs //测试用例文件夹</span><br><span class=\"line\">    |                |—— HelloWorld.spec.js</span><br><span class=\"line\">    |—— package.json // npm包配置文件，定义了项目的npm脚本，依赖包等信息</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装karma\"><a href=\"#安装karma\" class=\"headerlink\" title=\"安装karma\"></a>安装<code>karma</code></h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install karma --save-dev</span><br></pre></td></tr></table></figure>\n<h5 id=\"进入unit文件夹\"><a href=\"#进入unit文件夹\" class=\"headerlink\" title=\"进入unit文件夹\"></a>进入unit文件夹</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd test/unit/</span><br></pre></td></tr></table></figure>\n<h5 id=\"初始化karma\"><a href=\"#初始化karma\" class=\"headerlink\" title=\"初始化karma\"></a>初始化karma</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">karma init</span><br></pre></td></tr></table></figure>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit3.png\" alt=\"PNG\"></p>\n<p>这样就生成了一个基本的配置文件<code>karma.conf.js</code></p>\n<h5 id=\"相关文件配置\"><a href=\"#相关文件配置\" class=\"headerlink\" title=\"相关文件配置\"></a>相关文件配置</h5><p><strong>karma.conf.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'../../build/webpack.test.conf'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">config</span>) </span>&#123;</span><br><span class=\"line\">  config.set(&#123;</span><br><span class=\"line\">    browsers: [<span class=\"string\">'PhantomJS'</span>], <span class=\"comment\">// 浏览器</span></span><br><span class=\"line\">    frameworks: [<span class=\"string\">'mocha'</span>, <span class=\"string\">'sinon-chai'</span>, <span class=\"string\">'phantomjs-shim'</span>], <span class=\"comment\">// 测试框架</span></span><br><span class=\"line\">    reporters: [<span class=\"string\">'spec'</span>, <span class=\"string\">'coverage'</span>], <span class=\"comment\">// 测试报告</span></span><br><span class=\"line\">    files: [<span class=\"string\">'./index.js'</span>], <span class=\"comment\">// 测试入口文件</span></span><br><span class=\"line\">    preprocessors: &#123;</span><br><span class=\"line\">      <span class=\"string\">'./index.js'</span>: [<span class=\"string\">'webpack'</span>, <span class=\"string\">'coverage'</span>] <span class=\"comment\">// 处理测试文件</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    webpack: webpackConfig, <span class=\"comment\">// webpack配置</span></span><br><span class=\"line\">    webpackMiddleware: &#123;</span><br><span class=\"line\">      noInfo: <span class=\"literal\">true</span> <span class=\"comment\">// 不显示webpack打包日志信息</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    coverageReporter: &#123; <span class=\"comment\">// 代码覆盖率报告</span></span><br><span class=\"line\">      dir: <span class=\"string\">'./coverage'</span>,</span><br><span class=\"line\">      reporters: [</span><br><span class=\"line\">        &#123; <span class=\"attr\">type</span>: <span class=\"string\">'lcov'</span>, <span class=\"attr\">subdir</span>: <span class=\"string\">'.'</span> &#125;,</span><br><span class=\"line\">        &#123; <span class=\"attr\">type</span>: <span class=\"string\">'text-summary'</span> &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>webpack.test.conf.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>) <span class=\"comment\">// 指定环境需要引入webpack</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = merge(baseWebpackConfig, &#123;</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: utils.styleLoaders()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  devtool: <span class=\"string\">'#inline-source-map'</span>,</span><br><span class=\"line\">  resolveLoader: &#123;</span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">      <span class=\"string\">'scss-loader'</span>: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 指定环境</span></span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">      <span class=\"string\">'process.env'</span>: <span class=\"built_in\">require</span>(<span class=\"string\">'../config/test.env'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// no need for app entry during tests</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> webpackConfig.entry</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = webpackConfig</span><br></pre></td></tr></table></figure>\n<p><strong>webpack.prod.conf.js</strong></p>\n<p>在<code>webpack.prod.conf.js</code>中引用<code>test.env</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> env = process.env.NODE_ENV === <span class=\"string\">'testing'</span></span><br><span class=\"line\">  ? <span class=\"built_in\">require</span>(<span class=\"string\">'../config/test.env'</span>)</span><br><span class=\"line\">  : <span class=\"built_in\">require</span>(<span class=\"string\">'../config/prod.env'</span>)</span><br></pre></td></tr></table></figure>\n<p><strong>test.env.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> devEnv = <span class=\"built_in\">require</span>(<span class=\"string\">'./dev.env'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(devEnv, &#123;</span><br><span class=\"line\">  NODE_ENV: <span class=\"string\">'\"testing\"'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p><strong>index.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.config.productionTip = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> testsContext = <span class=\"built_in\">require</span>.context(<span class=\"string\">'./specs'</span>, <span class=\"literal\">true</span>, /\\.spec$/)</span><br><span class=\"line\">testsContext.keys().forEach(testsContext)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> srcContext = <span class=\"built_in\">require</span>.context(<span class=\"string\">'../../src'</span>, <span class=\"literal\">true</span>, /^\\.\\/(?!main(\\.js)?$)/)</span><br><span class=\"line\">srcContext.keys().forEach(srcContext)</span><br></pre></td></tr></table></figure>\n<p><strong>.eclintrc.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"env\"</span>: &#123; </span><br><span class=\"line\">    <span class=\"string\">\"mocha\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"globals\"</span>: &#123; </span><br><span class=\"line\">    <span class=\"string\">\"expect\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"string\">\"sinon\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>package.json</strong></p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"scripts\": &#123;</span><br><span class=\"line\">  \"unit\": \"cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\",</span><br><span class=\"line\">  \"test\": \"npm run unit\"</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\"devDependencies\": &#123;</span><br><span class=\"line\">  \"chai\": \"^4.1.2\",</span><br><span class=\"line\">  \"cross-env\": \"^5.0.1\",</span><br><span class=\"line\">  \"karma\": \"^1.7.1\",</span><br><span class=\"line\">  \"karma-mocha\": \"^1.3.0\",</span><br><span class=\"line\">  \"karma-coverage\": \"^1.1.1\",</span><br><span class=\"line\">  \"karma-phantomjs-launcher\": \"^1.0.4\",</span><br><span class=\"line\">  \"karma-phantomjs-shim\": \"^1.4.0\",</span><br><span class=\"line\">  \"karma-sinon-chai\": \"^1.3.1\",</span><br><span class=\"line\">  \"karma-sourcemap-loader\": \"^0.3.7\",</span><br><span class=\"line\">  \"karma-spec-reporter\": \"0.0.31\",</span><br><span class=\"line\">  \"karma-webpack\": \"^2.0.2\",</span><br><span class=\"line\">  \"mocha\": \"^3.2.0\",</span><br><span class=\"line\">  \"sinon\": \"^4.0.0\",</span><br><span class=\"line\">  \"sinon-chai\": \"^2.8.0\"</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<h4 id=\"测试用例\"><a href=\"#测试用例\" class=\"headerlink\" title=\"测试用例\"></a>测试用例</h4><p>官网<a href=\"https://cn.vuejs.org/v2/guide/unit-testing.html\" target=\"_blank\" rel=\"noopener\">vue单元测试</a>有介绍测试用例怎么写，下面是一个简单的测试用例：</p>\n<h5 id=\"简单测试用例\"><a href=\"#简单测试用例\" class=\"headerlink\" title=\"简单测试用例\"></a>简单测试用例</h5><p><strong>HelloWorld.spec.js</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> HelloWorld <span class=\"keyword\">from</span> <span class=\"string\">'@/components/HelloWorld'</span></span><br><span class=\"line\"></span><br><span class=\"line\">describe(<span class=\"string\">'HelloWorld.vue'</span>, () =&gt; &#123;</span><br><span class=\"line\">  it(<span class=\"string\">'should render correct contents'</span>, () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> Constructor = Vue.extend(HelloWorld)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Constructor().$mount()</span><br><span class=\"line\">    expect(vm.$el.querySelector(<span class=\"string\">'.hello h1'</span>).textContent)</span><br><span class=\"line\">    .to.equal(<span class=\"string\">'Welcome to Your Vue.js App'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  it(<span class=\"string\">'should be Essential Links'</span>, () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> Constructor = Vue.extend(HelloWorld)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Constructor().$mount()</span><br><span class=\"line\">    expect(vm.$el.querySelector(<span class=\"string\">'.hello h2'</span>).textContent)</span><br><span class=\"line\">    .to.equal(<span class=\"string\">'Essential Links'</span>)</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h5 id=\"运行测试用例\"><a href=\"#运行测试用例\" class=\"headerlink\" title=\"运行测试用例\"></a>运行测试用例</h5><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run test</span><br></pre></td></tr></table></figure>\n<h5 id=\"生成测试报告\"><a href=\"#生成测试报告\" class=\"headerlink\" title=\"生成测试报告\"></a>生成测试报告</h5><p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit4.png\" alt=\"PNG\"></p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit5.png\" alt=\"PNG\"></p>\n<h5 id=\"测试报告分析\"><a href=\"#测试报告分析\" class=\"headerlink\" title=\"测试报告分析\"></a>测试报告分析</h5><p>从图中我们可以看到它有四个指标：</p>\n<ul>\n<li>Statements: 语句覆盖率，执行到每个语句；</li>\n<li>Branches：分支覆盖率，执行到每个if代码块；</li>\n<li>Functions：函数覆盖率，调用到程序中的每一个函数；</li>\n<li>Lines：行覆盖率，执行到程序中的每一行。</li>\n</ul>\n<p>从图中我们也可以看出覆盖率极低，打开<code>coverage</code>文件夹可以看到:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">coverage/</span><br><span class=\"line\">├── lcov-report</span><br><span class=\"line\">│   ├── base.css</span><br><span class=\"line\">│   ├── index.html</span><br><span class=\"line\">│   ├── prettify.css</span><br><span class=\"line\">│   ├── prettify.js</span><br><span class=\"line\">│   ├── sort-arrow-sprite.png</span><br><span class=\"line\">│   ├── sorter.js</span><br><span class=\"line\">│   └── unit</span><br><span class=\"line\">│       ├── index.html // 测试覆盖率报告</span><br><span class=\"line\">│       └── index.js.html // 覆盖率低的原因</span><br><span class=\"line\">└── lcov.info</span><br></pre></td></tr></table></figure>\n<p>打开<code>index.js.html</code>可以看到覆盖率低的原因</p>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit6.png\" alt=\"PNG\"></p>\n<p>从图中可以看到红色部分是测试用例没有覆盖到的地方，旁边的<code>1x</code>表示执行了<code>一次</code>。因为本文所写的测试用例<code>HelloWorld.spec.js</code>很简单没有涉及到逻辑，没有覆盖到这些函数很正常。对于实际开发来说，通过这个清晰的报告，我们可以在代码中看出那些函数，那些代码块没有被执行，从而去分析原因，修正测试用例，完善代码逻辑，提高质量。</p>\n<p>打开<code>lcov.info</code>文件可以看到(这里我截取了部分)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FN:50,getDefault</span><br><span class=\"line\">FN:51,getModuleExports</span><br><span class=\"line\">FN:57,(anonymous_7)</span><br><span class=\"line\">FN:68,(anonymous_8)</span><br><span class=\"line\">....</span><br><span class=\"line\">FNF:694</span><br><span class=\"line\">FNH:207</span><br><span class=\"line\">....</span><br><span class=\"line\">FNDA:0,simpleNormalizeChildren</span><br><span class=\"line\">FNDA:0,normalizeChildren</span><br><span class=\"line\">FNDA:0,isTextNode</span><br><span class=\"line\">FNDA:0,normalizeArrayChildren</span><br><span class=\"line\">.....</span><br><span class=\"line\">DA:633,2</span><br><span class=\"line\">DA:635,1</span><br><span class=\"line\">DA:638,1</span><br></pre></td></tr></table></figure>\n<p><code>FN</code>: 代表函数,<code>50</code> <code>51</code> <code>57</code> <code>68</code>这些行分布对应源代码中的函数开始的行号</p>\n<p><code>FNF:694</code>: 代表一共有694个函数</p>\n<p><code>FNH:207</code>: 代表其中207个函数被测试所覆盖</p>\n<p><code>FNDA:0,isTextNode</code>: 代表了isTextNode这个函数被执行了0次</p>\n<p><code>DA</code>: 代表当前被执行到的次数</p>\n<p>…</p>\n<p>还有很多解析想要了解可以google</p>\n<h2 id=\"再谈单测\"><a href=\"#再谈单测\" class=\"headerlink\" title=\"再谈单测\"></a>再谈单测</h2><p>完成以上步骤我觉得我懂单元测试了（可是单元测试不懂我，泪眼朦胧.jpg），但是翻过一座山又遇一条河，这条河让我觉得我又不懂单元测试了：</p>\n<ul>\n<li>在实际项目中单元测试到底测的是什么？</li>\n<li>确定了该测什么之后应该怎么去写测试用例？</li>\n</ul>\n<p><img src=\"http://p1cjg886l.bkt.clouddn.com/unit2.jpg\" alt=\"JPG\"></p>\n<h3 id=\"单元测试到底测的是什么\"><a href=\"#单元测试到底测的是什么\" class=\"headerlink\" title=\"单元测试到底测的是什么\"></a>单元测试到底测的是什么</h3><p>就我的认知来看，这些需要测：</p>\n<ul>\n<li>和安全相关的代码逻辑</li>\n<li>核心的功能模块，函数</li>\n<li>短期不会发生变化的 UI 组件</li>\n<li>提供外部调用的接口</li>\n</ul>\n<h3 id=\"怎么去写测试用例\"><a href=\"#怎么去写测试用例\" class=\"headerlink\" title=\"怎么去写测试用例\"></a>怎么去写测试用例</h3><p>真的说不好怎样去写测试用例，很多资料只是告诉你怎么写一个简单的测试用例然后跑起来，但怎样去写一个好的测试用例却不知道。目前我经验少也总结不出什么有用的建议，<u>以后再填坑吧。</u></p>\n<h3 id=\"什么才是一个好的测试失败报告\"><a href=\"#什么才是一个好的测试失败报告\" class=\"headerlink\" title=\"什么才是一个好的测试失败报告\"></a>什么才是一个好的测试失败报告</h3><ol>\n<li>你测试的是什么？</li>\n<li>它是做什么的？</li>\n<li>它实际输出了什么？（实际行为）</li>\n<li>它本该输出什么？（预期行为）</li>\n</ol>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>本文的代码戳这里<a href=\"https://github.com/Evey-huang/unit-vue\" target=\"_blank\" rel=\"noopener\">单元测试代码</a></p>\n"},{"title":"vue-cli脚手架webpack模板项目配置文件分析","date":"2017-12-29T08:45:57.000Z","_content":"\n![webpack插图](http://p1cjg886l.bkt.clouddn.com/webpack.jpg)\n\n## 背景\n\n最近学习单元测试配环境的时候一直出错，然后被指点说应该先去学习webpack工作原理再去配环境。然后就去学webpack了，觉得有必要把webpack配置文件的代码解释记录下来，便于学习。\n\n\n\n## 文件结构\n\n```\n└── build\n    └── build.js\n    ├── check-versions.js\n    ├── utils.js\n    ├── vue-loader.conf.js\n    ├── webpack.base.conf.js\n    ├── webpack.dev.conf.js\n    ├── webpack.prod.conf.js\n    └── webpack.test.conf.js\n├── config\n    ├── dev.env.js\n    ├── index.js\n    ├── prod.env.js\n    └── test.env.js\n└── package.json\n```\n\n\n\n## 指令分析\n\n首先看`package.json`里面的`script\t`字段\n\n```js\n\"scripts\": {\n    \"dev\": \"webpack-dev-server --inline --progress --config build/webpack.dev.conf.js\",\n    \"start\": \"npm run dev\",\n    \"unit\": \"cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\",\n    \"test\": \"npm run unit\",\n    \"lint\": \"eslint --ext .js,.vue src\",\n    \"build\": \"node build/build.js\"\n},\n```\n\n先看`build`和`dev`。运行`npm run dev`时执行的是`build/webpack.dev.conf.js`，运行`npm run build`执行的是`build/build.js`，然后可以先从这两个文件开始分析。\n\n\n\n## build文件夹分析\n\n### webpack.dev.conf.js\n\n开发环境下执行`npm run dev`的时候最先执行`build/webpack.dev.conf.js`文件，该文件主要做以下几件事：\n\n1. 合并基础的webpack配置\n2. 配置webpack插件\n\n代码注释：\n\n```js\n'use strict'\nconst utils = require('./utils')\nconst webpack = require('webpack')\nconst config = require('../config')\nconst merge = require('webpack-merge') // 一个可以合并数组和对象的插件\nconst baseWebpackConfig = require('./webpack.base.conf') // 合并webpack基础配置\nconst HtmlWebpackPlugin = require('html-webpack-plugin') // 一个用于生成HTML文件并自动注入依赖文件（link/script）的webpack插件\nconst FriendlyErrorsPlugin = require('friendly-errors-webpack-plugin') // 用于更友好地输出webpack的警告、错误等信息\nconst portfinder = require('portfinder')\n\nconst HOST = process.env.HOST\nconst PORT = process.env.PORT && Number(process.env.PORT)\n\nconst devWebpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap, usePostCSS: true })\n  },\n  // cheap-module-eval-source-map is faster for development\n  devtool: config.dev.devtool,\n\n  // these devServer options should be customized in /config/index.js\n  devServer: {\n    clientLogLevel: 'warning',\n    historyApiFallback: true,\n    hot: true,\n    compress: true,\n    host: HOST || config.dev.host,\n    port: PORT || config.dev.port,\n    open: config.dev.autoOpenBrowser,\n    overlay: config.dev.errorOverlay\n      ? { warnings: false, errors: true }\n      : false,\n    publicPath: config.dev.assetsPublicPath,\n    proxy: config.dev.proxyTable,\n    quiet: true, // necessary for FriendlyErrorsPlugin\n    watchOptions: {\n      poll: config.dev.poll,\n    }\n  },\n  // 配置webpack插件\n  plugins: [\n    // \n    new webpack.DefinePlugin({\n      'process.env': require('../config/dev.env')\n    }),\n    new webpack.HotModuleReplacementPlugin(), // 热更新\n    new webpack.NamedModulesPlugin(), // HMR shows correct file names in console on update.\n    new webpack.NoEmitOnErrorsPlugin(),\n    // https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({ // 后页面中的报错不会阻塞，但是会在编译结束后报错\n      filename: 'index.html',\n      template: 'index.html',\n      inject: true\n    }),\n  ]\n})\n\nmodule.exports = new Promise((resolve, reject) => {\n  portfinder.basePort = process.env.PORT || config.dev.port\n  portfinder.getPort((err, port) => {\n    if (err) {\n      reject(err)\n    } else {\n      // publish the new Port, necessary for e2e tests\n      process.env.PORT = port\n      // add port to devServer config\n      devWebpackConfig.devServer.port = port\n\n      // Add FriendlyErrorsPlugin\n      devWebpackConfig.plugins.push(new FriendlyErrorsPlugin({\n        compilationSuccessInfo: {\n          messages: [`Your application is running here: http://${devWebpackConfig.devServer.host}:${port}`],\n        },\n        onErrors: config.dev.notifyOnErrors\n        ? utils.createNotifierCallback()\n        : undefined\n      }))\n\n      resolve(devWebpackConfig)\n    }\n  })\n})\n\n```\n\n\n\n### webpack.base.conf.js\n\n从`webpack.dev.conf.js`代码中看到，使用的webpack配置来自`webpack.base.conf.js`文件，所以先分析`webpack.base.conf.js`，这个文件主要完成以下这些事情：\n\n1. 配置webpack编译入口\n2. 配置webpack输出路径和命名规则\n3. 配置模块resolve规则\n4. 配置不同类型模块的处理规则\n\n\n\n代码注释：\n\n```js\n'use strict'\nconst path = require('path')\nconst utils = require('./utils')\nconst config = require('../config')\nconst vueLoaderConfig = require('./vue-loader.conf')\n\n// 给出正确的绝对路径\nfunction resolve (dir) {\n  return path.join(__dirname, '..', dir)\n}\n\nconst createLintingRule = () => ({\n  test: /\\.(js|vue)$/,\n  loader: 'eslint-loader',\n  enforce: 'pre',\n  include: [resolve('src'), resolve('test')],\n  options: {\n    formatter: require('eslint-friendly-formatter'),\n    emitWarning: !config.dev.showEslintErrorsInOverlay\n  }\n})\n\nmodule.exports = {\n  context: path.resolve(__dirname, '../'),\n  // 配置webpack编译入口\n  entry: {\n    app: './src/main.js'\n  },\n  // 配置webpack输出路径和命名规则\n  output: {\n    path: config.build.assetsRoot, // webpack输出的目标文件夹路径\n    filename: '[name].js', // webpack输出bundle文件命名格式\n    // webpack编译输出的发布路径\n    publicPath: process.env.NODE_ENV === 'production'\n      ? config.build.assetsPublicPath\n      : config.dev.assetsPublicPath\n  },\n  // 配置模块resolve的规则\n  resolve: {\n    extensions: ['.js', '.vue', '.json'], // 自动resolve的扩展名\n    // 创建路径别名\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src'),\n    }\n  },\n  // 配置不同类型模块的处理规则\n  module: {\n    rules: [\n      ...(config.dev.useEslint ? [createLintingRule()] : []),\n      // 对所有.vue文件使用vue-loader\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        options: vueLoaderConfig\n      },\n      // 对src和test文件夹下的.js文件使用babel-loader\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        include: [resolve('src'), resolve('test')]\n      },\n      // 对图片资源文件使用url-loader，options.name指明了输出的命名规则\n      {\n        test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('img/[name].[hash:7].[ext]')\n        }\n      },\n      // 对音频资源文件使用url-loader，options.name指明了输出的命名规则\n      {\n        test: /\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('media/[name].[hash:7].[ext]')\n        }\n      },\n      // 对字体资源文件使用url-loader，options.name指明了输出的命名规则\n      {\n        test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('fonts/[name].[hash:7].[ext]')\n        }\n      }\n    ]\n  },\n  node: {\n    // prevent webpack from injecting useless setImmediate polyfill because Vue\n    // source contains it (although only uses it if it's native).\n    setImmediate: false,\n    // prevent webpack from injecting mocks to Node native modules\n    // that does not make sense for the client\n    dgram: 'empty',\n    fs: 'empty',\n    net: 'empty',\n    tls: 'empty',\n    child_process: 'empty'\n  }\n}\n\n```\n\n\n\n### utils.js和vue-loader.conf.js\n\n从上面的代码可以看出使用了`utils.js`和`vue-loader.conf.js`这两个文件，`utils.js`主要完成以下三件事：\n\n1. 配置静态资源路径\n2. 生成cssLoader用于加载.vue文件中的样式\n3. 生成styleLoaders用于加载不在.vue文件中的单独存在的样式文件\n\n\n\n代码注释：\n\n```js\n'use strict'\nconst path = require('path')\nconst config = require('../config')\nconst ExtractTextPlugin = require('extract-text-webpack-plugin')\nconst packageConfig = require('../package.json')\n\nexports.assetsPath = function (_path) {\n  const assetsSubDirectory = process.env.NODE_ENV === 'production'\n    ? config.build.assetsSubDirectory\n    : config.dev.assetsSubDirectory\n\n  return path.posix.join(assetsSubDirectory, _path)\n}\n\nexports.cssLoaders = function (options) {\n  options = options || {}\n\n  const cssLoader = {\n    loader: 'css-loader',\n    options: {\n      sourceMap: options.sourceMap\n    }\n  }\n\n  const postcssLoader = {\n    loader: 'postcss-loader',\n    options: {\n      sourceMap: options.sourceMap\n    }\n  }\n\n  // generate loader string to be used with extract text plugin\n  // 生成与提取文本插件一起使用的加载器字符串\n  function generateLoaders (loader, loaderOptions) {\n    const loaders = options.usePostCSS ? [cssLoader, postcssLoader] : [cssLoader]\n\n    if (loader) {\n      loaders.push({\n        loader: loader + '-loader',\n        options: Object.assign({}, loaderOptions, {\n          sourceMap: options.sourceMap\n        })\n      })\n    }\n\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    // 在指定该选项时提取CSS\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        fallback: 'vue-style-loader'\n      })\n    } else {\n      return ['vue-style-loader'].concat(loaders)\n    }\n  }\n\n  // https://vue-loader.vuejs.org/en/configurations/extract-css.html\n  return {\n    css: generateLoaders(),\n    postcss: generateLoaders(),\n    less: generateLoaders('less'),\n    sass: generateLoaders('sass', { indentedSyntax: true }),\n    scss: generateLoaders('sass'),\n    stylus: generateLoaders('stylus'),\n    styl: generateLoaders('stylus')\n  }\n}\n\n// Generate loaders for standalone style files (outside of .vue)\n//为独立样式文件生成装载器（.vue之外）\nexports.styleLoaders = function (options) {\n  const output = []\n  const loaders = exports.cssLoaders(options)\n\n  for (const extension in loaders) {\n    const loader = loaders[extension]\n    output.push({\n      test: new RegExp('\\\\.' + extension + '$'),\n      use: loader\n    })\n  }\n\n  return output\n}\n\nexports.createNotifierCallback = () => {\n  const notifier = require('node-notifier')\n\n  return (severity, errors) => {\n    if (severity !== 'error') return\n\n    const error = errors[0]\n    const filename = error.file && error.file.split('!').pop()\n\n    notifier.notify({\n      title: packageConfig.name,\n      message: severity + ': ' + error.name,\n      subtitle: filename || '',\n      icon: path.join(__dirname, 'logo.png')\n    })\n  }\n}\n\n```\n\n\n\n`vue-loader.js`只配置了css加载器以及配置资源路径。\n\n代码注释：\n\n```js\n'use strict'\nconst utils = require('./utils')\nconst config = require('../config')\nconst isProduction = process.env.NODE_ENV === 'production'\nconst sourceMapEnabled = isProduction\n  ? config.build.productionSourceMap\n  : config.dev.cssSourceMap\n\nmodule.exports = {\n  // css加载器\n  loaders: utils.cssLoaders({\n    sourceMap: sourceMapEnabled,\n    extract: isProduction\n  }),\n  cssSourceMap: sourceMapEnabled, // 源码\n  cacheBusting: config.dev.cacheBusting, // 缓存\n  // 配置资源路径\n  transformToRequire: {\n    video: ['src', 'poster'],\n    source: 'src',\n    img: 'src',\n    image: 'xlink:href'\n  }\n}\n\n```\n\n\n\n### build.js\n\n开发环境下的配置讲完了，接下来讲构建环境下的配置，构建环境下执行`npm run build`的时候首先执行的是`build.js`文件，`build.js`文件主要做以下几件事：\n\n1. loading动画\n2. 删除创建目标文件夹\n3. webpack编译\n4. 输出信息\n\n\n\n代码注释：\n\n```js\n'use strict'\nrequire('./check-versions')() // 检查nodejs和npm版本\n\nprocess.env.NODE_ENV = 'production' // 当前环境为生产环境\n\n// 一个可以调用默认软件打开网址、图片、文件等内容的插件，\nconst ora = require('ora')\nconst rm = require('rimraf')\nconst path = require('path')\nconst chalk = require('chalk') // 用于在控制台输出带颜色字体的插件\nconst webpack = require('webpack')\nconst config = require('../config')\nconst webpackConfig = require('./webpack.prod.conf') // 引入生产环境webpack配置\n\nconst spinner = ora('building for production...')\nspinner.start() // 开启loading动画\n\nrm(path.join(config.build.assetsRoot, config.build.assetsSubDirectory), err => { // 递归删除旧的目标文件夹\n  if (err) throw err\n  webpack(webpackConfig, (err, stats) => { // webpack编译\n    spinner.stop() // 停止loading动画\n    if (err) throw err // 没有出错则输出相关信息\n    process.stdout.write(stats.toString({\n      colors: true,\n      modules: false,\n      children: false, // if you are using ts-loader, setting this to true will make tyescript errors show up during build\n      chunks: false,\n      chunkModules: false\n    }) + '\\n\\n')\n\n    if (stats.hasErrors()) {\n      console.log(chalk.red('  Build failed with errors.\\n'))\n      process.exit(1)\n    }\n\n    console.log(chalk.cyan('  Build complete.\\n'))\n    console.log(chalk.yellow(\n      '  Tip: built files are meant to be served over an HTTP server.\\n' +\n      '  Opening index.html over file:// won\\'t work.\\n'\n    ))\n  })\n})\n\n```\n\n\n\n### webpack.prod.conf.js\n\n构建的时候用到的webpack配置来自`webpack.prod.conf.js`，这个文件主要完成以下几件事：\n\n1. 合并基础的webpack配置\n2. gzip模式下的webpack插件配置\n3. 配置webpack插件\n\n代码注释：\n\n```js\n'use strict'\nconst path = require('path')\nconst utils = require('./utils')\nconst webpack = require('webpack')\nconst config = require('../config')\nconst merge = require('webpack-merge')\nconst baseWebpackConfig = require('./webpack.base.conf')\nconst CopyWebpackPlugin = require('copy-webpack-plugin')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst ExtractTextPlugin = require('extract-text-webpack-plugin') // 用于从webpack生成的bundle中提取文本到特定文件中的插件，可以抽取出css，js文件将其与webpack输出的bundle分离\nconst OptimizeCSSPlugin = require('optimize-css-assets-webpack-plugin')\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin')\n\nconst env = process.env.NODE_ENV === 'testing'\n  ? require('../config/test.env')\n  : require('../config/prod.env')\n// 合并基础的webpack配置\nconst webpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({\n      sourceMap: config.build.productionSourceMap,\n      extract: true,\n      usePostCSS: true\n    })\n  },\n  devtool: config.build.productionSourceMap ? config.build.devtool : false,\n  // 配置webpack的输出\n  output: {\n    path: config.build.assetsRoot, // 编译输出目录\n    filename: utils.assetsPath('js/[name].[chunkhash].js'), // 编译输出文件名格式\n    chunkFilename: utils.assetsPath('js/[id].[chunkhash].js') // 没有指定输出名的文件输出的文件名格式\n  },\n// 配置webpack插件\n  plugins: [\n    // http://vuejs.github.io/vue-loader/en/workflow/production.html\n    new webpack.DefinePlugin({\n      'process.env': env\n    }),\n    // 丑化压缩代码插件\n    new UglifyJsPlugin({\n      uglifyOptions: {\n        compress: {\n          warnings: false\n        }\n      },\n      sourceMap: config.build.productionSourceMap,\n      parallel: true\n    }),\n    // extract css into its own file  抽离css文件\n    new ExtractTextPlugin({\n      filename: utils.assetsPath('css/[name].[contenthash].css'),\n      // Setting the following option to `false` will not extract CSS from codesplit chunks.\n      // Their CSS will instead be inserted dynamically with style-loader when the codesplit chunk has been loaded by webpack.\n      // It's currently set to `true` because we are seeing that sourcemaps are included in the codesplit bundle as well when it's `false`, \n      // increasing file size: https://github.com/vuejs-templates/webpack/issues/1110\n      allChunks: true,\n    }),\n    // Compress extracted CSS. We are using this plugin so that possible\n    // duplicated CSS from different components can be deduped.\n    new OptimizeCSSPlugin({\n      cssProcessorOptions: config.build.productionSourceMap\n        ? { safe: true, map: { inline: false } }\n        : { safe: true }\n    }),\n    // generate dist index.html with correct asset hash for caching.\n    // you can customize output by editing /index.html\n    // see https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: config.build.index,\n      template: 'index.html',\n      inject: true,\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeAttributeQuotes: true\n        // more options:\n        // https://github.com/kangax/html-minifier#options-quick-reference\n      },\n      // necessary to consistently work with multiple chunks via CommonsChunkPlugin\n      chunksSortMode: 'dependency'\n    }),\n    // keep module.id stable when vender modules does not change\n    new webpack.HashedModuleIdsPlugin(),\n    // enable scope hoisting\n    new webpack.optimize.ModuleConcatenationPlugin(),\n    // split vendor js into its own file\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'vendor',\n      minChunks (module) {\n        // any required modules inside node_modules are extracted to vendor\n        return (\n          module.resource &&\n          /\\.js$/.test(module.resource) &&\n          module.resource.indexOf(\n            path.join(__dirname, '../node_modules')\n          ) === 0\n        )\n      }\n    }),\n    // extract webpack runtime and module manifest to its own file in order to\n    // prevent vendor hash from being updated whenever app bundle is updated\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'manifest',\n      minChunks: Infinity\n    }),\n    // This instance extracts shared chunks from code splitted chunks and bundles them\n    // in a separate chunk, similar to the vendor chunk\n    // see: https://webpack.js.org/plugins/commons-chunk-plugin/#extra-async-commons-chunk\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'app',\n      async: 'vendor-async',\n      children: true,\n      minChunks: 3\n    }),\n\n    // copy custom static assets\n    new CopyWebpackPlugin([\n      {\n        from: path.resolve(__dirname, '../static'),\n        to: config.build.assetsSubDirectory,\n        ignore: ['.*']\n      }\n    ])\n  ]\n})\n// gzip模式下需要引入compression插件进行压缩\nif (config.build.productionGzip) {\n  const CompressionWebpackPlugin = require('compression-webpack-plugin')\n\n  webpackConfig.plugins.push(\n    new CompressionWebpackPlugin({\n      asset: '[path].gz[query]',\n      algorithm: 'gzip',\n      test: new RegExp(\n        '\\\\.(' +\n        config.build.productionGzipExtensions.join('|') +\n        ')$'\n      ),\n      threshold: 10240,\n      minRatio: 0.8\n    })\n  )\n}\n\nif (config.build.bundleAnalyzerReport) {\n  const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin\n  webpackConfig.plugins.push(new BundleAnalyzerPlugin())\n}\n\nmodule.exports = webpackConfig\n\n```\n\n\n\n### check-versions.js\n\n从`build.js`文件可以看出引用了`check-versions.js`，从名字可以看出这个文件大概做的事情就是确认`npm`和`node`版本。\n\n代码注释：\n\n```js\n'use strict'\nconst chalk = require('chalk') // 用于在控制台输出带颜色字体的插件\nconst semver = require('semver') // 语义化版本检查插件\nconst packageConfig = require('../package.json') // 引入package.json\nconst shell = require('shelljs') // 执行Unix命令行的插件\n// 开辟子进程执行指令cmd并返回结果\nfunction exec (cmd) {\n  return require('child_process').execSync(cmd).toString().trim()\n}\n// node和npm版本需求\nconst versionRequirements = [\n  {\n    name: 'node',\n    currentVersion: semver.clean(process.version),\n    versionRequirement: packageConfig.engines.node\n  }\n]\nif (shell.which('npm')) {\n  versionRequirements.push({\n    name: 'npm',\n    currentVersion: exec('npm --version'),\n    versionRequirement: packageConfig.engines.npm\n  })\n}\n\nmodule.exports = function () {\n  const warnings = []\n// 依次判断版本是否符合要求\n  for (let i = 0; i < versionRequirements.length; i++) {\n    const mod = versionRequirements[i]\n\n    if (!semver.satisfies(mod.currentVersion, mod.versionRequirement)) {\n      warnings.push(mod.name + ': ' +\n        chalk.red(mod.currentVersion) + ' should be ' +\n        chalk.green(mod.versionRequirement)\n      )\n    }\n  }\n// 如果有警告则将其输出到控制台\n  if (warnings.length) {\n    console.log('')\n    console.log(chalk.yellow('To use this template, you must update following to modules:'))\n    console.log()\n\n    for (let i = 0; i < warnings.length; i++) {\n      const warning = warnings[i]\n      console.log('  ' + warning)\n    }\n\n    console.log()\n    process.exit(1)\n  }\n}\n\n```\n\n\n\n### webpack.test.conf.js\n\n这个文件是单元测试环境的webpack配置文件,该配置是在`webpack.base.conf.js`的基础上做进一步完善。\n\n代码注释：\n\n```js\n'use strict'\n\nconst utils = require('./utils')\nconst webpack = require('webpack')\nconst merge = require('webpack-merge')\nconst baseWebpackConfig = require('./webpack.base.conf')\n// 合并基础的webpack配置\nconst webpackConfig = merge(baseWebpackConfig, {\n  devtool: '#inline-source-map',\n  resolveLoader: {\n    alias: {\n      'scss-loader': 'sass-loader'\n    }\n  },\n  // 配置webpack插件\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': require('../config/test.env')\n    })\n  ]\n})\n\n// no need for app entry during tests\ndelete webpackConfig.entry\n\nmodule.exports = webpackConfig\n\n```\n\n\n\n## config文件夹分析\n\n### index.js\n\nconfig文件夹下最主要的文件是`index.js`，在这里面描述了三种环境下的配置，分别为开发、构建和测试。\n\n代码注释：\n\n```js\n'use strict'\n// Template version: 1.2.7\n// see http://vuejs-templates.github.io/webpack for documentation.\n\nconst path = require('path')\n\nmodule.exports = {\n  // 开发过程中使用的配置\n  dev: {\n\n    // Paths\n    assetsSubDirectory: 'static', // webpack编译输出的二级文件夹\n    assetsPublicPath: '/', // webpack编译输出的发布路径\n    proxyTable: {},// 请求代理表，在这里可以配置特定的请求代理到对应的API接口，例如将'/api/xxx'代理到'www.example.com/api/xxx'\n\n    // Various Dev Server settings\n    // 各种开发服务器设置\n    host: 'localhost', // can be overwritten by process.env.HOST\n    port: 8080, // can be overwritten by process.env.PORT, if port is in use, a free one will be determined\n    autoOpenBrowser: false, // 启动dev-server之后不自动打开浏览器\n    errorOverlay: true,\n    notifyOnErrors: true,\n    poll: false, // https://webpack.js.org/configuration/dev-server/#devserver-watchoptions-\n\n    // Use Eslint Loader?\n    // If true, your code will be linted during bundling and\n    // linting errors and warnings will be shown in the console.\n    useEslint: true,\n    // If true, eslint errors and warnings will also be shown in the error overlay\n    // in the browser.\n    showEslintErrorsInOverlay: false,\n\n    /**\n     * Source Maps\n     */\n\n    // https://webpack.js.org/configuration/devtool/#development\n    devtool: 'eval-source-map',\n\n    // If you have problems debugging vue-files in devtools,\n    // set this to false - it *may* help\n    // https://vue-loader.vuejs.org/en/options.html#cachebusting\n    cacheBusting: true,\n\n    // CSS Sourcemaps off by default because relative paths are \"buggy\"\n    // with this option, according to the CSS-Loader README\n    // (https://github.com/webpack/css-loader#sourcemaps)\n    // In our experience, they generally work as expected,\n    // just be aware of this issue when enabling this option.\n    cssSourceMap: false,\n  },\n// 构建产品时使用的配置\n  build: {\n    // Template for index.html\n    index: path.resolve(__dirname, '../dist/index.html'), // 编译输入的index.html文件\n\n    // Paths\n    assetsRoot: path.resolve(__dirname, '../dist'), // webpack输出的目标文件夹路径\n    assetsSubDirectory: 'static', // webpack编译输出的二级文件夹\n    assetsPublicPath: '/', // webpack编译输出的发布路径\n\n    /**\n     * Source Maps\n     */\n\n    productionSourceMap: true,\n    // https://webpack.js.org/configuration/devtool/#production\n    devtool: '#source-map',\n\n    // Gzip off by default as many popular static hosts such as\n    // Surge or Netlify already gzip all static assets for you.\n    // Before setting to `true`, make sure to:\n    // npm install --save-dev compression-webpack-plugin\n    productionGzip: false,\n    productionGzipExtensions: ['js', 'css'], // gzip模式下需要压缩的文件的扩展名\n\n    // Run the build command with an extra argument to\n    // View the bundle analyzer report after build finishes:\n    // `npm run build --report`\n    // Set to `true` or `false` to always turn it on or off\n    bundleAnalyzerReport: process.env.npm_config_report\n  }\n}\n\n```\n\n\n\n### dev.env.js、prod.env.js和test.env.js\n\n这三个文件分别设置了开发环境、构建环境以及测试环境的环境变量\n\n#### dev.env.js\n\n```js\n// 设置了开发环境的环境变量\n'use strict'\nconst merge = require('webpack-merge')\nconst prodEnv = require('./prod.env')\n\nmodule.exports = merge(prodEnv, {\n  NODE_ENV: '\"development\"'\n})\n```\n\n#### prod.env.js\n\n```js\n// 设置了生产环境的环境变量\n'use strict'\nmodule.exports = {\n  NODE_ENV: '\"production\"'\n}\n```\n\n#### test.env.js\n\n```js\n// 设置了测试环境的环境变量\n'use strict'\nconst merge = require('webpack-merge')\nconst devEnv = require('./dev.env')\n\nmodule.exports = merge(devEnv, {\n  NODE_ENV: '\"testing\"'\n})\n\n```\n\n\n\n## 结语\n\nwebpack没有想的这么难也没想的这么简单。坊间流传webpack不难，难的是配置。可以把官网文档看一遍然后跟着指南敲一遍，去体会这个打包流程的奥妙，大概能学到些什么。[webpack中文文档](https://doc.webpack-china.org/concepts/)","source":"_posts/webpack.md","raw":"---\ntitle: vue-cli脚手架webpack模板项目配置文件分析\ndate: 2017-12-29 16:45:57\ntags: [webpack, vue]\ncategories: vue\n---\n\n![webpack插图](http://p1cjg886l.bkt.clouddn.com/webpack.jpg)\n\n## 背景\n\n最近学习单元测试配环境的时候一直出错，然后被指点说应该先去学习webpack工作原理再去配环境。然后就去学webpack了，觉得有必要把webpack配置文件的代码解释记录下来，便于学习。\n\n\n\n## 文件结构\n\n```\n└── build\n    └── build.js\n    ├── check-versions.js\n    ├── utils.js\n    ├── vue-loader.conf.js\n    ├── webpack.base.conf.js\n    ├── webpack.dev.conf.js\n    ├── webpack.prod.conf.js\n    └── webpack.test.conf.js\n├── config\n    ├── dev.env.js\n    ├── index.js\n    ├── prod.env.js\n    └── test.env.js\n└── package.json\n```\n\n\n\n## 指令分析\n\n首先看`package.json`里面的`script\t`字段\n\n```js\n\"scripts\": {\n    \"dev\": \"webpack-dev-server --inline --progress --config build/webpack.dev.conf.js\",\n    \"start\": \"npm run dev\",\n    \"unit\": \"cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\",\n    \"test\": \"npm run unit\",\n    \"lint\": \"eslint --ext .js,.vue src\",\n    \"build\": \"node build/build.js\"\n},\n```\n\n先看`build`和`dev`。运行`npm run dev`时执行的是`build/webpack.dev.conf.js`，运行`npm run build`执行的是`build/build.js`，然后可以先从这两个文件开始分析。\n\n\n\n## build文件夹分析\n\n### webpack.dev.conf.js\n\n开发环境下执行`npm run dev`的时候最先执行`build/webpack.dev.conf.js`文件，该文件主要做以下几件事：\n\n1. 合并基础的webpack配置\n2. 配置webpack插件\n\n代码注释：\n\n```js\n'use strict'\nconst utils = require('./utils')\nconst webpack = require('webpack')\nconst config = require('../config')\nconst merge = require('webpack-merge') // 一个可以合并数组和对象的插件\nconst baseWebpackConfig = require('./webpack.base.conf') // 合并webpack基础配置\nconst HtmlWebpackPlugin = require('html-webpack-plugin') // 一个用于生成HTML文件并自动注入依赖文件（link/script）的webpack插件\nconst FriendlyErrorsPlugin = require('friendly-errors-webpack-plugin') // 用于更友好地输出webpack的警告、错误等信息\nconst portfinder = require('portfinder')\n\nconst HOST = process.env.HOST\nconst PORT = process.env.PORT && Number(process.env.PORT)\n\nconst devWebpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap, usePostCSS: true })\n  },\n  // cheap-module-eval-source-map is faster for development\n  devtool: config.dev.devtool,\n\n  // these devServer options should be customized in /config/index.js\n  devServer: {\n    clientLogLevel: 'warning',\n    historyApiFallback: true,\n    hot: true,\n    compress: true,\n    host: HOST || config.dev.host,\n    port: PORT || config.dev.port,\n    open: config.dev.autoOpenBrowser,\n    overlay: config.dev.errorOverlay\n      ? { warnings: false, errors: true }\n      : false,\n    publicPath: config.dev.assetsPublicPath,\n    proxy: config.dev.proxyTable,\n    quiet: true, // necessary for FriendlyErrorsPlugin\n    watchOptions: {\n      poll: config.dev.poll,\n    }\n  },\n  // 配置webpack插件\n  plugins: [\n    // \n    new webpack.DefinePlugin({\n      'process.env': require('../config/dev.env')\n    }),\n    new webpack.HotModuleReplacementPlugin(), // 热更新\n    new webpack.NamedModulesPlugin(), // HMR shows correct file names in console on update.\n    new webpack.NoEmitOnErrorsPlugin(),\n    // https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({ // 后页面中的报错不会阻塞，但是会在编译结束后报错\n      filename: 'index.html',\n      template: 'index.html',\n      inject: true\n    }),\n  ]\n})\n\nmodule.exports = new Promise((resolve, reject) => {\n  portfinder.basePort = process.env.PORT || config.dev.port\n  portfinder.getPort((err, port) => {\n    if (err) {\n      reject(err)\n    } else {\n      // publish the new Port, necessary for e2e tests\n      process.env.PORT = port\n      // add port to devServer config\n      devWebpackConfig.devServer.port = port\n\n      // Add FriendlyErrorsPlugin\n      devWebpackConfig.plugins.push(new FriendlyErrorsPlugin({\n        compilationSuccessInfo: {\n          messages: [`Your application is running here: http://${devWebpackConfig.devServer.host}:${port}`],\n        },\n        onErrors: config.dev.notifyOnErrors\n        ? utils.createNotifierCallback()\n        : undefined\n      }))\n\n      resolve(devWebpackConfig)\n    }\n  })\n})\n\n```\n\n\n\n### webpack.base.conf.js\n\n从`webpack.dev.conf.js`代码中看到，使用的webpack配置来自`webpack.base.conf.js`文件，所以先分析`webpack.base.conf.js`，这个文件主要完成以下这些事情：\n\n1. 配置webpack编译入口\n2. 配置webpack输出路径和命名规则\n3. 配置模块resolve规则\n4. 配置不同类型模块的处理规则\n\n\n\n代码注释：\n\n```js\n'use strict'\nconst path = require('path')\nconst utils = require('./utils')\nconst config = require('../config')\nconst vueLoaderConfig = require('./vue-loader.conf')\n\n// 给出正确的绝对路径\nfunction resolve (dir) {\n  return path.join(__dirname, '..', dir)\n}\n\nconst createLintingRule = () => ({\n  test: /\\.(js|vue)$/,\n  loader: 'eslint-loader',\n  enforce: 'pre',\n  include: [resolve('src'), resolve('test')],\n  options: {\n    formatter: require('eslint-friendly-formatter'),\n    emitWarning: !config.dev.showEslintErrorsInOverlay\n  }\n})\n\nmodule.exports = {\n  context: path.resolve(__dirname, '../'),\n  // 配置webpack编译入口\n  entry: {\n    app: './src/main.js'\n  },\n  // 配置webpack输出路径和命名规则\n  output: {\n    path: config.build.assetsRoot, // webpack输出的目标文件夹路径\n    filename: '[name].js', // webpack输出bundle文件命名格式\n    // webpack编译输出的发布路径\n    publicPath: process.env.NODE_ENV === 'production'\n      ? config.build.assetsPublicPath\n      : config.dev.assetsPublicPath\n  },\n  // 配置模块resolve的规则\n  resolve: {\n    extensions: ['.js', '.vue', '.json'], // 自动resolve的扩展名\n    // 创建路径别名\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src'),\n    }\n  },\n  // 配置不同类型模块的处理规则\n  module: {\n    rules: [\n      ...(config.dev.useEslint ? [createLintingRule()] : []),\n      // 对所有.vue文件使用vue-loader\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        options: vueLoaderConfig\n      },\n      // 对src和test文件夹下的.js文件使用babel-loader\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        include: [resolve('src'), resolve('test')]\n      },\n      // 对图片资源文件使用url-loader，options.name指明了输出的命名规则\n      {\n        test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('img/[name].[hash:7].[ext]')\n        }\n      },\n      // 对音频资源文件使用url-loader，options.name指明了输出的命名规则\n      {\n        test: /\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('media/[name].[hash:7].[ext]')\n        }\n      },\n      // 对字体资源文件使用url-loader，options.name指明了输出的命名规则\n      {\n        test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('fonts/[name].[hash:7].[ext]')\n        }\n      }\n    ]\n  },\n  node: {\n    // prevent webpack from injecting useless setImmediate polyfill because Vue\n    // source contains it (although only uses it if it's native).\n    setImmediate: false,\n    // prevent webpack from injecting mocks to Node native modules\n    // that does not make sense for the client\n    dgram: 'empty',\n    fs: 'empty',\n    net: 'empty',\n    tls: 'empty',\n    child_process: 'empty'\n  }\n}\n\n```\n\n\n\n### utils.js和vue-loader.conf.js\n\n从上面的代码可以看出使用了`utils.js`和`vue-loader.conf.js`这两个文件，`utils.js`主要完成以下三件事：\n\n1. 配置静态资源路径\n2. 生成cssLoader用于加载.vue文件中的样式\n3. 生成styleLoaders用于加载不在.vue文件中的单独存在的样式文件\n\n\n\n代码注释：\n\n```js\n'use strict'\nconst path = require('path')\nconst config = require('../config')\nconst ExtractTextPlugin = require('extract-text-webpack-plugin')\nconst packageConfig = require('../package.json')\n\nexports.assetsPath = function (_path) {\n  const assetsSubDirectory = process.env.NODE_ENV === 'production'\n    ? config.build.assetsSubDirectory\n    : config.dev.assetsSubDirectory\n\n  return path.posix.join(assetsSubDirectory, _path)\n}\n\nexports.cssLoaders = function (options) {\n  options = options || {}\n\n  const cssLoader = {\n    loader: 'css-loader',\n    options: {\n      sourceMap: options.sourceMap\n    }\n  }\n\n  const postcssLoader = {\n    loader: 'postcss-loader',\n    options: {\n      sourceMap: options.sourceMap\n    }\n  }\n\n  // generate loader string to be used with extract text plugin\n  // 生成与提取文本插件一起使用的加载器字符串\n  function generateLoaders (loader, loaderOptions) {\n    const loaders = options.usePostCSS ? [cssLoader, postcssLoader] : [cssLoader]\n\n    if (loader) {\n      loaders.push({\n        loader: loader + '-loader',\n        options: Object.assign({}, loaderOptions, {\n          sourceMap: options.sourceMap\n        })\n      })\n    }\n\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    // 在指定该选项时提取CSS\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        fallback: 'vue-style-loader'\n      })\n    } else {\n      return ['vue-style-loader'].concat(loaders)\n    }\n  }\n\n  // https://vue-loader.vuejs.org/en/configurations/extract-css.html\n  return {\n    css: generateLoaders(),\n    postcss: generateLoaders(),\n    less: generateLoaders('less'),\n    sass: generateLoaders('sass', { indentedSyntax: true }),\n    scss: generateLoaders('sass'),\n    stylus: generateLoaders('stylus'),\n    styl: generateLoaders('stylus')\n  }\n}\n\n// Generate loaders for standalone style files (outside of .vue)\n//为独立样式文件生成装载器（.vue之外）\nexports.styleLoaders = function (options) {\n  const output = []\n  const loaders = exports.cssLoaders(options)\n\n  for (const extension in loaders) {\n    const loader = loaders[extension]\n    output.push({\n      test: new RegExp('\\\\.' + extension + '$'),\n      use: loader\n    })\n  }\n\n  return output\n}\n\nexports.createNotifierCallback = () => {\n  const notifier = require('node-notifier')\n\n  return (severity, errors) => {\n    if (severity !== 'error') return\n\n    const error = errors[0]\n    const filename = error.file && error.file.split('!').pop()\n\n    notifier.notify({\n      title: packageConfig.name,\n      message: severity + ': ' + error.name,\n      subtitle: filename || '',\n      icon: path.join(__dirname, 'logo.png')\n    })\n  }\n}\n\n```\n\n\n\n`vue-loader.js`只配置了css加载器以及配置资源路径。\n\n代码注释：\n\n```js\n'use strict'\nconst utils = require('./utils')\nconst config = require('../config')\nconst isProduction = process.env.NODE_ENV === 'production'\nconst sourceMapEnabled = isProduction\n  ? config.build.productionSourceMap\n  : config.dev.cssSourceMap\n\nmodule.exports = {\n  // css加载器\n  loaders: utils.cssLoaders({\n    sourceMap: sourceMapEnabled,\n    extract: isProduction\n  }),\n  cssSourceMap: sourceMapEnabled, // 源码\n  cacheBusting: config.dev.cacheBusting, // 缓存\n  // 配置资源路径\n  transformToRequire: {\n    video: ['src', 'poster'],\n    source: 'src',\n    img: 'src',\n    image: 'xlink:href'\n  }\n}\n\n```\n\n\n\n### build.js\n\n开发环境下的配置讲完了，接下来讲构建环境下的配置，构建环境下执行`npm run build`的时候首先执行的是`build.js`文件，`build.js`文件主要做以下几件事：\n\n1. loading动画\n2. 删除创建目标文件夹\n3. webpack编译\n4. 输出信息\n\n\n\n代码注释：\n\n```js\n'use strict'\nrequire('./check-versions')() // 检查nodejs和npm版本\n\nprocess.env.NODE_ENV = 'production' // 当前环境为生产环境\n\n// 一个可以调用默认软件打开网址、图片、文件等内容的插件，\nconst ora = require('ora')\nconst rm = require('rimraf')\nconst path = require('path')\nconst chalk = require('chalk') // 用于在控制台输出带颜色字体的插件\nconst webpack = require('webpack')\nconst config = require('../config')\nconst webpackConfig = require('./webpack.prod.conf') // 引入生产环境webpack配置\n\nconst spinner = ora('building for production...')\nspinner.start() // 开启loading动画\n\nrm(path.join(config.build.assetsRoot, config.build.assetsSubDirectory), err => { // 递归删除旧的目标文件夹\n  if (err) throw err\n  webpack(webpackConfig, (err, stats) => { // webpack编译\n    spinner.stop() // 停止loading动画\n    if (err) throw err // 没有出错则输出相关信息\n    process.stdout.write(stats.toString({\n      colors: true,\n      modules: false,\n      children: false, // if you are using ts-loader, setting this to true will make tyescript errors show up during build\n      chunks: false,\n      chunkModules: false\n    }) + '\\n\\n')\n\n    if (stats.hasErrors()) {\n      console.log(chalk.red('  Build failed with errors.\\n'))\n      process.exit(1)\n    }\n\n    console.log(chalk.cyan('  Build complete.\\n'))\n    console.log(chalk.yellow(\n      '  Tip: built files are meant to be served over an HTTP server.\\n' +\n      '  Opening index.html over file:// won\\'t work.\\n'\n    ))\n  })\n})\n\n```\n\n\n\n### webpack.prod.conf.js\n\n构建的时候用到的webpack配置来自`webpack.prod.conf.js`，这个文件主要完成以下几件事：\n\n1. 合并基础的webpack配置\n2. gzip模式下的webpack插件配置\n3. 配置webpack插件\n\n代码注释：\n\n```js\n'use strict'\nconst path = require('path')\nconst utils = require('./utils')\nconst webpack = require('webpack')\nconst config = require('../config')\nconst merge = require('webpack-merge')\nconst baseWebpackConfig = require('./webpack.base.conf')\nconst CopyWebpackPlugin = require('copy-webpack-plugin')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst ExtractTextPlugin = require('extract-text-webpack-plugin') // 用于从webpack生成的bundle中提取文本到特定文件中的插件，可以抽取出css，js文件将其与webpack输出的bundle分离\nconst OptimizeCSSPlugin = require('optimize-css-assets-webpack-plugin')\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin')\n\nconst env = process.env.NODE_ENV === 'testing'\n  ? require('../config/test.env')\n  : require('../config/prod.env')\n// 合并基础的webpack配置\nconst webpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({\n      sourceMap: config.build.productionSourceMap,\n      extract: true,\n      usePostCSS: true\n    })\n  },\n  devtool: config.build.productionSourceMap ? config.build.devtool : false,\n  // 配置webpack的输出\n  output: {\n    path: config.build.assetsRoot, // 编译输出目录\n    filename: utils.assetsPath('js/[name].[chunkhash].js'), // 编译输出文件名格式\n    chunkFilename: utils.assetsPath('js/[id].[chunkhash].js') // 没有指定输出名的文件输出的文件名格式\n  },\n// 配置webpack插件\n  plugins: [\n    // http://vuejs.github.io/vue-loader/en/workflow/production.html\n    new webpack.DefinePlugin({\n      'process.env': env\n    }),\n    // 丑化压缩代码插件\n    new UglifyJsPlugin({\n      uglifyOptions: {\n        compress: {\n          warnings: false\n        }\n      },\n      sourceMap: config.build.productionSourceMap,\n      parallel: true\n    }),\n    // extract css into its own file  抽离css文件\n    new ExtractTextPlugin({\n      filename: utils.assetsPath('css/[name].[contenthash].css'),\n      // Setting the following option to `false` will not extract CSS from codesplit chunks.\n      // Their CSS will instead be inserted dynamically with style-loader when the codesplit chunk has been loaded by webpack.\n      // It's currently set to `true` because we are seeing that sourcemaps are included in the codesplit bundle as well when it's `false`, \n      // increasing file size: https://github.com/vuejs-templates/webpack/issues/1110\n      allChunks: true,\n    }),\n    // Compress extracted CSS. We are using this plugin so that possible\n    // duplicated CSS from different components can be deduped.\n    new OptimizeCSSPlugin({\n      cssProcessorOptions: config.build.productionSourceMap\n        ? { safe: true, map: { inline: false } }\n        : { safe: true }\n    }),\n    // generate dist index.html with correct asset hash for caching.\n    // you can customize output by editing /index.html\n    // see https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: config.build.index,\n      template: 'index.html',\n      inject: true,\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeAttributeQuotes: true\n        // more options:\n        // https://github.com/kangax/html-minifier#options-quick-reference\n      },\n      // necessary to consistently work with multiple chunks via CommonsChunkPlugin\n      chunksSortMode: 'dependency'\n    }),\n    // keep module.id stable when vender modules does not change\n    new webpack.HashedModuleIdsPlugin(),\n    // enable scope hoisting\n    new webpack.optimize.ModuleConcatenationPlugin(),\n    // split vendor js into its own file\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'vendor',\n      minChunks (module) {\n        // any required modules inside node_modules are extracted to vendor\n        return (\n          module.resource &&\n          /\\.js$/.test(module.resource) &&\n          module.resource.indexOf(\n            path.join(__dirname, '../node_modules')\n          ) === 0\n        )\n      }\n    }),\n    // extract webpack runtime and module manifest to its own file in order to\n    // prevent vendor hash from being updated whenever app bundle is updated\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'manifest',\n      minChunks: Infinity\n    }),\n    // This instance extracts shared chunks from code splitted chunks and bundles them\n    // in a separate chunk, similar to the vendor chunk\n    // see: https://webpack.js.org/plugins/commons-chunk-plugin/#extra-async-commons-chunk\n    new webpack.optimize.CommonsChunkPlugin({\n      name: 'app',\n      async: 'vendor-async',\n      children: true,\n      minChunks: 3\n    }),\n\n    // copy custom static assets\n    new CopyWebpackPlugin([\n      {\n        from: path.resolve(__dirname, '../static'),\n        to: config.build.assetsSubDirectory,\n        ignore: ['.*']\n      }\n    ])\n  ]\n})\n// gzip模式下需要引入compression插件进行压缩\nif (config.build.productionGzip) {\n  const CompressionWebpackPlugin = require('compression-webpack-plugin')\n\n  webpackConfig.plugins.push(\n    new CompressionWebpackPlugin({\n      asset: '[path].gz[query]',\n      algorithm: 'gzip',\n      test: new RegExp(\n        '\\\\.(' +\n        config.build.productionGzipExtensions.join('|') +\n        ')$'\n      ),\n      threshold: 10240,\n      minRatio: 0.8\n    })\n  )\n}\n\nif (config.build.bundleAnalyzerReport) {\n  const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin\n  webpackConfig.plugins.push(new BundleAnalyzerPlugin())\n}\n\nmodule.exports = webpackConfig\n\n```\n\n\n\n### check-versions.js\n\n从`build.js`文件可以看出引用了`check-versions.js`，从名字可以看出这个文件大概做的事情就是确认`npm`和`node`版本。\n\n代码注释：\n\n```js\n'use strict'\nconst chalk = require('chalk') // 用于在控制台输出带颜色字体的插件\nconst semver = require('semver') // 语义化版本检查插件\nconst packageConfig = require('../package.json') // 引入package.json\nconst shell = require('shelljs') // 执行Unix命令行的插件\n// 开辟子进程执行指令cmd并返回结果\nfunction exec (cmd) {\n  return require('child_process').execSync(cmd).toString().trim()\n}\n// node和npm版本需求\nconst versionRequirements = [\n  {\n    name: 'node',\n    currentVersion: semver.clean(process.version),\n    versionRequirement: packageConfig.engines.node\n  }\n]\nif (shell.which('npm')) {\n  versionRequirements.push({\n    name: 'npm',\n    currentVersion: exec('npm --version'),\n    versionRequirement: packageConfig.engines.npm\n  })\n}\n\nmodule.exports = function () {\n  const warnings = []\n// 依次判断版本是否符合要求\n  for (let i = 0; i < versionRequirements.length; i++) {\n    const mod = versionRequirements[i]\n\n    if (!semver.satisfies(mod.currentVersion, mod.versionRequirement)) {\n      warnings.push(mod.name + ': ' +\n        chalk.red(mod.currentVersion) + ' should be ' +\n        chalk.green(mod.versionRequirement)\n      )\n    }\n  }\n// 如果有警告则将其输出到控制台\n  if (warnings.length) {\n    console.log('')\n    console.log(chalk.yellow('To use this template, you must update following to modules:'))\n    console.log()\n\n    for (let i = 0; i < warnings.length; i++) {\n      const warning = warnings[i]\n      console.log('  ' + warning)\n    }\n\n    console.log()\n    process.exit(1)\n  }\n}\n\n```\n\n\n\n### webpack.test.conf.js\n\n这个文件是单元测试环境的webpack配置文件,该配置是在`webpack.base.conf.js`的基础上做进一步完善。\n\n代码注释：\n\n```js\n'use strict'\n\nconst utils = require('./utils')\nconst webpack = require('webpack')\nconst merge = require('webpack-merge')\nconst baseWebpackConfig = require('./webpack.base.conf')\n// 合并基础的webpack配置\nconst webpackConfig = merge(baseWebpackConfig, {\n  devtool: '#inline-source-map',\n  resolveLoader: {\n    alias: {\n      'scss-loader': 'sass-loader'\n    }\n  },\n  // 配置webpack插件\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': require('../config/test.env')\n    })\n  ]\n})\n\n// no need for app entry during tests\ndelete webpackConfig.entry\n\nmodule.exports = webpackConfig\n\n```\n\n\n\n## config文件夹分析\n\n### index.js\n\nconfig文件夹下最主要的文件是`index.js`，在这里面描述了三种环境下的配置，分别为开发、构建和测试。\n\n代码注释：\n\n```js\n'use strict'\n// Template version: 1.2.7\n// see http://vuejs-templates.github.io/webpack for documentation.\n\nconst path = require('path')\n\nmodule.exports = {\n  // 开发过程中使用的配置\n  dev: {\n\n    // Paths\n    assetsSubDirectory: 'static', // webpack编译输出的二级文件夹\n    assetsPublicPath: '/', // webpack编译输出的发布路径\n    proxyTable: {},// 请求代理表，在这里可以配置特定的请求代理到对应的API接口，例如将'/api/xxx'代理到'www.example.com/api/xxx'\n\n    // Various Dev Server settings\n    // 各种开发服务器设置\n    host: 'localhost', // can be overwritten by process.env.HOST\n    port: 8080, // can be overwritten by process.env.PORT, if port is in use, a free one will be determined\n    autoOpenBrowser: false, // 启动dev-server之后不自动打开浏览器\n    errorOverlay: true,\n    notifyOnErrors: true,\n    poll: false, // https://webpack.js.org/configuration/dev-server/#devserver-watchoptions-\n\n    // Use Eslint Loader?\n    // If true, your code will be linted during bundling and\n    // linting errors and warnings will be shown in the console.\n    useEslint: true,\n    // If true, eslint errors and warnings will also be shown in the error overlay\n    // in the browser.\n    showEslintErrorsInOverlay: false,\n\n    /**\n     * Source Maps\n     */\n\n    // https://webpack.js.org/configuration/devtool/#development\n    devtool: 'eval-source-map',\n\n    // If you have problems debugging vue-files in devtools,\n    // set this to false - it *may* help\n    // https://vue-loader.vuejs.org/en/options.html#cachebusting\n    cacheBusting: true,\n\n    // CSS Sourcemaps off by default because relative paths are \"buggy\"\n    // with this option, according to the CSS-Loader README\n    // (https://github.com/webpack/css-loader#sourcemaps)\n    // In our experience, they generally work as expected,\n    // just be aware of this issue when enabling this option.\n    cssSourceMap: false,\n  },\n// 构建产品时使用的配置\n  build: {\n    // Template for index.html\n    index: path.resolve(__dirname, '../dist/index.html'), // 编译输入的index.html文件\n\n    // Paths\n    assetsRoot: path.resolve(__dirname, '../dist'), // webpack输出的目标文件夹路径\n    assetsSubDirectory: 'static', // webpack编译输出的二级文件夹\n    assetsPublicPath: '/', // webpack编译输出的发布路径\n\n    /**\n     * Source Maps\n     */\n\n    productionSourceMap: true,\n    // https://webpack.js.org/configuration/devtool/#production\n    devtool: '#source-map',\n\n    // Gzip off by default as many popular static hosts such as\n    // Surge or Netlify already gzip all static assets for you.\n    // Before setting to `true`, make sure to:\n    // npm install --save-dev compression-webpack-plugin\n    productionGzip: false,\n    productionGzipExtensions: ['js', 'css'], // gzip模式下需要压缩的文件的扩展名\n\n    // Run the build command with an extra argument to\n    // View the bundle analyzer report after build finishes:\n    // `npm run build --report`\n    // Set to `true` or `false` to always turn it on or off\n    bundleAnalyzerReport: process.env.npm_config_report\n  }\n}\n\n```\n\n\n\n### dev.env.js、prod.env.js和test.env.js\n\n这三个文件分别设置了开发环境、构建环境以及测试环境的环境变量\n\n#### dev.env.js\n\n```js\n// 设置了开发环境的环境变量\n'use strict'\nconst merge = require('webpack-merge')\nconst prodEnv = require('./prod.env')\n\nmodule.exports = merge(prodEnv, {\n  NODE_ENV: '\"development\"'\n})\n```\n\n#### prod.env.js\n\n```js\n// 设置了生产环境的环境变量\n'use strict'\nmodule.exports = {\n  NODE_ENV: '\"production\"'\n}\n```\n\n#### test.env.js\n\n```js\n// 设置了测试环境的环境变量\n'use strict'\nconst merge = require('webpack-merge')\nconst devEnv = require('./dev.env')\n\nmodule.exports = merge(devEnv, {\n  NODE_ENV: '\"testing\"'\n})\n\n```\n\n\n\n## 结语\n\nwebpack没有想的这么难也没想的这么简单。坊间流传webpack不难，难的是配置。可以把官网文档看一遍然后跟着指南敲一遍，去体会这个打包流程的奥妙，大概能学到些什么。[webpack中文文档](https://doc.webpack-china.org/concepts/)","slug":"webpack","published":1,"updated":"2018-08-21T02:10:07.875Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjlf18gyy00a0oaqo3mx2c0t3","content":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/webpack.jpg\" alt=\"webpack插图\"></p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近学习单元测试配环境的时候一直出错，然后被指点说应该先去学习webpack工作原理再去配环境。然后就去学webpack了，觉得有必要把webpack配置文件的代码解释记录下来，便于学习。</p>\n<h2 id=\"文件结构\"><a href=\"#文件结构\" class=\"headerlink\" title=\"文件结构\"></a>文件结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└── build</span><br><span class=\"line\">    └── build.js</span><br><span class=\"line\">    ├── check-versions.js</span><br><span class=\"line\">    ├── utils.js</span><br><span class=\"line\">    ├── vue-loader.conf.js</span><br><span class=\"line\">    ├── webpack.base.conf.js</span><br><span class=\"line\">    ├── webpack.dev.conf.js</span><br><span class=\"line\">    ├── webpack.prod.conf.js</span><br><span class=\"line\">    └── webpack.test.conf.js</span><br><span class=\"line\">├── config</span><br><span class=\"line\">    ├── dev.env.js</span><br><span class=\"line\">    ├── index.js</span><br><span class=\"line\">    ├── prod.env.js</span><br><span class=\"line\">    └── test.env.js</span><br><span class=\"line\">└── package.json</span><br></pre></td></tr></table></figure>\n<h2 id=\"指令分析\"><a href=\"#指令分析\" class=\"headerlink\" title=\"指令分析\"></a>指令分析</h2><p>首先看<code>package.json</code>里面的<code>script</code>字段</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server --inline --progress --config build/webpack.dev.conf.js\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"start\"</span>: <span class=\"string\">\"npm run dev\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"unit\"</span>: <span class=\"string\">\"cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"npm run unit\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"lint\"</span>: <span class=\"string\">\"eslint --ext .js,.vue src\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"node build/build.js\"</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>先看<code>build</code>和<code>dev</code>。运行<code>npm run dev</code>时执行的是<code>build/webpack.dev.conf.js</code>，运行<code>npm run build</code>执行的是<code>build/build.js</code>，然后可以先从这两个文件开始分析。</p>\n<h2 id=\"build文件夹分析\"><a href=\"#build文件夹分析\" class=\"headerlink\" title=\"build文件夹分析\"></a>build文件夹分析</h2><h3 id=\"webpack-dev-conf-js\"><a href=\"#webpack-dev-conf-js\" class=\"headerlink\" title=\"webpack.dev.conf.js\"></a>webpack.dev.conf.js</h3><p>开发环境下执行<code>npm run dev</code>的时候最先执行<code>build/webpack.dev.conf.js</code>文件，该文件主要做以下几件事：</p>\n<ol>\n<li>合并基础的webpack配置</li>\n<li>配置webpack插件</li>\n</ol>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>) <span class=\"comment\">// 一个可以合并数组和对象的插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>) <span class=\"comment\">// 合并webpack基础配置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>) <span class=\"comment\">// 一个用于生成HTML文件并自动注入依赖文件（link/script）的webpack插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> FriendlyErrorsPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'friendly-errors-webpack-plugin'</span>) <span class=\"comment\">// 用于更友好地输出webpack的警告、错误等信息</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> portfinder = <span class=\"built_in\">require</span>(<span class=\"string\">'portfinder'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> HOST = process.env.HOST</span><br><span class=\"line\"><span class=\"keyword\">const</span> PORT = process.env.PORT &amp;&amp; <span class=\"built_in\">Number</span>(process.env.PORT)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> devWebpackConfig = merge(baseWebpackConfig, &#123;</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: utils.styleLoaders(&#123; <span class=\"attr\">sourceMap</span>: config.dev.cssSourceMap, <span class=\"attr\">usePostCSS</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// cheap-module-eval-source-map is faster for development</span></span><br><span class=\"line\">  devtool: config.dev.devtool,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// these devServer options should be customized in /config/index.js</span></span><br><span class=\"line\">  devServer: &#123;</span><br><span class=\"line\">    clientLogLevel: <span class=\"string\">'warning'</span>,</span><br><span class=\"line\">    historyApiFallback: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    hot: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    compress: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    host: HOST || config.dev.host,</span><br><span class=\"line\">    port: PORT || config.dev.port,</span><br><span class=\"line\">    open: config.dev.autoOpenBrowser,</span><br><span class=\"line\">    overlay: config.dev.errorOverlay</span><br><span class=\"line\">      ? &#123; <span class=\"attr\">warnings</span>: <span class=\"literal\">false</span>, <span class=\"attr\">errors</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">      : <span class=\"literal\">false</span>,</span><br><span class=\"line\">    publicPath: config.dev.assetsPublicPath,</span><br><span class=\"line\">    proxy: config.dev.proxyTable,</span><br><span class=\"line\">    quiet: <span class=\"literal\">true</span>, <span class=\"comment\">// necessary for FriendlyErrorsPlugin</span></span><br><span class=\"line\">    watchOptions: &#123;</span><br><span class=\"line\">      poll: config.dev.poll,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack插件</span></span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"comment\">// </span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">      <span class=\"string\">'process.env'</span>: <span class=\"built_in\">require</span>(<span class=\"string\">'../config/dev.env'</span>)</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.NamedModulesPlugin(), <span class=\"comment\">// HMR shows correct file names in console on update.</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.NoEmitOnErrorsPlugin(),</span><br><span class=\"line\">    <span class=\"comment\">// https://github.com/ampedandwired/html-webpack-plugin</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123; <span class=\"comment\">// 后页面中的报错不会阻塞，但是会在编译结束后报错</span></span><br><span class=\"line\">      filename: <span class=\"string\">'index.html'</span>,</span><br><span class=\"line\">      template: <span class=\"string\">'index.html'</span>,</span><br><span class=\"line\">      inject: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  portfinder.basePort = process.env.PORT || config.dev.port</span><br><span class=\"line\">  portfinder.getPort(<span class=\"function\">(<span class=\"params\">err, port</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      reject(err)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// publish the new Port, necessary for e2e tests</span></span><br><span class=\"line\">      process.env.PORT = port</span><br><span class=\"line\">      <span class=\"comment\">// add port to devServer config</span></span><br><span class=\"line\">      devWebpackConfig.devServer.port = port</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Add FriendlyErrorsPlugin</span></span><br><span class=\"line\">      devWebpackConfig.plugins.push(<span class=\"keyword\">new</span> FriendlyErrorsPlugin(&#123;</span><br><span class=\"line\">        compilationSuccessInfo: &#123;</span><br><span class=\"line\">          messages: [<span class=\"string\">`Your application is running here: http://<span class=\"subst\">$&#123;devWebpackConfig.devServer.host&#125;</span>:<span class=\"subst\">$&#123;port&#125;</span>`</span>],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        onErrors: config.dev.notifyOnErrors</span><br><span class=\"line\">        ? utils.createNotifierCallback()</span><br><span class=\"line\">        : <span class=\"literal\">undefined</span></span><br><span class=\"line\">      &#125;))</span><br><span class=\"line\"></span><br><span class=\"line\">      resolve(devWebpackConfig)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"webpack-base-conf-js\"><a href=\"#webpack-base-conf-js\" class=\"headerlink\" title=\"webpack.base.conf.js\"></a>webpack.base.conf.js</h3><p>从<code>webpack.dev.conf.js</code>代码中看到，使用的webpack配置来自<code>webpack.base.conf.js</code>文件，所以先分析<code>webpack.base.conf.js</code>，这个文件主要完成以下这些事情：</p>\n<ol>\n<li>配置webpack编译入口</li>\n<li>配置webpack输出路径和命名规则</li>\n<li>配置模块resolve规则</li>\n<li>配置不同类型模块的处理规则</li>\n</ol>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> vueLoaderConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./vue-loader.conf'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 给出正确的绝对路径</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resolve</span> (<span class=\"params\">dir</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> path.join(__dirname, <span class=\"string\">'..'</span>, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> createLintingRule = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (&#123;</span><br><span class=\"line\">  test: <span class=\"regexp\">/\\.(js|vue)$/</span>,</span><br><span class=\"line\">  loader: <span class=\"string\">'eslint-loader'</span>,</span><br><span class=\"line\">  enforce: <span class=\"string\">'pre'</span>,</span><br><span class=\"line\">  include: [resolve(<span class=\"string\">'src'</span>), resolve(<span class=\"string\">'test'</span>)],</span><br><span class=\"line\">  options: &#123;</span><br><span class=\"line\">    formatter: <span class=\"built_in\">require</span>(<span class=\"string\">'eslint-friendly-formatter'</span>),</span><br><span class=\"line\">    emitWarning: !config.dev.showEslintErrorsInOverlay</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  context: path.resolve(__dirname, <span class=\"string\">'../'</span>),</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack编译入口</span></span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./src/main.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack输出路径和命名规则</span></span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: config.build.assetsRoot, <span class=\"comment\">// webpack输出的目标文件夹路径</span></span><br><span class=\"line\">    filename: <span class=\"string\">'[name].js'</span>, <span class=\"comment\">// webpack输出bundle文件命名格式</span></span><br><span class=\"line\">    <span class=\"comment\">// webpack编译输出的发布路径</span></span><br><span class=\"line\">    publicPath: process.env.NODE_ENV === <span class=\"string\">'production'</span></span><br><span class=\"line\">      ? config.build.assetsPublicPath</span><br><span class=\"line\">      : config.dev.assetsPublicPath</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置模块resolve的规则</span></span><br><span class=\"line\">  resolve: &#123;</span><br><span class=\"line\">    extensions: [<span class=\"string\">'.js'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'.json'</span>], <span class=\"comment\">// 自动resolve的扩展名</span></span><br><span class=\"line\">    <span class=\"comment\">// 创建路径别名</span></span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">      <span class=\"string\">'vue$'</span>: <span class=\"string\">'vue/dist/vue.esm.js'</span>,</span><br><span class=\"line\">      <span class=\"string\">'@'</span>: resolve(<span class=\"string\">'src'</span>),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置不同类型模块的处理规则</span></span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      ...(config.dev.useEslint ? [createLintingRule()] : []),</span><br><span class=\"line\">      <span class=\"comment\">// 对所有.vue文件使用vue-loader</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'vue-loader'</span>,</span><br><span class=\"line\">        options: vueLoaderConfig</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 对src和test文件夹下的.js文件使用babel-loader</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">        include: [resolve(<span class=\"string\">'src'</span>), resolve(<span class=\"string\">'test'</span>)]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 对图片资源文件使用url-loader，options.name指明了输出的命名规则</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(png|jpe?g|gif|svg)(\\?.*)?$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'url-loader'</span>,</span><br><span class=\"line\">        options: &#123;</span><br><span class=\"line\">          limit: <span class=\"number\">10000</span>,</span><br><span class=\"line\">          name: utils.assetsPath(<span class=\"string\">'img/[name].[hash:7].[ext]'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 对音频资源文件使用url-loader，options.name指明了输出的命名规则</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'url-loader'</span>,</span><br><span class=\"line\">        options: &#123;</span><br><span class=\"line\">          limit: <span class=\"number\">10000</span>,</span><br><span class=\"line\">          name: utils.assetsPath(<span class=\"string\">'media/[name].[hash:7].[ext]'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 对字体资源文件使用url-loader，options.name指明了输出的命名规则</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(woff2?|eot|ttf|otf)(\\?.*)?$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'url-loader'</span>,</span><br><span class=\"line\">        options: &#123;</span><br><span class=\"line\">          limit: <span class=\"number\">10000</span>,</span><br><span class=\"line\">          name: utils.assetsPath(<span class=\"string\">'fonts/[name].[hash:7].[ext]'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  node: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// prevent webpack from injecting useless setImmediate polyfill because Vue</span></span><br><span class=\"line\">    <span class=\"comment\">// source contains it (although only uses it if it's native).</span></span><br><span class=\"line\">    setImmediate: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"comment\">// prevent webpack from injecting mocks to Node native modules</span></span><br><span class=\"line\">    <span class=\"comment\">// that does not make sense for the client</span></span><br><span class=\"line\">    dgram: <span class=\"string\">'empty'</span>,</span><br><span class=\"line\">    fs: <span class=\"string\">'empty'</span>,</span><br><span class=\"line\">    net: <span class=\"string\">'empty'</span>,</span><br><span class=\"line\">    tls: <span class=\"string\">'empty'</span>,</span><br><span class=\"line\">    child_process: <span class=\"string\">'empty'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"utils-js和vue-loader-conf-js\"><a href=\"#utils-js和vue-loader-conf-js\" class=\"headerlink\" title=\"utils.js和vue-loader.conf.js\"></a>utils.js和vue-loader.conf.js</h3><p>从上面的代码可以看出使用了<code>utils.js</code>和<code>vue-loader.conf.js</code>这两个文件，<code>utils.js</code>主要完成以下三件事：</p>\n<ol>\n<li>配置静态资源路径</li>\n<li>生成cssLoader用于加载.vue文件中的样式</li>\n<li>生成styleLoaders用于加载不在.vue文件中的单独存在的样式文件</li>\n</ol>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> ExtractTextPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'extract-text-webpack-plugin'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> packageConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">exports.assetsPath = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_path</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> assetsSubDirectory = process.env.NODE_ENV === <span class=\"string\">'production'</span></span><br><span class=\"line\">    ? config.build.assetsSubDirectory</span><br><span class=\"line\">    : config.dev.assetsSubDirectory</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> path.posix.join(assetsSubDirectory, _path)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.cssLoaders = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  options = options || &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> cssLoader = &#123;</span><br><span class=\"line\">    loader: <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">    options: &#123;</span><br><span class=\"line\">      sourceMap: options.sourceMap</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> postcssLoader = &#123;</span><br><span class=\"line\">    loader: <span class=\"string\">'postcss-loader'</span>,</span><br><span class=\"line\">    options: &#123;</span><br><span class=\"line\">      sourceMap: options.sourceMap</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// generate loader string to be used with extract text plugin</span></span><br><span class=\"line\">  <span class=\"comment\">// 生成与提取文本插件一起使用的加载器字符串</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generateLoaders</span> (<span class=\"params\">loader, loaderOptions</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> loaders = options.usePostCSS ? [cssLoader, postcssLoader] : [cssLoader]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (loader) &#123;</span><br><span class=\"line\">      loaders.push(&#123;</span><br><span class=\"line\">        loader: loader + <span class=\"string\">'-loader'</span>,</span><br><span class=\"line\">        options: <span class=\"built_in\">Object</span>.assign(&#123;&#125;, loaderOptions, &#123;</span><br><span class=\"line\">          sourceMap: options.sourceMap</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Extract CSS when that option is specified</span></span><br><span class=\"line\">    <span class=\"comment\">// (which is the case during production build)</span></span><br><span class=\"line\">    <span class=\"comment\">// 在指定该选项时提取CSS</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (options.extract) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> ExtractTextPlugin.extract(&#123;</span><br><span class=\"line\">        use: loaders,</span><br><span class=\"line\">        fallback: <span class=\"string\">'vue-style-loader'</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> [<span class=\"string\">'vue-style-loader'</span>].concat(loaders)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// https://vue-loader.vuejs.org/en/configurations/extract-css.html</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    css: generateLoaders(),</span><br><span class=\"line\">    postcss: generateLoaders(),</span><br><span class=\"line\">    less: generateLoaders(<span class=\"string\">'less'</span>),</span><br><span class=\"line\">    sass: generateLoaders(<span class=\"string\">'sass'</span>, &#123; <span class=\"attr\">indentedSyntax</span>: <span class=\"literal\">true</span> &#125;),</span><br><span class=\"line\">    scss: generateLoaders(<span class=\"string\">'sass'</span>),</span><br><span class=\"line\">    stylus: generateLoaders(<span class=\"string\">'stylus'</span>),</span><br><span class=\"line\">    styl: generateLoaders(<span class=\"string\">'stylus'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Generate loaders for standalone style files (outside of .vue)</span></span><br><span class=\"line\"><span class=\"comment\">//为独立样式文件生成装载器（.vue之外）</span></span><br><span class=\"line\">exports.styleLoaders = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> output = []</span><br><span class=\"line\">  <span class=\"keyword\">const</span> loaders = exports.cssLoaders(options)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> extension <span class=\"keyword\">in</span> loaders) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> loader = loaders[extension]</span><br><span class=\"line\">    output.push(&#123;</span><br><span class=\"line\">      test: <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">'\\\\.'</span> + extension + <span class=\"string\">'$'</span>),</span><br><span class=\"line\">      use: loader</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> output</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.createNotifierCallback = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> notifier = <span class=\"built_in\">require</span>(<span class=\"string\">'node-notifier'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">severity, errors</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (severity !== <span class=\"string\">'error'</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> error = errors[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">const</span> filename = error.file &amp;&amp; error.file.split(<span class=\"string\">'!'</span>).pop()</span><br><span class=\"line\"></span><br><span class=\"line\">    notifier.notify(&#123;</span><br><span class=\"line\">      title: packageConfig.name,</span><br><span class=\"line\">      message: severity + <span class=\"string\">': '</span> + error.name,</span><br><span class=\"line\">      subtitle: filename || <span class=\"string\">''</span>,</span><br><span class=\"line\">      icon: path.join(__dirname, <span class=\"string\">'logo.png'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>vue-loader.js</code>只配置了css加载器以及配置资源路径。</p>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> isProduction = process.env.NODE_ENV === <span class=\"string\">'production'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> sourceMapEnabled = isProduction</span><br><span class=\"line\">  ? config.build.productionSourceMap</span><br><span class=\"line\">  : config.dev.cssSourceMap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// css加载器</span></span><br><span class=\"line\">  loaders: utils.cssLoaders(&#123;</span><br><span class=\"line\">    sourceMap: sourceMapEnabled,</span><br><span class=\"line\">    extract: isProduction</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  cssSourceMap: sourceMapEnabled, <span class=\"comment\">// 源码</span></span><br><span class=\"line\">  cacheBusting: config.dev.cacheBusting, <span class=\"comment\">// 缓存</span></span><br><span class=\"line\">  <span class=\"comment\">// 配置资源路径</span></span><br><span class=\"line\">  transformToRequire: &#123;</span><br><span class=\"line\">    video: [<span class=\"string\">'src'</span>, <span class=\"string\">'poster'</span>],</span><br><span class=\"line\">    source: <span class=\"string\">'src'</span>,</span><br><span class=\"line\">    img: <span class=\"string\">'src'</span>,</span><br><span class=\"line\">    image: <span class=\"string\">'xlink:href'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"build-js\"><a href=\"#build-js\" class=\"headerlink\" title=\"build.js\"></a>build.js</h3><p>开发环境下的配置讲完了，接下来讲构建环境下的配置，构建环境下执行<code>npm run build</code>的时候首先执行的是<code>build.js</code>文件，<code>build.js</code>文件主要做以下几件事：</p>\n<ol>\n<li>loading动画</li>\n<li>删除创建目标文件夹</li>\n<li>webpack编译</li>\n<li>输出信息</li>\n</ol>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'./check-versions'</span>)() <span class=\"comment\">// 检查nodejs和npm版本</span></span><br><span class=\"line\"></span><br><span class=\"line\">process.env.NODE_ENV = <span class=\"string\">'production'</span> <span class=\"comment\">// 当前环境为生产环境</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一个可以调用默认软件打开网址、图片、文件等内容的插件，</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> ora = <span class=\"built_in\">require</span>(<span class=\"string\">'ora'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> rm = <span class=\"built_in\">require</span>(<span class=\"string\">'rimraf'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> chalk = <span class=\"built_in\">require</span>(<span class=\"string\">'chalk'</span>) <span class=\"comment\">// 用于在控制台输出带颜色字体的插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.prod.conf'</span>) <span class=\"comment\">// 引入生产环境webpack配置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> spinner = ora(<span class=\"string\">'building for production...'</span>)</span><br><span class=\"line\">spinner.start() <span class=\"comment\">// 开启loading动画</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm(path.join(config.build.assetsRoot, config.build.assetsSubDirectory), err =&gt; &#123; <span class=\"comment\">// 递归删除旧的目标文件夹</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">  webpack(webpackConfig, (err, stats) =&gt; &#123; <span class=\"comment\">// webpack编译</span></span><br><span class=\"line\">    spinner.stop() <span class=\"comment\">// 停止loading动画</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err <span class=\"comment\">// 没有出错则输出相关信息</span></span><br><span class=\"line\">    process.stdout.write(stats.toString(&#123;</span><br><span class=\"line\">      colors: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      modules: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      children: <span class=\"literal\">false</span>, <span class=\"comment\">// if you are using ts-loader, setting this to true will make tyescript errors show up during build</span></span><br><span class=\"line\">      chunks: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      chunkModules: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;) + <span class=\"string\">'\\n\\n'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (stats.hasErrors()) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(chalk.red(<span class=\"string\">'  Build failed with errors.\\n'</span>))</span><br><span class=\"line\">      process.exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.cyan(<span class=\"string\">'  Build complete.\\n'</span>))</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.yellow(</span><br><span class=\"line\">      <span class=\"string\">'  Tip: built files are meant to be served over an HTTP server.\\n'</span> +</span><br><span class=\"line\">      <span class=\"string\">'  Opening index.html over file:// won\\'t work.\\n'</span></span><br><span class=\"line\">    ))</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"webpack-prod-conf-js\"><a href=\"#webpack-prod-conf-js\" class=\"headerlink\" title=\"webpack.prod.conf.js\"></a>webpack.prod.conf.js</h3><p>构建的时候用到的webpack配置来自<code>webpack.prod.conf.js</code>，这个文件主要完成以下几件事：</p>\n<ol>\n<li>合并基础的webpack配置</li>\n<li>gzip模式下的webpack插件配置</li>\n<li>配置webpack插件</li>\n</ol>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> CopyWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'copy-webpack-plugin'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> ExtractTextPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'extract-text-webpack-plugin'</span>) <span class=\"comment\">// 用于从webpack生成的bundle中提取文本到特定文件中的插件，可以抽取出css，js文件将其与webpack输出的bundle分离</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> OptimizeCSSPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'optimize-css-assets-webpack-plugin'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> UglifyJsPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'uglifyjs-webpack-plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> env = process.env.NODE_ENV === <span class=\"string\">'testing'</span></span><br><span class=\"line\">  ? <span class=\"built_in\">require</span>(<span class=\"string\">'../config/test.env'</span>)</span><br><span class=\"line\">  : <span class=\"built_in\">require</span>(<span class=\"string\">'../config/prod.env'</span>)</span><br><span class=\"line\"><span class=\"comment\">// 合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = merge(baseWebpackConfig, &#123;</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: utils.styleLoaders(&#123;</span><br><span class=\"line\">      sourceMap: config.build.productionSourceMap,</span><br><span class=\"line\">      extract: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      usePostCSS: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  devtool: config.build.productionSourceMap ? config.build.devtool : <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack的输出</span></span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: config.build.assetsRoot, <span class=\"comment\">// 编译输出目录</span></span><br><span class=\"line\">    filename: utils.assetsPath(<span class=\"string\">'js/[name].[chunkhash].js'</span>), <span class=\"comment\">// 编译输出文件名格式</span></span><br><span class=\"line\">    chunkFilename: utils.assetsPath(<span class=\"string\">'js/[id].[chunkhash].js'</span>) <span class=\"comment\">// 没有指定输出名的文件输出的文件名格式</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">// 配置webpack插件</span></span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"comment\">// http://vuejs.github.io/vue-loader/en/workflow/production.html</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">      <span class=\"string\">'process.env'</span>: env</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// 丑化压缩代码插件</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> UglifyJsPlugin(&#123;</span><br><span class=\"line\">      uglifyOptions: &#123;</span><br><span class=\"line\">        compress: &#123;</span><br><span class=\"line\">          warnings: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      sourceMap: config.build.productionSourceMap,</span><br><span class=\"line\">      parallel: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// extract css into its own file  抽离css文件</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> ExtractTextPlugin(&#123;</span><br><span class=\"line\">      filename: utils.assetsPath(<span class=\"string\">'css/[name].[contenthash].css'</span>),</span><br><span class=\"line\">      <span class=\"comment\">// Setting the following option to `false` will not extract CSS from codesplit chunks.</span></span><br><span class=\"line\">      <span class=\"comment\">// Their CSS will instead be inserted dynamically with style-loader when the codesplit chunk has been loaded by webpack.</span></span><br><span class=\"line\">      <span class=\"comment\">// It's currently set to `true` because we are seeing that sourcemaps are included in the codesplit bundle as well when it's `false`, </span></span><br><span class=\"line\">      <span class=\"comment\">// increasing file size: https://github.com/vuejs-templates/webpack/issues/1110</span></span><br><span class=\"line\">      allChunks: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// Compress extracted CSS. We are using this plugin so that possible</span></span><br><span class=\"line\">    <span class=\"comment\">// duplicated CSS from different components can be deduped.</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> OptimizeCSSPlugin(&#123;</span><br><span class=\"line\">      cssProcessorOptions: config.build.productionSourceMap</span><br><span class=\"line\">        ? &#123; <span class=\"attr\">safe</span>: <span class=\"literal\">true</span>, <span class=\"attr\">map</span>: &#123; <span class=\"attr\">inline</span>: <span class=\"literal\">false</span> &#125; &#125;</span><br><span class=\"line\">        : &#123; <span class=\"attr\">safe</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// generate dist index.html with correct asset hash for caching.</span></span><br><span class=\"line\">    <span class=\"comment\">// you can customize output by editing /index.html</span></span><br><span class=\"line\">    <span class=\"comment\">// see https://github.com/ampedandwired/html-webpack-plugin</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">      filename: config.build.index,</span><br><span class=\"line\">      template: <span class=\"string\">'index.html'</span>,</span><br><span class=\"line\">      inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      minify: &#123;</span><br><span class=\"line\">        removeComments: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        collapseWhitespace: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        removeAttributeQuotes: <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"comment\">// more options:</span></span><br><span class=\"line\">        <span class=\"comment\">// https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// necessary to consistently work with multiple chunks via CommonsChunkPlugin</span></span><br><span class=\"line\">      chunksSortMode: <span class=\"string\">'dependency'</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// keep module.id stable when vender modules does not change</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(),</span><br><span class=\"line\">    <span class=\"comment\">// enable scope hoisting</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.optimize.ModuleConcatenationPlugin(),</span><br><span class=\"line\">    <span class=\"comment\">// split vendor js into its own file</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">      name: <span class=\"string\">'vendor'</span>,</span><br><span class=\"line\">      minChunks (<span class=\"built_in\">module</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// any required modules inside node_modules are extracted to vendor</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">          <span class=\"built_in\">module</span>.resource &amp;&amp;</span><br><span class=\"line\">          /\\.js$/.test(<span class=\"built_in\">module</span>.resource) &amp;&amp;</span><br><span class=\"line\">          <span class=\"built_in\">module</span>.resource.indexOf(</span><br><span class=\"line\">            path.join(__dirname, <span class=\"string\">'../node_modules'</span>)</span><br><span class=\"line\">          ) === <span class=\"number\">0</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// extract webpack runtime and module manifest to its own file in order to</span></span><br><span class=\"line\">    <span class=\"comment\">// prevent vendor hash from being updated whenever app bundle is updated</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">      name: <span class=\"string\">'manifest'</span>,</span><br><span class=\"line\">      minChunks: <span class=\"literal\">Infinity</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// This instance extracts shared chunks from code splitted chunks and bundles them</span></span><br><span class=\"line\">    <span class=\"comment\">// in a separate chunk, similar to the vendor chunk</span></span><br><span class=\"line\">    <span class=\"comment\">// see: https://webpack.js.org/plugins/commons-chunk-plugin/#extra-async-commons-chunk</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">      name: <span class=\"string\">'app'</span>,</span><br><span class=\"line\">      <span class=\"keyword\">async</span>: <span class=\"string\">'vendor-async'</span>,</span><br><span class=\"line\">      children: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      minChunks: <span class=\"number\">3</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// copy custom static assets</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> CopyWebpackPlugin([</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"keyword\">from</span>: path.resolve(__dirname, <span class=\"string\">'../static'</span>),</span><br><span class=\"line\">        to: config.build.assetsSubDirectory,</span><br><span class=\"line\">        ignore: [<span class=\"string\">'.*'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ])</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// gzip模式下需要引入compression插件进行压缩</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (config.build.productionGzip) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> CompressionWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'compression-webpack-plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  webpackConfig.plugins.push(</span><br><span class=\"line\">    <span class=\"keyword\">new</span> CompressionWebpackPlugin(&#123;</span><br><span class=\"line\">      asset: <span class=\"string\">'[path].gz[query]'</span>,</span><br><span class=\"line\">      algorithm: <span class=\"string\">'gzip'</span>,</span><br><span class=\"line\">      test: <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(</span><br><span class=\"line\">        <span class=\"string\">'\\\\.('</span> +</span><br><span class=\"line\">        config.build.productionGzipExtensions.join(<span class=\"string\">'|'</span>) +</span><br><span class=\"line\">        <span class=\"string\">')$'</span></span><br><span class=\"line\">      ),</span><br><span class=\"line\">      threshold: <span class=\"number\">10240</span>,</span><br><span class=\"line\">      minRatio: <span class=\"number\">0.8</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (config.build.bundleAnalyzerReport) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> BundleAnalyzerPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-bundle-analyzer'</span>).BundleAnalyzerPlugin</span><br><span class=\"line\">  webpackConfig.plugins.push(<span class=\"keyword\">new</span> BundleAnalyzerPlugin())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = webpackConfig</span><br></pre></td></tr></table></figure>\n<h3 id=\"check-versions-js\"><a href=\"#check-versions-js\" class=\"headerlink\" title=\"check-versions.js\"></a>check-versions.js</h3><p>从<code>build.js</code>文件可以看出引用了<code>check-versions.js</code>，从名字可以看出这个文件大概做的事情就是确认<code>npm</code>和<code>node</code>版本。</p>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> chalk = <span class=\"built_in\">require</span>(<span class=\"string\">'chalk'</span>) <span class=\"comment\">// 用于在控制台输出带颜色字体的插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> semver = <span class=\"built_in\">require</span>(<span class=\"string\">'semver'</span>) <span class=\"comment\">// 语义化版本检查插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> packageConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>) <span class=\"comment\">// 引入package.json</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> shell = <span class=\"built_in\">require</span>(<span class=\"string\">'shelljs'</span>) <span class=\"comment\">// 执行Unix命令行的插件</span></span><br><span class=\"line\"><span class=\"comment\">// 开辟子进程执行指令cmd并返回结果</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exec</span> (<span class=\"params\">cmd</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">require</span>(<span class=\"string\">'child_process'</span>).execSync(cmd).toString().trim()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// node和npm版本需求</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> versionRequirements = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'node'</span>,</span><br><span class=\"line\">    currentVersion: semver.clean(process.version),</span><br><span class=\"line\">    versionRequirement: packageConfig.engines.node</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">if</span> (shell.which(<span class=\"string\">'npm'</span>)) &#123;</span><br><span class=\"line\">  versionRequirements.push(&#123;</span><br><span class=\"line\">    name: <span class=\"string\">'npm'</span>,</span><br><span class=\"line\">    currentVersion: exec(<span class=\"string\">'npm --version'</span>),</span><br><span class=\"line\">    versionRequirement: packageConfig.engines.npm</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> warnings = []</span><br><span class=\"line\"><span class=\"comment\">// 依次判断版本是否符合要求</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; versionRequirements.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> mod = versionRequirements[i]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!semver.satisfies(mod.currentVersion, mod.versionRequirement)) &#123;</span><br><span class=\"line\">      warnings.push(mod.name + <span class=\"string\">': '</span> +</span><br><span class=\"line\">        chalk.red(mod.currentVersion) + <span class=\"string\">' should be '</span> +</span><br><span class=\"line\">        chalk.green(mod.versionRequirement)</span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// 如果有警告则将其输出到控制台</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (warnings.length) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">''</span>)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.yellow(<span class=\"string\">'To use this template, you must update following to modules:'</span>))</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; warnings.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> warning = warnings[i]</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'  '</span> + warning)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log()</span><br><span class=\"line\">    process.exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"webpack-test-conf-js\"><a href=\"#webpack-test-conf-js\" class=\"headerlink\" title=\"webpack.test.conf.js\"></a>webpack.test.conf.js</h3><p>这个文件是单元测试环境的webpack配置文件,该配置是在<code>webpack.base.conf.js</code>的基础上做进一步完善。</p>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>)</span><br><span class=\"line\"><span class=\"comment\">// 合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = merge(baseWebpackConfig, &#123;</span><br><span class=\"line\">  devtool: <span class=\"string\">'#inline-source-map'</span>,</span><br><span class=\"line\">  resolveLoader: &#123;</span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">      <span class=\"string\">'scss-loader'</span>: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack插件</span></span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">      <span class=\"string\">'process.env'</span>: <span class=\"built_in\">require</span>(<span class=\"string\">'../config/test.env'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// no need for app entry during tests</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> webpackConfig.entry</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = webpackConfig</span><br></pre></td></tr></table></figure>\n<h2 id=\"config文件夹分析\"><a href=\"#config文件夹分析\" class=\"headerlink\" title=\"config文件夹分析\"></a>config文件夹分析</h2><h3 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h3><p>config文件夹下最主要的文件是<code>index.js</code>，在这里面描述了三种环境下的配置，分别为开发、构建和测试。</p>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"comment\">// Template version: 1.2.7</span></span><br><span class=\"line\"><span class=\"comment\">// see http://vuejs-templates.github.io/webpack for documentation.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 开发过程中使用的配置</span></span><br><span class=\"line\">  dev: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Paths</span></span><br><span class=\"line\">    assetsSubDirectory: <span class=\"string\">'static'</span>, <span class=\"comment\">// webpack编译输出的二级文件夹</span></span><br><span class=\"line\">    assetsPublicPath: <span class=\"string\">'/'</span>, <span class=\"comment\">// webpack编译输出的发布路径</span></span><br><span class=\"line\">    proxyTable: &#123;&#125;,<span class=\"comment\">// 请求代理表，在这里可以配置特定的请求代理到对应的API接口，例如将'/api/xxx'代理到'www.example.com/api/xxx'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Various Dev Server settings</span></span><br><span class=\"line\">    <span class=\"comment\">// 各种开发服务器设置</span></span><br><span class=\"line\">    host: <span class=\"string\">'localhost'</span>, <span class=\"comment\">// can be overwritten by process.env.HOST</span></span><br><span class=\"line\">    port: <span class=\"number\">8080</span>, <span class=\"comment\">// can be overwritten by process.env.PORT, if port is in use, a free one will be determined</span></span><br><span class=\"line\">    autoOpenBrowser: <span class=\"literal\">false</span>, <span class=\"comment\">// 启动dev-server之后不自动打开浏览器</span></span><br><span class=\"line\">    errorOverlay: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    notifyOnErrors: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    poll: <span class=\"literal\">false</span>, <span class=\"comment\">// https://webpack.js.org/configuration/dev-server/#devserver-watchoptions-</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Use Eslint Loader?</span></span><br><span class=\"line\">    <span class=\"comment\">// If true, your code will be linted during bundling and</span></span><br><span class=\"line\">    <span class=\"comment\">// linting errors and warnings will be shown in the console.</span></span><br><span class=\"line\">    useEslint: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// If true, eslint errors and warnings will also be shown in the error overlay</span></span><br><span class=\"line\">    <span class=\"comment\">// in the browser.</span></span><br><span class=\"line\">    showEslintErrorsInOverlay: <span class=\"literal\">false</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Source Maps</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// https://webpack.js.org/configuration/devtool/#development</span></span><br><span class=\"line\">    devtool: <span class=\"string\">'eval-source-map'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// If you have problems debugging vue-files in devtools,</span></span><br><span class=\"line\">    <span class=\"comment\">// set this to false - it *may* help</span></span><br><span class=\"line\">    <span class=\"comment\">// https://vue-loader.vuejs.org/en/options.html#cachebusting</span></span><br><span class=\"line\">    cacheBusting: <span class=\"literal\">true</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// CSS Sourcemaps off by default because relative paths are \"buggy\"</span></span><br><span class=\"line\">    <span class=\"comment\">// with this option, according to the CSS-Loader README</span></span><br><span class=\"line\">    <span class=\"comment\">// (https://github.com/webpack/css-loader#sourcemaps)</span></span><br><span class=\"line\">    <span class=\"comment\">// In our experience, they generally work as expected,</span></span><br><span class=\"line\">    <span class=\"comment\">// just be aware of this issue when enabling this option.</span></span><br><span class=\"line\">    cssSourceMap: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">// 构建产品时使用的配置</span></span><br><span class=\"line\">  build: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Template for index.html</span></span><br><span class=\"line\">    index: path.resolve(__dirname, <span class=\"string\">'../dist/index.html'</span>), <span class=\"comment\">// 编译输入的index.html文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Paths</span></span><br><span class=\"line\">    assetsRoot: path.resolve(__dirname, <span class=\"string\">'../dist'</span>), <span class=\"comment\">// webpack输出的目标文件夹路径</span></span><br><span class=\"line\">    assetsSubDirectory: <span class=\"string\">'static'</span>, <span class=\"comment\">// webpack编译输出的二级文件夹</span></span><br><span class=\"line\">    assetsPublicPath: <span class=\"string\">'/'</span>, <span class=\"comment\">// webpack编译输出的发布路径</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Source Maps</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    productionSourceMap: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// https://webpack.js.org/configuration/devtool/#production</span></span><br><span class=\"line\">    devtool: <span class=\"string\">'#source-map'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Gzip off by default as many popular static hosts such as</span></span><br><span class=\"line\">    <span class=\"comment\">// Surge or Netlify already gzip all static assets for you.</span></span><br><span class=\"line\">    <span class=\"comment\">// Before setting to `true`, make sure to:</span></span><br><span class=\"line\">    <span class=\"comment\">// npm install --save-dev compression-webpack-plugin</span></span><br><span class=\"line\">    productionGzip: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    productionGzipExtensions: [<span class=\"string\">'js'</span>, <span class=\"string\">'css'</span>], <span class=\"comment\">// gzip模式下需要压缩的文件的扩展名</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Run the build command with an extra argument to</span></span><br><span class=\"line\">    <span class=\"comment\">// View the bundle analyzer report after build finishes:</span></span><br><span class=\"line\">    <span class=\"comment\">// `npm run build --report`</span></span><br><span class=\"line\">    <span class=\"comment\">// Set to `true` or `false` to always turn it on or off</span></span><br><span class=\"line\">    bundleAnalyzerReport: process.env.npm_config_report</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"dev-env-js、prod-env-js和test-env-js\"><a href=\"#dev-env-js、prod-env-js和test-env-js\" class=\"headerlink\" title=\"dev.env.js、prod.env.js和test.env.js\"></a>dev.env.js、prod.env.js和test.env.js</h3><p>这三个文件分别设置了开发环境、构建环境以及测试环境的环境变量</p>\n<h4 id=\"dev-env-js\"><a href=\"#dev-env-js\" class=\"headerlink\" title=\"dev.env.js\"></a>dev.env.js</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置了开发环境的环境变量</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> prodEnv = <span class=\"built_in\">require</span>(<span class=\"string\">'./prod.env'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(prodEnv, &#123;</span><br><span class=\"line\">  NODE_ENV: <span class=\"string\">'\"development\"'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"prod-env-js\"><a href=\"#prod-env-js\" class=\"headerlink\" title=\"prod.env.js\"></a>prod.env.js</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置了生产环境的环境变量</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  NODE_ENV: <span class=\"string\">'\"production\"'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"test-env-js\"><a href=\"#test-env-js\" class=\"headerlink\" title=\"test.env.js\"></a>test.env.js</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置了测试环境的环境变量</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> devEnv = <span class=\"built_in\">require</span>(<span class=\"string\">'./dev.env'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(devEnv, &#123;</span><br><span class=\"line\">  NODE_ENV: <span class=\"string\">'\"testing\"'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>webpack没有想的这么难也没想的这么简单。坊间流传webpack不难，难的是配置。可以把官网文档看一遍然后跟着指南敲一遍，去体会这个打包流程的奥妙，大概能学到些什么。<a href=\"https://doc.webpack-china.org/concepts/\" target=\"_blank\" rel=\"noopener\">webpack中文文档</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://p1cjg886l.bkt.clouddn.com/webpack.jpg\" alt=\"webpack插图\"></p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>最近学习单元测试配环境的时候一直出错，然后被指点说应该先去学习webpack工作原理再去配环境。然后就去学webpack了，觉得有必要把webpack配置文件的代码解释记录下来，便于学习。</p>\n<h2 id=\"文件结构\"><a href=\"#文件结构\" class=\"headerlink\" title=\"文件结构\"></a>文件结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">└── build</span><br><span class=\"line\">    └── build.js</span><br><span class=\"line\">    ├── check-versions.js</span><br><span class=\"line\">    ├── utils.js</span><br><span class=\"line\">    ├── vue-loader.conf.js</span><br><span class=\"line\">    ├── webpack.base.conf.js</span><br><span class=\"line\">    ├── webpack.dev.conf.js</span><br><span class=\"line\">    ├── webpack.prod.conf.js</span><br><span class=\"line\">    └── webpack.test.conf.js</span><br><span class=\"line\">├── config</span><br><span class=\"line\">    ├── dev.env.js</span><br><span class=\"line\">    ├── index.js</span><br><span class=\"line\">    ├── prod.env.js</span><br><span class=\"line\">    └── test.env.js</span><br><span class=\"line\">└── package.json</span><br></pre></td></tr></table></figure>\n<h2 id=\"指令分析\"><a href=\"#指令分析\" class=\"headerlink\" title=\"指令分析\"></a>指令分析</h2><p>首先看<code>package.json</code>里面的<code>script</code>字段</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server --inline --progress --config build/webpack.dev.conf.js\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"start\"</span>: <span class=\"string\">\"npm run dev\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"unit\"</span>: <span class=\"string\">\"cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"npm run unit\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"lint\"</span>: <span class=\"string\">\"eslint --ext .js,.vue src\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"build\"</span>: <span class=\"string\">\"node build/build.js\"</span></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<p>先看<code>build</code>和<code>dev</code>。运行<code>npm run dev</code>时执行的是<code>build/webpack.dev.conf.js</code>，运行<code>npm run build</code>执行的是<code>build/build.js</code>，然后可以先从这两个文件开始分析。</p>\n<h2 id=\"build文件夹分析\"><a href=\"#build文件夹分析\" class=\"headerlink\" title=\"build文件夹分析\"></a>build文件夹分析</h2><h3 id=\"webpack-dev-conf-js\"><a href=\"#webpack-dev-conf-js\" class=\"headerlink\" title=\"webpack.dev.conf.js\"></a>webpack.dev.conf.js</h3><p>开发环境下执行<code>npm run dev</code>的时候最先执行<code>build/webpack.dev.conf.js</code>文件，该文件主要做以下几件事：</p>\n<ol>\n<li>合并基础的webpack配置</li>\n<li>配置webpack插件</li>\n</ol>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>) <span class=\"comment\">// 一个可以合并数组和对象的插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>) <span class=\"comment\">// 合并webpack基础配置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>) <span class=\"comment\">// 一个用于生成HTML文件并自动注入依赖文件（link/script）的webpack插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> FriendlyErrorsPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'friendly-errors-webpack-plugin'</span>) <span class=\"comment\">// 用于更友好地输出webpack的警告、错误等信息</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> portfinder = <span class=\"built_in\">require</span>(<span class=\"string\">'portfinder'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> HOST = process.env.HOST</span><br><span class=\"line\"><span class=\"keyword\">const</span> PORT = process.env.PORT &amp;&amp; <span class=\"built_in\">Number</span>(process.env.PORT)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> devWebpackConfig = merge(baseWebpackConfig, &#123;</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: utils.styleLoaders(&#123; <span class=\"attr\">sourceMap</span>: config.dev.cssSourceMap, <span class=\"attr\">usePostCSS</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// cheap-module-eval-source-map is faster for development</span></span><br><span class=\"line\">  devtool: config.dev.devtool,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// these devServer options should be customized in /config/index.js</span></span><br><span class=\"line\">  devServer: &#123;</span><br><span class=\"line\">    clientLogLevel: <span class=\"string\">'warning'</span>,</span><br><span class=\"line\">    historyApiFallback: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    hot: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    compress: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    host: HOST || config.dev.host,</span><br><span class=\"line\">    port: PORT || config.dev.port,</span><br><span class=\"line\">    open: config.dev.autoOpenBrowser,</span><br><span class=\"line\">    overlay: config.dev.errorOverlay</span><br><span class=\"line\">      ? &#123; <span class=\"attr\">warnings</span>: <span class=\"literal\">false</span>, <span class=\"attr\">errors</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">      : <span class=\"literal\">false</span>,</span><br><span class=\"line\">    publicPath: config.dev.assetsPublicPath,</span><br><span class=\"line\">    proxy: config.dev.proxyTable,</span><br><span class=\"line\">    quiet: <span class=\"literal\">true</span>, <span class=\"comment\">// necessary for FriendlyErrorsPlugin</span></span><br><span class=\"line\">    watchOptions: &#123;</span><br><span class=\"line\">      poll: config.dev.poll,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack插件</span></span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"comment\">// </span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">      <span class=\"string\">'process.env'</span>: <span class=\"built_in\">require</span>(<span class=\"string\">'../config/dev.env'</span>)</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.HotModuleReplacementPlugin(), <span class=\"comment\">// 热更新</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.NamedModulesPlugin(), <span class=\"comment\">// HMR shows correct file names in console on update.</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.NoEmitOnErrorsPlugin(),</span><br><span class=\"line\">    <span class=\"comment\">// https://github.com/ampedandwired/html-webpack-plugin</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123; <span class=\"comment\">// 后页面中的报错不会阻塞，但是会在编译结束后报错</span></span><br><span class=\"line\">      filename: <span class=\"string\">'index.html'</span>,</span><br><span class=\"line\">      template: <span class=\"string\">'index.html'</span>,</span><br><span class=\"line\">      inject: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  portfinder.basePort = process.env.PORT || config.dev.port</span><br><span class=\"line\">  portfinder.getPort(<span class=\"function\">(<span class=\"params\">err, port</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">      reject(err)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// publish the new Port, necessary for e2e tests</span></span><br><span class=\"line\">      process.env.PORT = port</span><br><span class=\"line\">      <span class=\"comment\">// add port to devServer config</span></span><br><span class=\"line\">      devWebpackConfig.devServer.port = port</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Add FriendlyErrorsPlugin</span></span><br><span class=\"line\">      devWebpackConfig.plugins.push(<span class=\"keyword\">new</span> FriendlyErrorsPlugin(&#123;</span><br><span class=\"line\">        compilationSuccessInfo: &#123;</span><br><span class=\"line\">          messages: [<span class=\"string\">`Your application is running here: http://<span class=\"subst\">$&#123;devWebpackConfig.devServer.host&#125;</span>:<span class=\"subst\">$&#123;port&#125;</span>`</span>],</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        onErrors: config.dev.notifyOnErrors</span><br><span class=\"line\">        ? utils.createNotifierCallback()</span><br><span class=\"line\">        : <span class=\"literal\">undefined</span></span><br><span class=\"line\">      &#125;))</span><br><span class=\"line\"></span><br><span class=\"line\">      resolve(devWebpackConfig)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"webpack-base-conf-js\"><a href=\"#webpack-base-conf-js\" class=\"headerlink\" title=\"webpack.base.conf.js\"></a>webpack.base.conf.js</h3><p>从<code>webpack.dev.conf.js</code>代码中看到，使用的webpack配置来自<code>webpack.base.conf.js</code>文件，所以先分析<code>webpack.base.conf.js</code>，这个文件主要完成以下这些事情：</p>\n<ol>\n<li>配置webpack编译入口</li>\n<li>配置webpack输出路径和命名规则</li>\n<li>配置模块resolve规则</li>\n<li>配置不同类型模块的处理规则</li>\n</ol>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> vueLoaderConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./vue-loader.conf'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 给出正确的绝对路径</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">resolve</span> (<span class=\"params\">dir</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> path.join(__dirname, <span class=\"string\">'..'</span>, dir)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> createLintingRule = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (&#123;</span><br><span class=\"line\">  test: <span class=\"regexp\">/\\.(js|vue)$/</span>,</span><br><span class=\"line\">  loader: <span class=\"string\">'eslint-loader'</span>,</span><br><span class=\"line\">  enforce: <span class=\"string\">'pre'</span>,</span><br><span class=\"line\">  include: [resolve(<span class=\"string\">'src'</span>), resolve(<span class=\"string\">'test'</span>)],</span><br><span class=\"line\">  options: &#123;</span><br><span class=\"line\">    formatter: <span class=\"built_in\">require</span>(<span class=\"string\">'eslint-friendly-formatter'</span>),</span><br><span class=\"line\">    emitWarning: !config.dev.showEslintErrorsInOverlay</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  context: path.resolve(__dirname, <span class=\"string\">'../'</span>),</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack编译入口</span></span><br><span class=\"line\">  entry: &#123;</span><br><span class=\"line\">    app: <span class=\"string\">'./src/main.js'</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack输出路径和命名规则</span></span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: config.build.assetsRoot, <span class=\"comment\">// webpack输出的目标文件夹路径</span></span><br><span class=\"line\">    filename: <span class=\"string\">'[name].js'</span>, <span class=\"comment\">// webpack输出bundle文件命名格式</span></span><br><span class=\"line\">    <span class=\"comment\">// webpack编译输出的发布路径</span></span><br><span class=\"line\">    publicPath: process.env.NODE_ENV === <span class=\"string\">'production'</span></span><br><span class=\"line\">      ? config.build.assetsPublicPath</span><br><span class=\"line\">      : config.dev.assetsPublicPath</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置模块resolve的规则</span></span><br><span class=\"line\">  resolve: &#123;</span><br><span class=\"line\">    extensions: [<span class=\"string\">'.js'</span>, <span class=\"string\">'.vue'</span>, <span class=\"string\">'.json'</span>], <span class=\"comment\">// 自动resolve的扩展名</span></span><br><span class=\"line\">    <span class=\"comment\">// 创建路径别名</span></span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">      <span class=\"string\">'vue$'</span>: <span class=\"string\">'vue/dist/vue.esm.js'</span>,</span><br><span class=\"line\">      <span class=\"string\">'@'</span>: resolve(<span class=\"string\">'src'</span>),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置不同类型模块的处理规则</span></span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: [</span><br><span class=\"line\">      ...(config.dev.useEslint ? [createLintingRule()] : []),</span><br><span class=\"line\">      <span class=\"comment\">// 对所有.vue文件使用vue-loader</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.vue$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'vue-loader'</span>,</span><br><span class=\"line\">        options: vueLoaderConfig</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 对src和test文件夹下的.js文件使用babel-loader</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'babel-loader'</span>,</span><br><span class=\"line\">        include: [resolve(<span class=\"string\">'src'</span>), resolve(<span class=\"string\">'test'</span>)]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 对图片资源文件使用url-loader，options.name指明了输出的命名规则</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(png|jpe?g|gif|svg)(\\?.*)?$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'url-loader'</span>,</span><br><span class=\"line\">        options: &#123;</span><br><span class=\"line\">          limit: <span class=\"number\">10000</span>,</span><br><span class=\"line\">          name: utils.assetsPath(<span class=\"string\">'img/[name].[hash:7].[ext]'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 对音频资源文件使用url-loader，options.name指明了输出的命名规则</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'url-loader'</span>,</span><br><span class=\"line\">        options: &#123;</span><br><span class=\"line\">          limit: <span class=\"number\">10000</span>,</span><br><span class=\"line\">          name: utils.assetsPath(<span class=\"string\">'media/[name].[hash:7].[ext]'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// 对字体资源文件使用url-loader，options.name指明了输出的命名规则</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        test: <span class=\"regexp\">/\\.(woff2?|eot|ttf|otf)(\\?.*)?$/</span>,</span><br><span class=\"line\">        loader: <span class=\"string\">'url-loader'</span>,</span><br><span class=\"line\">        options: &#123;</span><br><span class=\"line\">          limit: <span class=\"number\">10000</span>,</span><br><span class=\"line\">          name: utils.assetsPath(<span class=\"string\">'fonts/[name].[hash:7].[ext]'</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  node: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// prevent webpack from injecting useless setImmediate polyfill because Vue</span></span><br><span class=\"line\">    <span class=\"comment\">// source contains it (although only uses it if it's native).</span></span><br><span class=\"line\">    setImmediate: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"comment\">// prevent webpack from injecting mocks to Node native modules</span></span><br><span class=\"line\">    <span class=\"comment\">// that does not make sense for the client</span></span><br><span class=\"line\">    dgram: <span class=\"string\">'empty'</span>,</span><br><span class=\"line\">    fs: <span class=\"string\">'empty'</span>,</span><br><span class=\"line\">    net: <span class=\"string\">'empty'</span>,</span><br><span class=\"line\">    tls: <span class=\"string\">'empty'</span>,</span><br><span class=\"line\">    child_process: <span class=\"string\">'empty'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"utils-js和vue-loader-conf-js\"><a href=\"#utils-js和vue-loader-conf-js\" class=\"headerlink\" title=\"utils.js和vue-loader.conf.js\"></a>utils.js和vue-loader.conf.js</h3><p>从上面的代码可以看出使用了<code>utils.js</code>和<code>vue-loader.conf.js</code>这两个文件，<code>utils.js</code>主要完成以下三件事：</p>\n<ol>\n<li>配置静态资源路径</li>\n<li>生成cssLoader用于加载.vue文件中的样式</li>\n<li>生成styleLoaders用于加载不在.vue文件中的单独存在的样式文件</li>\n</ol>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> ExtractTextPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'extract-text-webpack-plugin'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> packageConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">exports.assetsPath = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">_path</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> assetsSubDirectory = process.env.NODE_ENV === <span class=\"string\">'production'</span></span><br><span class=\"line\">    ? config.build.assetsSubDirectory</span><br><span class=\"line\">    : config.dev.assetsSubDirectory</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> path.posix.join(assetsSubDirectory, _path)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.cssLoaders = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  options = options || &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> cssLoader = &#123;</span><br><span class=\"line\">    loader: <span class=\"string\">'css-loader'</span>,</span><br><span class=\"line\">    options: &#123;</span><br><span class=\"line\">      sourceMap: options.sourceMap</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> postcssLoader = &#123;</span><br><span class=\"line\">    loader: <span class=\"string\">'postcss-loader'</span>,</span><br><span class=\"line\">    options: &#123;</span><br><span class=\"line\">      sourceMap: options.sourceMap</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// generate loader string to be used with extract text plugin</span></span><br><span class=\"line\">  <span class=\"comment\">// 生成与提取文本插件一起使用的加载器字符串</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generateLoaders</span> (<span class=\"params\">loader, loaderOptions</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> loaders = options.usePostCSS ? [cssLoader, postcssLoader] : [cssLoader]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (loader) &#123;</span><br><span class=\"line\">      loaders.push(&#123;</span><br><span class=\"line\">        loader: loader + <span class=\"string\">'-loader'</span>,</span><br><span class=\"line\">        options: <span class=\"built_in\">Object</span>.assign(&#123;&#125;, loaderOptions, &#123;</span><br><span class=\"line\">          sourceMap: options.sourceMap</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Extract CSS when that option is specified</span></span><br><span class=\"line\">    <span class=\"comment\">// (which is the case during production build)</span></span><br><span class=\"line\">    <span class=\"comment\">// 在指定该选项时提取CSS</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (options.extract) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> ExtractTextPlugin.extract(&#123;</span><br><span class=\"line\">        use: loaders,</span><br><span class=\"line\">        fallback: <span class=\"string\">'vue-style-loader'</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> [<span class=\"string\">'vue-style-loader'</span>].concat(loaders)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// https://vue-loader.vuejs.org/en/configurations/extract-css.html</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    css: generateLoaders(),</span><br><span class=\"line\">    postcss: generateLoaders(),</span><br><span class=\"line\">    less: generateLoaders(<span class=\"string\">'less'</span>),</span><br><span class=\"line\">    sass: generateLoaders(<span class=\"string\">'sass'</span>, &#123; <span class=\"attr\">indentedSyntax</span>: <span class=\"literal\">true</span> &#125;),</span><br><span class=\"line\">    scss: generateLoaders(<span class=\"string\">'sass'</span>),</span><br><span class=\"line\">    stylus: generateLoaders(<span class=\"string\">'stylus'</span>),</span><br><span class=\"line\">    styl: generateLoaders(<span class=\"string\">'stylus'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Generate loaders for standalone style files (outside of .vue)</span></span><br><span class=\"line\"><span class=\"comment\">//为独立样式文件生成装载器（.vue之外）</span></span><br><span class=\"line\">exports.styleLoaders = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> output = []</span><br><span class=\"line\">  <span class=\"keyword\">const</span> loaders = exports.cssLoaders(options)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> extension <span class=\"keyword\">in</span> loaders) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> loader = loaders[extension]</span><br><span class=\"line\">    output.push(&#123;</span><br><span class=\"line\">      test: <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"string\">'\\\\.'</span> + extension + <span class=\"string\">'$'</span>),</span><br><span class=\"line\">      use: loader</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> output</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">exports.createNotifierCallback = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> notifier = <span class=\"built_in\">require</span>(<span class=\"string\">'node-notifier'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\">(<span class=\"params\">severity, errors</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (severity !== <span class=\"string\">'error'</span>) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> error = errors[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">const</span> filename = error.file &amp;&amp; error.file.split(<span class=\"string\">'!'</span>).pop()</span><br><span class=\"line\"></span><br><span class=\"line\">    notifier.notify(&#123;</span><br><span class=\"line\">      title: packageConfig.name,</span><br><span class=\"line\">      message: severity + <span class=\"string\">': '</span> + error.name,</span><br><span class=\"line\">      subtitle: filename || <span class=\"string\">''</span>,</span><br><span class=\"line\">      icon: path.join(__dirname, <span class=\"string\">'logo.png'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>vue-loader.js</code>只配置了css加载器以及配置资源路径。</p>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> isProduction = process.env.NODE_ENV === <span class=\"string\">'production'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> sourceMapEnabled = isProduction</span><br><span class=\"line\">  ? config.build.productionSourceMap</span><br><span class=\"line\">  : config.dev.cssSourceMap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// css加载器</span></span><br><span class=\"line\">  loaders: utils.cssLoaders(&#123;</span><br><span class=\"line\">    sourceMap: sourceMapEnabled,</span><br><span class=\"line\">    extract: isProduction</span><br><span class=\"line\">  &#125;),</span><br><span class=\"line\">  cssSourceMap: sourceMapEnabled, <span class=\"comment\">// 源码</span></span><br><span class=\"line\">  cacheBusting: config.dev.cacheBusting, <span class=\"comment\">// 缓存</span></span><br><span class=\"line\">  <span class=\"comment\">// 配置资源路径</span></span><br><span class=\"line\">  transformToRequire: &#123;</span><br><span class=\"line\">    video: [<span class=\"string\">'src'</span>, <span class=\"string\">'poster'</span>],</span><br><span class=\"line\">    source: <span class=\"string\">'src'</span>,</span><br><span class=\"line\">    img: <span class=\"string\">'src'</span>,</span><br><span class=\"line\">    image: <span class=\"string\">'xlink:href'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"build-js\"><a href=\"#build-js\" class=\"headerlink\" title=\"build.js\"></a>build.js</h3><p>开发环境下的配置讲完了，接下来讲构建环境下的配置，构建环境下执行<code>npm run build</code>的时候首先执行的是<code>build.js</code>文件，<code>build.js</code>文件主要做以下几件事：</p>\n<ol>\n<li>loading动画</li>\n<li>删除创建目标文件夹</li>\n<li>webpack编译</li>\n<li>输出信息</li>\n</ol>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'./check-versions'</span>)() <span class=\"comment\">// 检查nodejs和npm版本</span></span><br><span class=\"line\"></span><br><span class=\"line\">process.env.NODE_ENV = <span class=\"string\">'production'</span> <span class=\"comment\">// 当前环境为生产环境</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一个可以调用默认软件打开网址、图片、文件等内容的插件，</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> ora = <span class=\"built_in\">require</span>(<span class=\"string\">'ora'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> rm = <span class=\"built_in\">require</span>(<span class=\"string\">'rimraf'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> chalk = <span class=\"built_in\">require</span>(<span class=\"string\">'chalk'</span>) <span class=\"comment\">// 用于在控制台输出带颜色字体的插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.prod.conf'</span>) <span class=\"comment\">// 引入生产环境webpack配置</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> spinner = ora(<span class=\"string\">'building for production...'</span>)</span><br><span class=\"line\">spinner.start() <span class=\"comment\">// 开启loading动画</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm(path.join(config.build.assetsRoot, config.build.assetsSubDirectory), err =&gt; &#123; <span class=\"comment\">// 递归删除旧的目标文件夹</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err</span><br><span class=\"line\">  webpack(webpackConfig, (err, stats) =&gt; &#123; <span class=\"comment\">// webpack编译</span></span><br><span class=\"line\">    spinner.stop() <span class=\"comment\">// 停止loading动画</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) <span class=\"keyword\">throw</span> err <span class=\"comment\">// 没有出错则输出相关信息</span></span><br><span class=\"line\">    process.stdout.write(stats.toString(&#123;</span><br><span class=\"line\">      colors: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      modules: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      children: <span class=\"literal\">false</span>, <span class=\"comment\">// if you are using ts-loader, setting this to true will make tyescript errors show up during build</span></span><br><span class=\"line\">      chunks: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      chunkModules: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;) + <span class=\"string\">'\\n\\n'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (stats.hasErrors()) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(chalk.red(<span class=\"string\">'  Build failed with errors.\\n'</span>))</span><br><span class=\"line\">      process.exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.cyan(<span class=\"string\">'  Build complete.\\n'</span>))</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.yellow(</span><br><span class=\"line\">      <span class=\"string\">'  Tip: built files are meant to be served over an HTTP server.\\n'</span> +</span><br><span class=\"line\">      <span class=\"string\">'  Opening index.html over file:// won\\'t work.\\n'</span></span><br><span class=\"line\">    ))</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"webpack-prod-conf-js\"><a href=\"#webpack-prod-conf-js\" class=\"headerlink\" title=\"webpack.prod.conf.js\"></a>webpack.prod.conf.js</h3><p>构建的时候用到的webpack配置来自<code>webpack.prod.conf.js</code>，这个文件主要完成以下几件事：</p>\n<ol>\n<li>合并基础的webpack配置</li>\n<li>gzip模式下的webpack插件配置</li>\n<li>配置webpack插件</li>\n</ol>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(<span class=\"string\">'../config'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> CopyWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'copy-webpack-plugin'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> ExtractTextPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'extract-text-webpack-plugin'</span>) <span class=\"comment\">// 用于从webpack生成的bundle中提取文本到特定文件中的插件，可以抽取出css，js文件将其与webpack输出的bundle分离</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> OptimizeCSSPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'optimize-css-assets-webpack-plugin'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> UglifyJsPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'uglifyjs-webpack-plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> env = process.env.NODE_ENV === <span class=\"string\">'testing'</span></span><br><span class=\"line\">  ? <span class=\"built_in\">require</span>(<span class=\"string\">'../config/test.env'</span>)</span><br><span class=\"line\">  : <span class=\"built_in\">require</span>(<span class=\"string\">'../config/prod.env'</span>)</span><br><span class=\"line\"><span class=\"comment\">// 合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = merge(baseWebpackConfig, &#123;</span><br><span class=\"line\">  <span class=\"built_in\">module</span>: &#123;</span><br><span class=\"line\">    rules: utils.styleLoaders(&#123;</span><br><span class=\"line\">      sourceMap: config.build.productionSourceMap,</span><br><span class=\"line\">      extract: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      usePostCSS: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  devtool: config.build.productionSourceMap ? config.build.devtool : <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack的输出</span></span><br><span class=\"line\">  output: &#123;</span><br><span class=\"line\">    path: config.build.assetsRoot, <span class=\"comment\">// 编译输出目录</span></span><br><span class=\"line\">    filename: utils.assetsPath(<span class=\"string\">'js/[name].[chunkhash].js'</span>), <span class=\"comment\">// 编译输出文件名格式</span></span><br><span class=\"line\">    chunkFilename: utils.assetsPath(<span class=\"string\">'js/[id].[chunkhash].js'</span>) <span class=\"comment\">// 没有指定输出名的文件输出的文件名格式</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">// 配置webpack插件</span></span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"comment\">// http://vuejs.github.io/vue-loader/en/workflow/production.html</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">      <span class=\"string\">'process.env'</span>: env</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// 丑化压缩代码插件</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> UglifyJsPlugin(&#123;</span><br><span class=\"line\">      uglifyOptions: &#123;</span><br><span class=\"line\">        compress: &#123;</span><br><span class=\"line\">          warnings: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      sourceMap: config.build.productionSourceMap,</span><br><span class=\"line\">      parallel: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// extract css into its own file  抽离css文件</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> ExtractTextPlugin(&#123;</span><br><span class=\"line\">      filename: utils.assetsPath(<span class=\"string\">'css/[name].[contenthash].css'</span>),</span><br><span class=\"line\">      <span class=\"comment\">// Setting the following option to `false` will not extract CSS from codesplit chunks.</span></span><br><span class=\"line\">      <span class=\"comment\">// Their CSS will instead be inserted dynamically with style-loader when the codesplit chunk has been loaded by webpack.</span></span><br><span class=\"line\">      <span class=\"comment\">// It's currently set to `true` because we are seeing that sourcemaps are included in the codesplit bundle as well when it's `false`, </span></span><br><span class=\"line\">      <span class=\"comment\">// increasing file size: https://github.com/vuejs-templates/webpack/issues/1110</span></span><br><span class=\"line\">      allChunks: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// Compress extracted CSS. We are using this plugin so that possible</span></span><br><span class=\"line\">    <span class=\"comment\">// duplicated CSS from different components can be deduped.</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> OptimizeCSSPlugin(&#123;</span><br><span class=\"line\">      cssProcessorOptions: config.build.productionSourceMap</span><br><span class=\"line\">        ? &#123; <span class=\"attr\">safe</span>: <span class=\"literal\">true</span>, <span class=\"attr\">map</span>: &#123; <span class=\"attr\">inline</span>: <span class=\"literal\">false</span> &#125; &#125;</span><br><span class=\"line\">        : &#123; <span class=\"attr\">safe</span>: <span class=\"literal\">true</span> &#125;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// generate dist index.html with correct asset hash for caching.</span></span><br><span class=\"line\">    <span class=\"comment\">// you can customize output by editing /index.html</span></span><br><span class=\"line\">    <span class=\"comment\">// see https://github.com/ampedandwired/html-webpack-plugin</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;</span><br><span class=\"line\">      filename: config.build.index,</span><br><span class=\"line\">      template: <span class=\"string\">'index.html'</span>,</span><br><span class=\"line\">      inject: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      minify: &#123;</span><br><span class=\"line\">        removeComments: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        collapseWhitespace: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        removeAttributeQuotes: <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"comment\">// more options:</span></span><br><span class=\"line\">        <span class=\"comment\">// https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"comment\">// necessary to consistently work with multiple chunks via CommonsChunkPlugin</span></span><br><span class=\"line\">      chunksSortMode: <span class=\"string\">'dependency'</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// keep module.id stable when vender modules does not change</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.HashedModuleIdsPlugin(),</span><br><span class=\"line\">    <span class=\"comment\">// enable scope hoisting</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.optimize.ModuleConcatenationPlugin(),</span><br><span class=\"line\">    <span class=\"comment\">// split vendor js into its own file</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">      name: <span class=\"string\">'vendor'</span>,</span><br><span class=\"line\">      minChunks (<span class=\"built_in\">module</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// any required modules inside node_modules are extracted to vendor</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (</span><br><span class=\"line\">          <span class=\"built_in\">module</span>.resource &amp;&amp;</span><br><span class=\"line\">          /\\.js$/.test(<span class=\"built_in\">module</span>.resource) &amp;&amp;</span><br><span class=\"line\">          <span class=\"built_in\">module</span>.resource.indexOf(</span><br><span class=\"line\">            path.join(__dirname, <span class=\"string\">'../node_modules'</span>)</span><br><span class=\"line\">          ) === <span class=\"number\">0</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// extract webpack runtime and module manifest to its own file in order to</span></span><br><span class=\"line\">    <span class=\"comment\">// prevent vendor hash from being updated whenever app bundle is updated</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">      name: <span class=\"string\">'manifest'</span>,</span><br><span class=\"line\">      minChunks: <span class=\"literal\">Infinity</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    <span class=\"comment\">// This instance extracts shared chunks from code splitted chunks and bundles them</span></span><br><span class=\"line\">    <span class=\"comment\">// in a separate chunk, similar to the vendor chunk</span></span><br><span class=\"line\">    <span class=\"comment\">// see: https://webpack.js.org/plugins/commons-chunk-plugin/#extra-async-commons-chunk</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.optimize.CommonsChunkPlugin(&#123;</span><br><span class=\"line\">      name: <span class=\"string\">'app'</span>,</span><br><span class=\"line\">      <span class=\"keyword\">async</span>: <span class=\"string\">'vendor-async'</span>,</span><br><span class=\"line\">      children: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      minChunks: <span class=\"number\">3</span></span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// copy custom static assets</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> CopyWebpackPlugin([</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"keyword\">from</span>: path.resolve(__dirname, <span class=\"string\">'../static'</span>),</span><br><span class=\"line\">        to: config.build.assetsSubDirectory,</span><br><span class=\"line\">        ignore: [<span class=\"string\">'.*'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ])</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// gzip模式下需要引入compression插件进行压缩</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (config.build.productionGzip) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> CompressionWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'compression-webpack-plugin'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  webpackConfig.plugins.push(</span><br><span class=\"line\">    <span class=\"keyword\">new</span> CompressionWebpackPlugin(&#123;</span><br><span class=\"line\">      asset: <span class=\"string\">'[path].gz[query]'</span>,</span><br><span class=\"line\">      algorithm: <span class=\"string\">'gzip'</span>,</span><br><span class=\"line\">      test: <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(</span><br><span class=\"line\">        <span class=\"string\">'\\\\.('</span> +</span><br><span class=\"line\">        config.build.productionGzipExtensions.join(<span class=\"string\">'|'</span>) +</span><br><span class=\"line\">        <span class=\"string\">')$'</span></span><br><span class=\"line\">      ),</span><br><span class=\"line\">      threshold: <span class=\"number\">10240</span>,</span><br><span class=\"line\">      minRatio: <span class=\"number\">0.8</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (config.build.bundleAnalyzerReport) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> BundleAnalyzerPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-bundle-analyzer'</span>).BundleAnalyzerPlugin</span><br><span class=\"line\">  webpackConfig.plugins.push(<span class=\"keyword\">new</span> BundleAnalyzerPlugin())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = webpackConfig</span><br></pre></td></tr></table></figure>\n<h3 id=\"check-versions-js\"><a href=\"#check-versions-js\" class=\"headerlink\" title=\"check-versions.js\"></a>check-versions.js</h3><p>从<code>build.js</code>文件可以看出引用了<code>check-versions.js</code>，从名字可以看出这个文件大概做的事情就是确认<code>npm</code>和<code>node</code>版本。</p>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> chalk = <span class=\"built_in\">require</span>(<span class=\"string\">'chalk'</span>) <span class=\"comment\">// 用于在控制台输出带颜色字体的插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> semver = <span class=\"built_in\">require</span>(<span class=\"string\">'semver'</span>) <span class=\"comment\">// 语义化版本检查插件</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> packageConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'../package.json'</span>) <span class=\"comment\">// 引入package.json</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> shell = <span class=\"built_in\">require</span>(<span class=\"string\">'shelljs'</span>) <span class=\"comment\">// 执行Unix命令行的插件</span></span><br><span class=\"line\"><span class=\"comment\">// 开辟子进程执行指令cmd并返回结果</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">exec</span> (<span class=\"params\">cmd</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">require</span>(<span class=\"string\">'child_process'</span>).execSync(cmd).toString().trim()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// node和npm版本需求</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> versionRequirements = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    name: <span class=\"string\">'node'</span>,</span><br><span class=\"line\">    currentVersion: semver.clean(process.version),</span><br><span class=\"line\">    versionRequirement: packageConfig.engines.node</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">if</span> (shell.which(<span class=\"string\">'npm'</span>)) &#123;</span><br><span class=\"line\">  versionRequirements.push(&#123;</span><br><span class=\"line\">    name: <span class=\"string\">'npm'</span>,</span><br><span class=\"line\">    currentVersion: exec(<span class=\"string\">'npm --version'</span>),</span><br><span class=\"line\">    versionRequirement: packageConfig.engines.npm</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> warnings = []</span><br><span class=\"line\"><span class=\"comment\">// 依次判断版本是否符合要求</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; versionRequirements.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> mod = versionRequirements[i]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!semver.satisfies(mod.currentVersion, mod.versionRequirement)) &#123;</span><br><span class=\"line\">      warnings.push(mod.name + <span class=\"string\">': '</span> +</span><br><span class=\"line\">        chalk.red(mod.currentVersion) + <span class=\"string\">' should be '</span> +</span><br><span class=\"line\">        chalk.green(mod.versionRequirement)</span><br><span class=\"line\">      )</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"comment\">// 如果有警告则将其输出到控制台</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (warnings.length) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">''</span>)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(chalk.yellow(<span class=\"string\">'To use this template, you must update following to modules:'</span>))</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; warnings.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> warning = warnings[i]</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'  '</span> + warning)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log()</span><br><span class=\"line\">    process.exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"webpack-test-conf-js\"><a href=\"#webpack-test-conf-js\" class=\"headerlink\" title=\"webpack.test.conf.js\"></a>webpack.test.conf.js</h3><p>这个文件是单元测试环境的webpack配置文件,该配置是在<code>webpack.base.conf.js</code>的基础上做进一步完善。</p>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> utils = <span class=\"built_in\">require</span>(<span class=\"string\">'./utils'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> baseWebpackConfig = <span class=\"built_in\">require</span>(<span class=\"string\">'./webpack.base.conf'</span>)</span><br><span class=\"line\"><span class=\"comment\">// 合并基础的webpack配置</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> webpackConfig = merge(baseWebpackConfig, &#123;</span><br><span class=\"line\">  devtool: <span class=\"string\">'#inline-source-map'</span>,</span><br><span class=\"line\">  resolveLoader: &#123;</span><br><span class=\"line\">    alias: &#123;</span><br><span class=\"line\">      <span class=\"string\">'scss-loader'</span>: <span class=\"string\">'sass-loader'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 配置webpack插件</span></span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    <span class=\"keyword\">new</span> webpack.DefinePlugin(&#123;</span><br><span class=\"line\">      <span class=\"string\">'process.env'</span>: <span class=\"built_in\">require</span>(<span class=\"string\">'../config/test.env'</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// no need for app entry during tests</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> webpackConfig.entry</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = webpackConfig</span><br></pre></td></tr></table></figure>\n<h2 id=\"config文件夹分析\"><a href=\"#config文件夹分析\" class=\"headerlink\" title=\"config文件夹分析\"></a>config文件夹分析</h2><h3 id=\"index-js\"><a href=\"#index-js\" class=\"headerlink\" title=\"index.js\"></a>index.js</h3><p>config文件夹下最主要的文件是<code>index.js</code>，在这里面描述了三种环境下的配置，分别为开发、构建和测试。</p>\n<p>代码注释：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"comment\">// Template version: 1.2.7</span></span><br><span class=\"line\"><span class=\"comment\">// see http://vuejs-templates.github.io/webpack for documentation.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 开发过程中使用的配置</span></span><br><span class=\"line\">  dev: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Paths</span></span><br><span class=\"line\">    assetsSubDirectory: <span class=\"string\">'static'</span>, <span class=\"comment\">// webpack编译输出的二级文件夹</span></span><br><span class=\"line\">    assetsPublicPath: <span class=\"string\">'/'</span>, <span class=\"comment\">// webpack编译输出的发布路径</span></span><br><span class=\"line\">    proxyTable: &#123;&#125;,<span class=\"comment\">// 请求代理表，在这里可以配置特定的请求代理到对应的API接口，例如将'/api/xxx'代理到'www.example.com/api/xxx'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Various Dev Server settings</span></span><br><span class=\"line\">    <span class=\"comment\">// 各种开发服务器设置</span></span><br><span class=\"line\">    host: <span class=\"string\">'localhost'</span>, <span class=\"comment\">// can be overwritten by process.env.HOST</span></span><br><span class=\"line\">    port: <span class=\"number\">8080</span>, <span class=\"comment\">// can be overwritten by process.env.PORT, if port is in use, a free one will be determined</span></span><br><span class=\"line\">    autoOpenBrowser: <span class=\"literal\">false</span>, <span class=\"comment\">// 启动dev-server之后不自动打开浏览器</span></span><br><span class=\"line\">    errorOverlay: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    notifyOnErrors: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    poll: <span class=\"literal\">false</span>, <span class=\"comment\">// https://webpack.js.org/configuration/dev-server/#devserver-watchoptions-</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Use Eslint Loader?</span></span><br><span class=\"line\">    <span class=\"comment\">// If true, your code will be linted during bundling and</span></span><br><span class=\"line\">    <span class=\"comment\">// linting errors and warnings will be shown in the console.</span></span><br><span class=\"line\">    useEslint: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// If true, eslint errors and warnings will also be shown in the error overlay</span></span><br><span class=\"line\">    <span class=\"comment\">// in the browser.</span></span><br><span class=\"line\">    showEslintErrorsInOverlay: <span class=\"literal\">false</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Source Maps</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// https://webpack.js.org/configuration/devtool/#development</span></span><br><span class=\"line\">    devtool: <span class=\"string\">'eval-source-map'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// If you have problems debugging vue-files in devtools,</span></span><br><span class=\"line\">    <span class=\"comment\">// set this to false - it *may* help</span></span><br><span class=\"line\">    <span class=\"comment\">// https://vue-loader.vuejs.org/en/options.html#cachebusting</span></span><br><span class=\"line\">    cacheBusting: <span class=\"literal\">true</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// CSS Sourcemaps off by default because relative paths are \"buggy\"</span></span><br><span class=\"line\">    <span class=\"comment\">// with this option, according to the CSS-Loader README</span></span><br><span class=\"line\">    <span class=\"comment\">// (https://github.com/webpack/css-loader#sourcemaps)</span></span><br><span class=\"line\">    <span class=\"comment\">// In our experience, they generally work as expected,</span></span><br><span class=\"line\">    <span class=\"comment\">// just be aware of this issue when enabling this option.</span></span><br><span class=\"line\">    cssSourceMap: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"><span class=\"comment\">// 构建产品时使用的配置</span></span><br><span class=\"line\">  build: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Template for index.html</span></span><br><span class=\"line\">    index: path.resolve(__dirname, <span class=\"string\">'../dist/index.html'</span>), <span class=\"comment\">// 编译输入的index.html文件</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Paths</span></span><br><span class=\"line\">    assetsRoot: path.resolve(__dirname, <span class=\"string\">'../dist'</span>), <span class=\"comment\">// webpack输出的目标文件夹路径</span></span><br><span class=\"line\">    assetsSubDirectory: <span class=\"string\">'static'</span>, <span class=\"comment\">// webpack编译输出的二级文件夹</span></span><br><span class=\"line\">    assetsPublicPath: <span class=\"string\">'/'</span>, <span class=\"comment\">// webpack编译输出的发布路径</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Source Maps</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    productionSourceMap: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// https://webpack.js.org/configuration/devtool/#production</span></span><br><span class=\"line\">    devtool: <span class=\"string\">'#source-map'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Gzip off by default as many popular static hosts such as</span></span><br><span class=\"line\">    <span class=\"comment\">// Surge or Netlify already gzip all static assets for you.</span></span><br><span class=\"line\">    <span class=\"comment\">// Before setting to `true`, make sure to:</span></span><br><span class=\"line\">    <span class=\"comment\">// npm install --save-dev compression-webpack-plugin</span></span><br><span class=\"line\">    productionGzip: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    productionGzipExtensions: [<span class=\"string\">'js'</span>, <span class=\"string\">'css'</span>], <span class=\"comment\">// gzip模式下需要压缩的文件的扩展名</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Run the build command with an extra argument to</span></span><br><span class=\"line\">    <span class=\"comment\">// View the bundle analyzer report after build finishes:</span></span><br><span class=\"line\">    <span class=\"comment\">// `npm run build --report`</span></span><br><span class=\"line\">    <span class=\"comment\">// Set to `true` or `false` to always turn it on or off</span></span><br><span class=\"line\">    bundleAnalyzerReport: process.env.npm_config_report</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"dev-env-js、prod-env-js和test-env-js\"><a href=\"#dev-env-js、prod-env-js和test-env-js\" class=\"headerlink\" title=\"dev.env.js、prod.env.js和test.env.js\"></a>dev.env.js、prod.env.js和test.env.js</h3><p>这三个文件分别设置了开发环境、构建环境以及测试环境的环境变量</p>\n<h4 id=\"dev-env-js\"><a href=\"#dev-env-js\" class=\"headerlink\" title=\"dev.env.js\"></a>dev.env.js</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置了开发环境的环境变量</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> prodEnv = <span class=\"built_in\">require</span>(<span class=\"string\">'./prod.env'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(prodEnv, &#123;</span><br><span class=\"line\">  NODE_ENV: <span class=\"string\">'\"development\"'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"prod-env-js\"><a href=\"#prod-env-js\" class=\"headerlink\" title=\"prod.env.js\"></a>prod.env.js</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置了生产环境的环境变量</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  NODE_ENV: <span class=\"string\">'\"production\"'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"test-env-js\"><a href=\"#test-env-js\" class=\"headerlink\" title=\"test.env.js\"></a>test.env.js</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置了测试环境的环境变量</span></span><br><span class=\"line\"><span class=\"meta\">'use strict'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> merge = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-merge'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> devEnv = <span class=\"built_in\">require</span>(<span class=\"string\">'./dev.env'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = merge(devEnv, &#123;</span><br><span class=\"line\">  NODE_ENV: <span class=\"string\">'\"testing\"'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>webpack没有想的这么难也没想的这么简单。坊间流传webpack不难，难的是配置。可以把官网文档看一遍然后跟着指南敲一遍，去体会这个打包流程的奥妙，大概能学到些什么。<a href=\"https://doc.webpack-china.org/concepts/\" target=\"_blank\" rel=\"noopener\">webpack中文文档</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjlf18guc0001oaqoauthju1j","category_id":"cjlf18gui0005oaqo28s44wij","_id":"cjlf18gup000eoaqorfvbxzl5"},{"post_id":"cjlf18gul0009oaqou5xvrlp0","category_id":"cjlf18gui0005oaqo28s44wij","_id":"cjlf18gus000ioaqov0op1noa"},{"post_id":"cjlf18guf0003oaqokdd1u2cf","category_id":"cjlf18gum000aoaqosssy1mla","_id":"cjlf18guu000noaqoa215ora1"},{"post_id":"cjlf18gur000hoaqo4whyub6l","category_id":"cjlf18gui0005oaqo28s44wij","_id":"cjlf18guv000roaqoffaxcfyb"},{"post_id":"cjlf18guj0007oaqor8ukbunn","category_id":"cjlf18gui0005oaqo28s44wij","_id":"cjlf18gux000voaqokpisgtjo"},{"post_id":"cjlf18gul0008oaqo14nam75l","category_id":"cjlf18gut000moaqo87d4rcty","_id":"cjlf18guy000yoaqoeroie0b6"},{"post_id":"cjlf18gun000coaqooqy2t8wa","category_id":"cjlf18guw000soaqowbc9lqwp","_id":"cjlf18gv00014oaqoufcinree"},{"post_id":"cjlf18guo000doaqozxgr0lbe","category_id":"cjlf18guy0010oaqokkq13vwg","_id":"cjlf18gv2001boaqo9j5yxf9u"},{"post_id":"cjlf18gut000koaqochpiriia","category_id":"cjlf18gv00016oaqoq9nnksci","_id":"cjlf18gv5001hoaqogj36f1f2"},{"post_id":"cjlf18gv2001aoaqow9gk8anb","category_id":"cjlf18guw000soaqowbc9lqwp","_id":"cjlf18gv6001loaqohe2gt7xg"},{"post_id":"cjlf18gv3001foaqordbj8m5j","category_id":"cjlf18gui0005oaqo28s44wij","_id":"cjlf18gv7001noaqoeu7qknpe"},{"post_id":"cjlf18guu000poaqo0mfqkdaw","category_id":"cjlf18gv2001doaqogzmk1qaw","_id":"cjlf18gv9001roaqo3ib87d9u"},{"post_id":"cjlf18guv000qoaqolw8l0znh","category_id":"cjlf18gv5001ioaqojw6cml9c","_id":"cjlf18gva001uoaqowe1s1trf"},{"post_id":"cjlf18gv8001poaqoonylbb64","category_id":"cjlf18gv00016oaqoq9nnksci","_id":"cjlf18gvc0021oaqonq2fkyht"},{"post_id":"cjlf18guw000uoaqoidbrkr5s","category_id":"cjlf18gv8001ooaqof5ju3tb6","_id":"cjlf18gvd0024oaqonwu9u2ii"},{"post_id":"cjlf18gvb001woaqo8n2gw919","category_id":"cjlf18gv5001ioaqojw6cml9c","_id":"cjlf18gvf0027oaqoovva4oe3"},{"post_id":"cjlf18gux000xoaqoqlrk6pil","category_id":"cjlf18gv5001ioaqojw6cml9c","_id":"cjlf18gvf002boaqoprde7av1"},{"post_id":"cjlf18gvd0022oaqoi8khrjx7","category_id":"cjlf18gui0005oaqo28s44wij","_id":"cjlf18gvh002foaqodde7s2p1"},{"post_id":"cjlf18guy0011oaqod9xjrrge","category_id":"cjlf18gv00016oaqoq9nnksci","_id":"cjlf18gvi002ioaqoc3qqt0fr"},{"post_id":"cjlf18gvg002eoaqowg9qd57h","category_id":"cjlf18gv2001doaqogzmk1qaw","_id":"cjlf18gvk002noaqoa149gx00"},{"post_id":"cjlf18guz0013oaqo71zrzd00","category_id":"cjlf18gv8001ooaqof5ju3tb6","_id":"cjlf18gvl002roaqoyhmz1bda"},{"post_id":"cjlf18gvh002goaqou5fnwzbf","category_id":"cjlf18gui0005oaqo28s44wij","_id":"cjlf18gvm002uoaqoz3n50kq6"},{"post_id":"cjlf18gvi002joaqo4r54pjul","category_id":"cjlf18gui0005oaqo28s44wij","_id":"cjlf18gvn002xoaqo0yx0x3r7"},{"post_id":"cjlf18gv00015oaqolns1ae4s","category_id":"cjlf18gv00016oaqoq9nnksci","_id":"cjlf18gvo0030oaqomoeqtnlm"},{"post_id":"cjlf18gvj002moaqojxipyizm","category_id":"cjlf18guw000soaqowbc9lqwp","_id":"cjlf18gvp0034oaqow6i34xzg"},{"post_id":"cjlf18gvk002qoaqofka5877y","category_id":"cjlf18gui0005oaqo28s44wij","_id":"cjlf18gvq0038oaqoiav6s9ts"},{"post_id":"cjlf18gv10018oaqovwjsf3r8","category_id":"cjlf18gv2001doaqogzmk1qaw","_id":"cjlf18gvr003boaqotwz6692a"},{"post_id":"cjlf18gvl002toaqo6i10nsmp","category_id":"cjlf18gui0005oaqo28s44wij","_id":"cjlf18gvs003eoaqoqskx58z8"},{"post_id":"cjlf18gvm002woaqoba41g92a","category_id":"cjlf18guy0010oaqokkq13vwg","_id":"cjlf18gvu003ioaqov6u4eea9"},{"post_id":"cjlf18gv4001goaqonc0c7eku","category_id":"cjlf18gvm002voaqoq03kd9kb","_id":"cjlf18gvv003loaqo1y2crlbu"},{"post_id":"cjlf18gvn002zoaqoi39lnkad","category_id":"cjlf18guy0010oaqokkq13vwg","_id":"cjlf18gvw003poaqo0adgfixp"},{"post_id":"cjlf18gvo0033oaqo3qw6xzpc","category_id":"cjlf18guy0010oaqokkq13vwg","_id":"cjlf18gvx003roaqobzju5sru"},{"post_id":"cjlf18gv6001koaqop37ublnt","category_id":"cjlf18gvm002voaqoq03kd9kb","_id":"cjlf18gvz003voaqozh97xj2y"},{"post_id":"cjlf18gvq0037oaqoglt9iu9g","category_id":"cjlf18guy0010oaqokkq13vwg","_id":"cjlf18gw0003yoaqouhiy9kox"},{"post_id":"cjlf18gvr003aoaqosgcqjycg","category_id":"cjlf18guy0010oaqokkq13vwg","_id":"cjlf18gw10042oaqo1nbt9zzd"},{"post_id":"cjlf18gv6001moaqousrkq3qu","category_id":"cjlf18gvm002voaqoq03kd9kb","_id":"cjlf18gw20045oaqo7pt78mpo"},{"post_id":"cjlf18gvs003doaqowo0z3zu8","category_id":"cjlf18gv5001ioaqojw6cml9c","_id":"cjlf18gw30048oaqoi7gkfd5u"},{"post_id":"cjlf18gva001toaqo06pszz4p","category_id":"cjlf18gvt003foaqok5r3zach","_id":"cjlf18gw5004coaqohiiy64oq"},{"post_id":"cjlf18gvu003koaqox8dtvr84","category_id":"cjlf18gv8001ooaqof5ju3tb6","_id":"cjlf18gw6004foaqo2q5w7b3j"},{"post_id":"cjlf18gvc0020oaqo4hgaoax2","category_id":"cjlf18gvv003noaqoh1oi3x85","_id":"cjlf18gw7004ioaqo45eou9p6"},{"post_id":"cjlf18gvw003qoaqob0lpyzwf","category_id":"cjlf18gv00016oaqoq9nnksci","_id":"cjlf18gw7004joaqo2k8c4smc"},{"post_id":"cjlf18gvy003uoaqocntrw66u","category_id":"cjlf18gum000aoaqosssy1mla","_id":"cjlf18gw8004moaqol1mbksoj"},{"post_id":"cjlf18gvz003xoaqo6lcxupew","category_id":"cjlf18guy0010oaqokkq13vwg","_id":"cjlf18gw8004ooaqoetsadlum"},{"post_id":"cjlf18gve0026oaqoup8s1svx","category_id":"cjlf18gvx003toaqo2iia2c9v","_id":"cjlf18gw9004soaqozgw4rdrr"},{"post_id":"cjlf18gw20044oaqohpbtij8z","category_id":"cjlf18gui0005oaqo28s44wij","_id":"cjlf18gw9004toaqo658zo1c4"},{"post_id":"cjlf18gvf0029oaqod3t9mg0o","category_id":"cjlf18gw10043oaqol684q3og","_id":"cjlf18gw9004woaqo07wp67rc"},{"post_id":"cjlf18gvt003hoaqo74xzxtip","category_id":"cjlf18gw40049oaqovzefmbrb","_id":"cjlf18gwa004xoaqomgh98rif"},{"post_id":"cjlf18gw6004eoaqog6rp68ni","category_id":"cjlf18guy0010oaqokkq13vwg","_id":"cjlf18gwa004yoaqof7un3dkt"},{"post_id":"cjlf18gvv003ooaqo4ec9kaep","category_id":"cjlf18gw10043oaqol684q3og","_id":"cjlf18gwb0051oaqo04daywoi"},{"post_id":"cjlf18gw00041oaqobcw2de7z","category_id":"cjlf18gw10043oaqol684q3og","_id":"cjlf18gwb0053oaqoz4xsaiu8"},{"post_id":"cjlf18gw20047oaqoda7r6ybn","category_id":"cjlf18gw8004qoaqo4mh64mzv","_id":"cjlf18gwb0056oaqomuncg5nl"},{"post_id":"cjlf18gw4004boaqolxrs3o84","category_id":"cjlf18gw8004qoaqo4mh64mzv","_id":"cjlf18gwb0057oaqoj4n8zgvq"},{"post_id":"cjlf18gxj009roaqoe0g3k940","category_id":"cjlf18gv5001ioaqojw6cml9c","_id":"cjlf18gxk009toaqomjiuk8fh"},{"post_id":"cjlf18gyy00a0oaqo3mx2c0t3","category_id":"cjlf18gw40049oaqovzefmbrb","_id":"cjlf18gz000a2oaqoccpgg9tn"}],"PostTag":[{"post_id":"cjlf18guc0001oaqoauthju1j","tag_id":"cjlf18guj0006oaqoa9wpnv6m","_id":"cjlf18gus000joaqoqk7wdhei"},{"post_id":"cjlf18guc0001oaqoauthju1j","tag_id":"cjlf18gum000boaqo1ihr8637","_id":"cjlf18gut000loaqo6i362scx"},{"post_id":"cjlf18guf0003oaqokdd1u2cf","tag_id":"cjlf18gup000goaqo3rk0g95q","_id":"cjlf18gux000woaqo2fyswyj5"},{"post_id":"cjlf18guf0003oaqokdd1u2cf","tag_id":"cjlf18guu000ooaqo1v1df8k1","_id":"cjlf18guy000zoaqoqtinfuo5"},{"post_id":"cjlf18guj0007oaqor8ukbunn","tag_id":"cjlf18guw000toaqofmjw5jgz","_id":"cjlf18gv10019oaqookapnxiq"},{"post_id":"cjlf18guj0007oaqor8ukbunn","tag_id":"cjlf18guz0012oaqosweq6csv","_id":"cjlf18gv2001coaqo7y4xcf6e"},{"post_id":"cjlf18gul0008oaqo14nam75l","tag_id":"cjlf18gv00017oaqohsb5eu8y","_id":"cjlf18gva001soaqosr02utsi"},{"post_id":"cjlf18gul0008oaqo14nam75l","tag_id":"cjlf18gv2001eoaqoq1s3y73t","_id":"cjlf18gva001voaqopww69x2v"},{"post_id":"cjlf18gul0008oaqo14nam75l","tag_id":"cjlf18gv5001joaqowfikiq9r","_id":"cjlf18gvc001zoaqo6r8cylx4"},{"post_id":"cjlf18gul0009oaqou5xvrlp0","tag_id":"cjlf18gv9001qoaqovsjh5tmz","_id":"cjlf18gvf0028oaqocygorqs0"},{"post_id":"cjlf18gul0009oaqou5xvrlp0","tag_id":"cjlf18gvc001yoaqop4nj5fip","_id":"cjlf18gvg002coaqo4pc2awli"},{"post_id":"cjlf18gun000coaqooqy2t8wa","tag_id":"cjlf18gve0025oaqoisfulrgp","_id":"cjlf18gvj002loaqoq6ezj3yr"},{"post_id":"cjlf18gun000coaqooqy2t8wa","tag_id":"cjlf18gvg002doaqomzifp1f6","_id":"cjlf18gvk002poaqo6ti30jkz"},{"post_id":"cjlf18guo000doaqozxgr0lbe","tag_id":"cjlf18gvj002koaqo1kqw05ig","_id":"cjlf18gvo0032oaqoi10qe9p5"},{"post_id":"cjlf18guo000doaqozxgr0lbe","tag_id":"cjlf18gvl002soaqoil3f3xzd","_id":"cjlf18gvp0035oaqo513czp5q"},{"post_id":"cjlf18gur000hoaqo4whyub6l","tag_id":"cjlf18guw000toaqofmjw5jgz","_id":"cjlf18gvt003goaqoh9tb7gy6"},{"post_id":"cjlf18gur000hoaqo4whyub6l","tag_id":"cjlf18gvp0036oaqox1h1o31w","_id":"cjlf18gvu003joaqoa0mzmtaq"},{"post_id":"cjlf18gut000koaqochpiriia","tag_id":"cjlf18gvs003coaqop565iwc9","_id":"cjlf18gvz003woaqovwtj80et"},{"post_id":"cjlf18gut000koaqochpiriia","tag_id":"cjlf18gvv003moaqoo0ef5ly9","_id":"cjlf18gw0003zoaqo6uprr29e"},{"post_id":"cjlf18guu000poaqo0mfqkdaw","tag_id":"cjlf18gvx003soaqofbxysrtx","_id":"cjlf18gw4004aoaqopjgdg9o6"},{"post_id":"cjlf18guu000poaqo0mfqkdaw","tag_id":"cjlf18gw00040oaqowjr71u5y","_id":"cjlf18gw5004doaqod88243ah"},{"post_id":"cjlf18guv000qoaqolw8l0znh","tag_id":"cjlf18gw20046oaqo67jpt15s","_id":"cjlf18gw8004noaqons9meptg"},{"post_id":"cjlf18guv000qoaqolw8l0znh","tag_id":"cjlf18gw6004goaqoea1dieti","_id":"cjlf18gw8004poaqony69kd0f"},{"post_id":"cjlf18guw000uoaqoidbrkr5s","tag_id":"cjlf18gw7004koaqoyamunj00","_id":"cjlf18gwb0050oaqoysmcelur"},{"post_id":"cjlf18guw000uoaqoidbrkr5s","tag_id":"cjlf18gw8004roaqo85akp8yb","_id":"cjlf18gwb0052oaqoplqotmqy"},{"post_id":"cjlf18guw000uoaqoidbrkr5s","tag_id":"cjlf18gw9004voaqoqttngyru","_id":"cjlf18gwb0055oaqoc5oqsob4"},{"post_id":"cjlf18gux000xoaqoqlrk6pil","tag_id":"cjlf18gwa004zoaqoc6wrppum","_id":"cjlf18gwc0059oaqo7nwwah68"},{"post_id":"cjlf18gux000xoaqoqlrk6pil","tag_id":"cjlf18gwb0054oaqoy2pj4540","_id":"cjlf18gwc005aoaqoulquxtta"},{"post_id":"cjlf18guy0011oaqod9xjrrge","tag_id":"cjlf18gwc0058oaqoy9j7k19f","_id":"cjlf18gwd005doaqon8q9m3so"},{"post_id":"cjlf18guy0011oaqod9xjrrge","tag_id":"cjlf18gwc005boaqog7oyzpg0","_id":"cjlf18gwd005eoaqogspructx"},{"post_id":"cjlf18guz0013oaqo71zrzd00","tag_id":"cjlf18gwd005coaqoihdb3wed","_id":"cjlf18gwg005hoaqoofe05l8a"},{"post_id":"cjlf18guz0013oaqo71zrzd00","tag_id":"cjlf18gwd005foaqoupgz1utn","_id":"cjlf18gwh005ioaqoso34urov"},{"post_id":"cjlf18gv00015oaqolns1ae4s","tag_id":"cjlf18gwc005boaqog7oyzpg0","_id":"cjlf18gwi005loaqohlpktqch"},{"post_id":"cjlf18gv00015oaqolns1ae4s","tag_id":"cjlf18gwh005joaqog51mjd37","_id":"cjlf18gwi005moaqoxv7m2f65"},{"post_id":"cjlf18gv10018oaqovwjsf3r8","tag_id":"cjlf18gwi005koaqo1ck1p1r6","_id":"cjlf18gwk005qoaqo4k9ezl3d"},{"post_id":"cjlf18gv10018oaqovwjsf3r8","tag_id":"cjlf18gwi005noaqolsuxeloj","_id":"cjlf18gwk005roaqoud96hxfn"},{"post_id":"cjlf18gv10018oaqovwjsf3r8","tag_id":"cjlf18gvx003soaqofbxysrtx","_id":"cjlf18gwk005toaqohngdlrs7"},{"post_id":"cjlf18gv2001aoaqow9gk8anb","tag_id":"cjlf18gwj005poaqoqvyiif5s","_id":"cjlf18gwk005uoaqoa34njz5j"},{"post_id":"cjlf18gv3001foaqordbj8m5j","tag_id":"cjlf18gwk005soaqoxmurn0vo","_id":"cjlf18gwl005xoaqoluio1gw9"},{"post_id":"cjlf18gv3001foaqordbj8m5j","tag_id":"cjlf18gwl005voaqo8cqe8yxg","_id":"cjlf18gwm005yoaqoaru29o8l"},{"post_id":"cjlf18gv4001goaqonc0c7eku","tag_id":"cjlf18gwl005woaqo0xjosr0l","_id":"cjlf18gwn0062oaqon23frfn9"},{"post_id":"cjlf18gv4001goaqonc0c7eku","tag_id":"cjlf18gwm005zoaqoxb6uxjc1","_id":"cjlf18gwn0063oaqobr3d0l06"},{"post_id":"cjlf18gv4001goaqonc0c7eku","tag_id":"cjlf18gwm0060oaqoaj1nznau","_id":"cjlf18gwn0065oaqoobise869"},{"post_id":"cjlf18gv6001koaqop37ublnt","tag_id":"cjlf18gwm0061oaqo6p8kwdhm","_id":"cjlf18gwo0067oaqoqbokjmvn"},{"post_id":"cjlf18gv6001koaqop37ublnt","tag_id":"cjlf18gwn0064oaqofdd4st4n","_id":"cjlf18gwo0068oaqoxepoqb0f"},{"post_id":"cjlf18gv6001moaqousrkq3qu","tag_id":"cjlf18gwm0061oaqo6p8kwdhm","_id":"cjlf18gwo006aoaqo3uqff07r"},{"post_id":"cjlf18gv8001poaqoonylbb64","tag_id":"cjlf18gwo0069oaqojffihkcr","_id":"cjlf18gwp006doaqojulor3jg"},{"post_id":"cjlf18gv8001poaqoonylbb64","tag_id":"cjlf18gwo006boaqoqqhphdqs","_id":"cjlf18gwp006eoaqo1zrtzaeg"},{"post_id":"cjlf18gva001toaqo06pszz4p","tag_id":"cjlf18gwo006coaqogee0186o","_id":"cjlf18gwp006hoaqo6qis7w0i"},{"post_id":"cjlf18gva001toaqo06pszz4p","tag_id":"cjlf18gwp006foaqosugae1n7","_id":"cjlf18gwp006ioaqo9u6g631n"},{"post_id":"cjlf18gvb001woaqo8n2gw919","tag_id":"cjlf18gwp006goaqoahcd754z","_id":"cjlf18gwq006moaqogaktpv42"},{"post_id":"cjlf18gvb001woaqo8n2gw919","tag_id":"cjlf18gwp006joaqo0z1ytuqq","_id":"cjlf18gwq006noaqoex41hqhk"},{"post_id":"cjlf18gvb001woaqo8n2gw919","tag_id":"cjlf18gwp006koaqoo92pv08g","_id":"cjlf18gwq006poaqoa2j4vrky"},{"post_id":"cjlf18gvc0020oaqo4hgaoax2","tag_id":"cjlf18gwp006loaqolzl5jflw","_id":"cjlf18gwq006qoaqovli0dwjp"},{"post_id":"cjlf18gvd0022oaqoi8khrjx7","tag_id":"cjlf18gwq006ooaqoo2vx30uj","_id":"cjlf18gwq006soaqoh0ss0nbr"},{"post_id":"cjlf18gve0026oaqoup8s1svx","tag_id":"cjlf18gwq006roaqoqh03ub1p","_id":"cjlf18gwq006voaqonezfyd5u"},{"post_id":"cjlf18gve0026oaqoup8s1svx","tag_id":"cjlf18gwq006toaqoxvk829s5","_id":"cjlf18gwq006woaqovrmisuet"},{"post_id":"cjlf18gvf0029oaqod3t9mg0o","tag_id":"cjlf18gwq006uoaqo8c4unsfk","_id":"cjlf18gwr006yoaqosti7xj9m"},{"post_id":"cjlf18gvg002eoaqowg9qd57h","tag_id":"cjlf18gvx003soaqofbxysrtx","_id":"cjlf18gwr0071oaqowfr4oa7s"},{"post_id":"cjlf18gvg002eoaqowg9qd57h","tag_id":"cjlf18gwi005noaqolsuxeloj","_id":"cjlf18gwr0072oaqoigsklf7a"},{"post_id":"cjlf18gvh002goaqou5fnwzbf","tag_id":"cjlf18gwr0070oaqogaddanxo","_id":"cjlf18gwr0074oaqo2s7y9940"},{"post_id":"cjlf18gvi002joaqo4r54pjul","tag_id":"cjlf18gwr0073oaqodab627yy","_id":"cjlf18gws0076oaqoef0insx1"},{"post_id":"cjlf18gvj002moaqojxipyizm","tag_id":"cjlf18gws0075oaqopt2398a8","_id":"cjlf18gws0079oaqooiwkb8o7"},{"post_id":"cjlf18gvj002moaqojxipyizm","tag_id":"cjlf18gws0077oaqodgxkm1kz","_id":"cjlf18gws007aoaqo6oizqacr"},{"post_id":"cjlf18gvk002qoaqofka5877y","tag_id":"cjlf18gws0078oaqoks8ka6ao","_id":"cjlf18gwt007doaqotl45gwys"},{"post_id":"cjlf18gvk002qoaqofka5877y","tag_id":"cjlf18gws007boaqo2utk3e3e","_id":"cjlf18gwt007eoaqonfgfjji6"},{"post_id":"cjlf18gvl002toaqo6i10nsmp","tag_id":"cjlf18gws007coaqoihhagg1t","_id":"cjlf18gwu007moaqor2ic7p3q"},{"post_id":"cjlf18gvl002toaqo6i10nsmp","tag_id":"cjlf18gwt007foaqo3un1kffu","_id":"cjlf18gwu007noaqo62pgqc01"},{"post_id":"cjlf18gvl002toaqo6i10nsmp","tag_id":"cjlf18gwt007goaqo1os0bcf3","_id":"cjlf18gwu007poaqob0u90j6v"},{"post_id":"cjlf18gvl002toaqo6i10nsmp","tag_id":"cjlf18gwt007hoaqohsj6tkff","_id":"cjlf18gwu007qoaqo80yys7bf"},{"post_id":"cjlf18gvl002toaqo6i10nsmp","tag_id":"cjlf18gwt007ioaqojmj6vl53","_id":"cjlf18gwu007soaqodr41qm73"},{"post_id":"cjlf18gvl002toaqo6i10nsmp","tag_id":"cjlf18gwt007joaqorb1i314e","_id":"cjlf18gwu007toaqowerklgny"},{"post_id":"cjlf18gvl002toaqo6i10nsmp","tag_id":"cjlf18gwt007koaqoxjq6ztr9","_id":"cjlf18gwu007voaqoosldia81"},{"post_id":"cjlf18gvm002woaqoba41g92a","tag_id":"cjlf18gvl002soaqoil3f3xzd","_id":"cjlf18gwu007woaqomhgh3c7k"},{"post_id":"cjlf18gvm002woaqoba41g92a","tag_id":"cjlf18gws0075oaqopt2398a8","_id":"cjlf18gwv007yoaqosj3zogrz"},{"post_id":"cjlf18gvn002zoaqoi39lnkad","tag_id":"cjlf18gvl002soaqoil3f3xzd","_id":"cjlf18gwv007zoaqocykn31th"},{"post_id":"cjlf18gvn002zoaqoi39lnkad","tag_id":"cjlf18gwu007ooaqokpb51o0i","_id":"cjlf18gwv0080oaqox0z3guly"},{"post_id":"cjlf18gvo0033oaqo3qw6xzpc","tag_id":"cjlf18gwu007roaqo692wid65","_id":"cjlf18gwv0082oaqo9pn3lrgk"},{"post_id":"cjlf18gvo0033oaqo3qw6xzpc","tag_id":"cjlf18gwu007uoaqozk5hb2xv","_id":"cjlf18gwv0083oaqoiatktxnx"},{"post_id":"cjlf18gvq0037oaqoglt9iu9g","tag_id":"cjlf18gwv007xoaqoyh7gzwzg","_id":"cjlf18gww0087oaqof4yzle2w"},{"post_id":"cjlf18gvq0037oaqoglt9iu9g","tag_id":"cjlf18gwu007roaqo692wid65","_id":"cjlf18gww0088oaqop8z83oee"},{"post_id":"cjlf18gvq0037oaqoglt9iu9g","tag_id":"cjlf18gwv0084oaqolsskt8nf","_id":"cjlf18gww008aoaqovjbk5tfv"},{"post_id":"cjlf18gvq0037oaqoglt9iu9g","tag_id":"cjlf18gww0085oaqodekr6n3j","_id":"cjlf18gww008boaqozm8g4mhz"},{"post_id":"cjlf18gvr003aoaqosgcqjycg","tag_id":"cjlf18gwu007roaqo692wid65","_id":"cjlf18gwx008foaqo7t2n62vb"},{"post_id":"cjlf18gvr003aoaqosgcqjycg","tag_id":"cjlf18gww0089oaqo3cvvtdhn","_id":"cjlf18gwx008goaqoa3jg08ei"},{"post_id":"cjlf18gvr003aoaqosgcqjycg","tag_id":"cjlf18gwx008coaqoivbk7wl4","_id":"cjlf18gwx008ioaqodkzfkmjh"},{"post_id":"cjlf18gvr003aoaqosgcqjycg","tag_id":"cjlf18gwx008doaqob063quny","_id":"cjlf18gwx008joaqo53qnu7hz"},{"post_id":"cjlf18gvs003doaqowo0z3zu8","tag_id":"cjlf18gwb0054oaqoy2pj4540","_id":"cjlf18gwy008loaqovpkhb02v"},{"post_id":"cjlf18gvs003doaqowo0z3zu8","tag_id":"cjlf18gwx008hoaqowioy6rfm","_id":"cjlf18gwy008moaqotytd382f"},{"post_id":"cjlf18gvt003hoaqo74xzxtip","tag_id":"cjlf18gwy008koaqotu2wfbqu","_id":"cjlf18gwy008ooaqovouzq4yw"},{"post_id":"cjlf18gvu003koaqox8dtvr84","tag_id":"cjlf18gwy008noaqohr04jvd0","_id":"cjlf18gwy008qoaqozizrn79z"},{"post_id":"cjlf18gvv003ooaqo4ec9kaep","tag_id":"cjlf18gwy008poaqo6u19vqre","_id":"cjlf18gwz008toaqoatd1mtji"},{"post_id":"cjlf18gvv003ooaqo4ec9kaep","tag_id":"cjlf18gwy008roaqo9lulhvdh","_id":"cjlf18gwz008uoaqobvcjdxj8"},{"post_id":"cjlf18gvw003qoaqob0lpyzwf","tag_id":"cjlf18gwy008soaqo18t7o9ba","_id":"cjlf18gwz008woaqowl58dlzw"},{"post_id":"cjlf18gvy003uoaqocntrw66u","tag_id":"cjlf18gwz008voaqo6yvqret5","_id":"cjlf18gwz008yoaqopftzus54"},{"post_id":"cjlf18gvz003xoaqo6lcxupew","tag_id":"cjlf18gvl002soaqoil3f3xzd","_id":"cjlf18gwz0090oaqoje0luz9e"},{"post_id":"cjlf18gvz003xoaqo6lcxupew","tag_id":"cjlf18gwz008xoaqo4ph0mrzr","_id":"cjlf18gwz0091oaqo5gizl902"},{"post_id":"cjlf18gw00041oaqobcw2de7z","tag_id":"cjlf18gwz008zoaqo5fu2cwf0","_id":"cjlf18gx00093oaqoij4ixnqs"},{"post_id":"cjlf18gw20044oaqohpbtij8z","tag_id":"cjlf18gwz0092oaqoo525cew0","_id":"cjlf18gx00096oaqoaikpem2j"},{"post_id":"cjlf18gw20044oaqohpbtij8z","tag_id":"cjlf18gx00094oaqo78n1mq43","_id":"cjlf18gx00097oaqothjql9d0"},{"post_id":"cjlf18gw20047oaqoda7r6ybn","tag_id":"cjlf18gwz0092oaqoo525cew0","_id":"cjlf18gx1009boaqoubznlx2t"},{"post_id":"cjlf18gw20047oaqoda7r6ybn","tag_id":"cjlf18gx00098oaqoq6u4fz9a","_id":"cjlf18gx1009coaqokux7wqbp"},{"post_id":"cjlf18gw20047oaqoda7r6ybn","tag_id":"cjlf18gvx003soaqofbxysrtx","_id":"cjlf18gx1009eoaqo3y3zxlb9"},{"post_id":"cjlf18gw20047oaqoda7r6ybn","tag_id":"cjlf18gx00099oaqoi7ebergh","_id":"cjlf18gx1009foaqof91xq93k"},{"post_id":"cjlf18gw4004boaqolxrs3o84","tag_id":"cjlf18gwz0092oaqoo525cew0","_id":"cjlf18gx2009ioaqorbq0sglv"},{"post_id":"cjlf18gw4004boaqolxrs3o84","tag_id":"cjlf18gx00098oaqoq6u4fz9a","_id":"cjlf18gx2009joaqosfph5i4h"},{"post_id":"cjlf18gw4004boaqolxrs3o84","tag_id":"cjlf18gvx003soaqofbxysrtx","_id":"cjlf18gx2009loaqoruz7iwbm"},{"post_id":"cjlf18gw4004boaqolxrs3o84","tag_id":"cjlf18gx00099oaqoi7ebergh","_id":"cjlf18gx2009moaqovsi52t8n"},{"post_id":"cjlf18gw6004eoaqog6rp68ni","tag_id":"cjlf18gwu007roaqo692wid65","_id":"cjlf18gx3009ooaqottjsmbos"},{"post_id":"cjlf18gw6004eoaqog6rp68ni","tag_id":"cjlf18gx2009koaqoentwnl3u","_id":"cjlf18gx3009poaqo7c8i3wxu"},{"post_id":"cjlf18gw6004eoaqog6rp68ni","tag_id":"cjlf18gx2009noaqoc14ie3jr","_id":"cjlf18gx3009qoaqovnu3jjfb"},{"post_id":"cjlf18gxj009roaqoe0g3k940","tag_id":"cjlf18gxk009soaqog5f1xkrm","_id":"cjlf18gxl009woaqo1abwlmc8"},{"post_id":"cjlf18gxj009roaqoe0g3k940","tag_id":"cjlf18gxk009uoaqocmb80604","_id":"cjlf18gxl009xoaqoy428jh6z"},{"post_id":"cjlf18gxj009roaqoe0g3k940","tag_id":"cjlf18gxl009voaqovabxhrb1","_id":"cjlf18gxl009yoaqogvm2j5ip"},{"post_id":"cjlf18gxj009roaqoe0g3k940","tag_id":"cjlf18gwb0054oaqoy2pj4540","_id":"cjlf18gxl009zoaqos9677o0n"},{"post_id":"cjlf18gyy00a0oaqo3mx2c0t3","tag_id":"cjlf18gz000a1oaqoubdafupw","_id":"cjlf18gz000a3oaqow3snpw57"},{"post_id":"cjlf18gyy00a0oaqo3mx2c0t3","tag_id":"cjlf18gwy008poaqo6u19vqre","_id":"cjlf18gz000a4oaqouwvaa2pv"}],"Tag":[{"name":"Fibonacci","_id":"cjlf18guj0006oaqoa9wpnv6m"},{"name":"斐波那契","_id":"cjlf18gum000boaqo1ihr8637"},{"name":"echarts","_id":"cjlf18gup000goaqo3rk0g95q"},{"name":"自适应","_id":"cjlf18guu000ooaqo1v1df8k1"},{"name":"JS","_id":"cjlf18guw000toaqofmjw5jgz"},{"name":"排列组合","_id":"cjlf18guz0012oaqosweq6csv"},{"name":"登山","_id":"cjlf18gv00017oaqohsb5eu8y"},{"name":"梧桐山","_id":"cjlf18gv2001eoaqoq1s3y73t"},{"name":"深圳最高山","_id":"cjlf18gv5001joaqowfikiq9r"},{"name":"Palindrome","_id":"cjlf18gv9001qoaqovsjh5tmz"},{"name":"回文","_id":"cjlf18gvc001yoaqop4nj5fip"},{"name":"VSCode","_id":"cjlf18gve0025oaqoisfulrgp"},{"name":"Gist","_id":"cjlf18gvg002doaqomzifp1f6"},{"name":"Typora","_id":"cjlf18gvj002koaqo1kqw05ig"},{"name":"ubuntu","_id":"cjlf18gvl002soaqoil3f3xzd"},{"name":"数组求和","_id":"cjlf18gvp0036oaqox1h1o31w"},{"name":"蔡澜","_id":"cjlf18gvs003coaqop565iwc9"},{"name":"读后感","_id":"cjlf18gvv003moaqoo0ef5ly9"},{"name":"css","_id":"cjlf18gvx003soaqofbxysrtx"},{"name":"居中","_id":"cjlf18gw00040oaqowjr71u5y"},{"name":"e2e","_id":"cjlf18gw20046oaqo67jpt15s"},{"name":"es6","_id":"cjlf18gw6004goaqoea1dieti"},{"name":"element-ui","_id":"cjlf18gw7004koaqoyamunj00"},{"name":"封装","_id":"cjlf18gw8004roaqo85akp8yb"},{"name":"表单校验","_id":"cjlf18gw9004voaqoqttngyru"},{"name":"ES6","_id":"cjlf18gwa004zoaqoc6wrppum"},{"name":"单元测试","_id":"cjlf18gwb0054oaqoy2pj4540"},{"name":"单恋","_id":"cjlf18gwc0058oaqoy9j7k19f"},{"name":"东野圭吾","_id":"cjlf18gwc005boaqog7oyzpg0"},{"name":"element","_id":"cjlf18gwd005coaqoihdb3wed"},{"name":"表单验证","_id":"cjlf18gwd005foaqoupgz1utn"},{"name":"恶意","_id":"cjlf18gwh005joaqog51mjd37"},{"name":"animation","_id":"cjlf18gwi005koaqo1ck1p1r6"},{"name":"动画","_id":"cjlf18gwi005noaqolsuxeloj"},{"name":"github","_id":"cjlf18gwj005poaqoqvyiif5s"},{"name":"greatestCommonDivisor","_id":"cjlf18gwk005soaqoxmurn0vo"},{"name":"最大公约数","_id":"cjlf18gwl005voaqo8cqe8yxg"},{"name":"Hexo","_id":"cjlf18gwl005woaqo0xjosr0l"},{"name":"Next","_id":"cjlf18gwm005zoaqoxb6uxjc1"},{"name":"搜索","_id":"cjlf18gwm0060oaqoaj1nznau"},{"name":"hexo","_id":"cjlf18gwm0061oaqo6p8kwdhm"},{"name":"动态背景","_id":"cjlf18gwn0064oaqofdd4st4n"},{"name":"读书","_id":"cjlf18gwo0069oaqojffihkcr"},{"name":"柴静","_id":"cjlf18gwo006boaqoqqhphdqs"},{"name":"毛孔","_id":"cjlf18gwo006coaqogee0186o"},{"name":"护肤","_id":"cjlf18gwp006foaqosugae1n7"},{"name":"jenkins","_id":"cjlf18gwp006goaqoahcd754z"},{"name":"持续集成","_id":"cjlf18gwp006joaqo0z1ytuqq"},{"name":"自动化测试","_id":"cjlf18gwp006koaqoo92pv08g"},{"name":"2017","_id":"cjlf18gwp006loaqolzl5jflw"},{"name":"Object.is()","_id":"cjlf18gwq006ooaqoo2vx30uj"},{"name":"Nuxt.js","_id":"cjlf18gwq006roaqoqh03ub1p"},{"name":"ElementUI","_id":"cjlf18gwq006toaqoxvk829s5"},{"name":"NPM","_id":"cjlf18gwq006uoaqo8c4unsfk"},{"name":"正则基本使用","_id":"cjlf18gwr0070oaqogaddanxo"},{"name":"正则表达式","_id":"cjlf18gwr0073oaqodab627yy"},{"name":"git","_id":"cjlf18gws0075oaqopt2398a8"},{"name":"submodule","_id":"cjlf18gws0077oaqodgxkm1kz"},{"name":"reverse","_id":"cjlf18gws0078oaqoks8ka6ao"},{"name":"字符串反转","_id":"cjlf18gws007boaqo2utk3e3e"},{"name":"undefine","_id":"cjlf18gws007coaqoihhagg1t"},{"name":"boolean","_id":"cjlf18gwt007foaqo3un1kffu"},{"name":"number","_id":"cjlf18gwt007goaqo1os0bcf3"},{"name":"string","_id":"cjlf18gwt007hoaqohsj6tkff"},{"name":"object","_id":"cjlf18gwt007ioaqojmj6vl53"},{"name":"array","_id":"cjlf18gwt007joaqorb1i314e"},{"name":"function","_id":"cjlf18gwt007koaqoxjq6ztr9"},{"name":"shadowsocks","_id":"cjlf18gwu007ooaqokpb51o0i"},{"name":"ubuntu18.04","_id":"cjlf18gwu007roaqo692wid65"},{"name":"wps","_id":"cjlf18gwu007uoaqozk5hb2xv"},{"name":"ubuntu16.04","_id":"cjlf18gwv007xoaqoyh7gzwzg"},{"name":"MacOSX","_id":"cjlf18gwv0084oaqolsskt8nf"},{"name":"mongodb","_id":"cjlf18gww0085oaqodekr6n3j"},{"name":"TeamViewer","_id":"cjlf18gww0089oaqo3cvvtdhn"},{"name":"微信","_id":"cjlf18gwx008coaqoivbk7wl4"},{"name":"jdk-8","_id":"cjlf18gwx008doaqob063quny"},{"name":"unit test","_id":"cjlf18gwx008hoaqowioy6rfm"},{"name":"vue 教程","_id":"cjlf18gwy008koaqotu2wfbqu"},{"name":"validate 表单验证插件","_id":"cjlf18gwy008noaqohr04jvd0"},{"name":"vue","_id":"cjlf18gwy008poaqo6u19vqre"},{"name":"npm","_id":"cjlf18gwy008roaqo9lulhvdh"},{"name":"web前端","_id":"cjlf18gwy008soaqo18t7o9ba"},{"name":"网址","_id":"cjlf18gwz008voaqo6yvqret5"},{"name":"xmind","_id":"cjlf18gwz008xoaqo4ph0mrzr"},{"name":"NAP","_id":"cjlf18gwz008zoaqo5fu2cwf0"},{"name":"js","_id":"cjlf18gwz0092oaqoo525cew0"},{"name":"数组","_id":"cjlf18gx00094oaqo78n1mq43"},{"name":"html","_id":"cjlf18gx00098oaqoq6u4fz9a"},{"name":"面试","_id":"cjlf18gx00099oaqoi7ebergh"},{"name":"jpg","_id":"cjlf18gx2009koaqoentwnl3u"},{"name":"png","_id":"cjlf18gx2009noaqoc14ie3jr"},{"name":"karma","_id":"cjlf18gxk009soaqog5f1xkrm"},{"name":"mocha","_id":"cjlf18gxk009uoaqocmb80604"},{"name":"chai","_id":"cjlf18gxl009voaqovabxhrb1"},{"name":"webpack","_id":"cjlf18gz000a1oaqoubdafupw"}]}}